<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2010-2017 Evolveum
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->


<!--

This file is an example of Resource definition. It defines an AD resource
using an Identity Connector Framework AD connector and Connector Server.

This resource definition contains only the very basic definitions for midPoint to work.

-->

<objects xmlns="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
	xmlns:c="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
         xmlns:q="http://prism.evolveum.com/xml/ns/public/query-3"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:xsd="http://www.w3.org/2001/XMLSchema"
	xmlns:ri="http://midpoint.evolveum.com/xml/ns/public/resource/instance-3"
        xmlns:icfc="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/connector-schema-3"
	xmlns:icfs="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/resource-schema-3" xmlns:my="http://myself.me/schemas/whatever"
	xsi:schemaLocation="http://midpoint.evolveum.com/xml/ns/public/common/common-3 ../../../infra/schema/src/main/resources/xml/ns/public/common/common-3.xsd">

	<c:resource oid="ef2bc95b-76e0-48e2-86d6-3d4f02d3eaef">
    
    	<!-- Resource name. It will be displayed in GUI.  -->
		<name>Active Directory Advanced</name>
     
     	<!-- Reference to the ICF AD connector. OID is "virtual" for now. -->
		<connectorRef type="ConnectorType">
			<filter>
				<q:equal>
				<q:path>c:connectorType</q:path>
					<q:value>Org.IdentityConnectors.ActiveDirectory.ActiveDirectoryConnector</q:value>
				</q:equal>
			</filter>
		</connectorRef>

        <!-- Configuration section contains configuration of the connector,
             such as hostnames and passwords -->
		<connectorConfiguration>

            <!-- Configuration specific for the Active Directory connector -->
			<icfc:configurationProperties
			xmlns:icfcad="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/bundle/ActiveDirectory.Connector/Org.IdentityConnectors.ActiveDirectory.ActiveDirectoryConnector">
				<icfcad:DirectoryAdminName>administrator</icfcad:DirectoryAdminName>
				<icfcad:DirectoryAdminPassword><clearValue>secret</clearValue></icfcad:DirectoryAdminPassword>
				<icfcad:ObjectClass>User</icfcad:ObjectClass>
				<icfcad:Container>cn=Users,dc=example,dc=com</icfcad:Container>
				<icfcad:CreateHomeDirectory>true</icfcad:CreateHomeDirectory>
				<icfcad:LDAPHostName>localhost</icfcad:LDAPHostName><!-- This is the hostname of AD server as seen from the ConnectorServer instance! -->
				<icfcad:SearchChildDomains>false</icfcad:SearchChildDomains>
				<icfcad:DomainName>example.com</icfcad:DomainName>
  				<icfcad:SyncGlobalCatalogServer>null</icfcad:SyncGlobalCatalogServer>
				<icfcad:SyncDomainController>null</icfcad:SyncDomainController>
			</icfc:configurationProperties>

            <icfc:resultsHandlerConfiguration>  <!-- currently this requires latest Evolveum version of .net connector server -->
                <icfc:enableCaseInsensitiveFilter>true</icfc:enableCaseInsensitiveFilter>
            </icfc:resultsHandlerConfiguration>


        </connectorConfiguration>

        <!-- Resource schema definition.
             It defines all the object classes that are available to midPoint
             (accounts, groups, ...).

             This should be direct mapping of ICF schema (and therefore also
             LDAP schema). This is not supposed to be customized during deployment.
			 
			 The <schema> element is missing. That tells midPoint to generate it from
			 the resource on the first use of this resource definition.
		 -->

        <!-- Resource Schema Handling definition.
             This part defines how the schema defined above will be used by
             midPoint. It defines expressions and limitations for individual
             schema attributes.

             The expressions that describe both inbound and outbound flow of
             the attributes are defined in this section.

             This is the part where most of the customization takes place.
             
        -->

		<schemaHandling>
			<objectType>
				<displayName>Default Account</displayName>
				<default>true</default>
				<objectClass>ri:AccountObjectClass</objectClass>
				<attribute>
					<ref>ri:givenName</ref> <!-- required attribute on AD -->
					<displayName>Given Name</displayName>
					<outbound>
						<strength>weak</strength>
						<source>
							<path>$user/givenName</path>
						</source>
					</outbound>
				</attribute>
				<attribute>
					<ref>ri:sn</ref>
					<displayName>Surname</displayName>
					<outbound>
						<strength>weak</strength>
						<source>
							<path>$user/familyName</path>
						</source>
					</outbound>
				</attribute>
				<attribute>
					<ref>ri:sAMAccountName</ref> <!-- required attribute on AD -->
					<displayName>Login name</displayName>
					<outbound>
						<strength>weak</strength>
						<source>
							<path>$user/name</path>
						</source>
					</outbound>
				</attribute>

				<attribute>
					<ref>icfs:name</ref>
					<displayName>Distinguished Name</displayName>

					<limitations>
						<minOccurs>0</minOccurs>
						<access>
                            <read>true</read>
							<add>true</add>
						</access>
					</limitations>

					<outbound>
						<source>
							<path>$user/givenName</path>
						</source>
						<source>
							<path>$user/familyName</path>
						</source>
						<expression>
							<script>
								<code>'cn=' + givenName + ' ' + familyName + iterationToken + ',cn=Users,dc=example,dc=com'</code>
							</script>
						</expression>
					</outbound>
				</attribute>
				<attribute>
					<ref>ri:description</ref>
					<outbound>
						<strength>weak</strength>
						<expression>
							<value>Created by IDM</value>
						</expression>
					</outbound>
				</attribute>
				<attribute>
					<ref>ri:mail</ref>
					<outbound>
						<source>
							<path>$user/emailAddress</path>
						</source>
					</outbound>
				</attribute>
				<attribute><!-- This attribute must be set to
other than "false". We will set it to "true" to expire the password
immediately (after create). Note there is no "initial" attribute, because the
current implementation of forms would set the __PASSWORD_EXPIRED__ = false by
default, which is not what we want. But it works, because it is set to "true"
on the create, and on the update of other attributes, this attribute is not
changed, so this outbound will not be processed.
Please note that AD itself does not support changing the _PASSWORD_EXPIRED__
to "false". The only way of resetting the flag is to change user's password.
-->
					<ref>icfs:passwordExpired</ref>
					<outbound>
						<expression>
							<value>true</value>
						</expression>
					</outbound>
				</attribute>
				<iteration>
					<maxIterations>5</maxIterations>
				</iteration>
				<protected>
                <icfs:name>cn=Administrator,cn=Users,dc=example,dc=com</icfs:name>
            </protected>
				<activation>
				    <administrativeStatus>
						<outbound/>
				    </administrativeStatus>
				</activation>
				<credentials>
				    <password>
						<outbound/>
				    </password>
				</credentials>
			</objectType>
		</schemaHandling>
		<scripts>
			<script>
				<host>resource</host>
				<language>Shell</language>
				<argument>
					<value>jbond</value>
					<name>HOMEDIR</name>
				</argument>
				<code>
echo "after modify," >> C:\a.txt
exit
		</code>
                <operation>modify</operation>
                <order>after</order>
			</script>
<!--
		<script>
		<operation>modify</operation>
		<order>before</order>	
<language>Shell</language>	
<host>resource</host>	
		<argument>
		    <value>jbond</value>
		    <name>HOMEDIR</name>
		</argument>
		<code>
echo "before modify," >> C:\a.txt
exit
		</code>
		</script>

		<script>
		<operation>add</operation>
		<order>after</order>
<language>Shell</language>	
<host>resource</host>			
		<argument>
		    <value>jbond</value>
		    <name>HOMEDIR</name>
		</argument>
		<code>
echo "after create," >> C:\a.txt
exit
		</code>
		</script>

		<script>
		<operation>add</operation>
		<order>before</order>
<language>Shell</language>	
<host>resource</host>	
		<argument>
		    <value>jbond</value>
		    <name>HOMEDIR</name>
		</argument>		
<code>
echo "before create," >> C:\a.txt
exit
		</code>
		</script>-->
		</scripts>
	</c:resource>

</objects>
