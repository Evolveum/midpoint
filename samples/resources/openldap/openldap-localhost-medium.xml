<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2010-2017 Evolveum
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->


<!--

This file is an example of Resource definition. It defines an LDAP resource
using an Identity Connector Framework LDAP connector. It contains configuration
for use with OpenLDAP servers.

This is "Medium difficulty" resource definition.
It contains outbound mappings to correctly populate new accounts.
It also contains inbound mappings and definition to enable synchronization.

-->

<objects xmlns="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:c="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
         xmlns:t='http://prism.evolveum.com/xml/ns/public/types-3'
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:ri="http://midpoint.evolveum.com/xml/ns/public/resource/instance-3"
         xmlns:icfc="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/connector-schema-3"
         xmlns:my="http://whatever.com/my"
         xmlns:q="http://prism.evolveum.com/xml/ns/public/query-3"
         xmlns:mr="http://prism.evolveum.com/xml/ns/public/matching-rule-3"
         xmlns:cap="http://midpoint.evolveum.com/xml/ns/public/resource/capabilities-3">

		 
    <resource oid="d0811790-1d80-11e4-86b2-3c970e467874">

        <!-- Resource name. It will be displayed in GUI.  -->
        <name>OpenLDAP</name>

        <description>
            LDAP resource using a ConnId LDAP connector. It contains configuration
            for use with OpenLDAP servers.
        </description>

        <connectorRef type="ConnectorType">
            <description>
                Reference to the OpenICF LDAP connector. This is dynamic reference, it will be translated to
                OID during import.
            </description>
            <filter>
                <q:equal>
				<q:path>c:connectorType</q:path>
                    <q:value>com.evolveum.polygon.connector.ldap.LdapConnector</q:value>
                </q:equal>
            </filter>
        </connectorRef>

        <!-- Configuration section contains configuration of the connector,
             such as hostnames and passwords -->
       <connectorConfiguration 
			xmlns:icfc="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/connector-schema-3"
			xmlns:icfcldap="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/bundle/com.evolveum.polygon.connector-ldap/com.evolveum.polygon.connector.ldap.LdapConnector">
		<icfc:configurationProperties>
			<icfcldap:port>389</icfcldap:port>
			<icfcldap:host>localhost</icfcldap:host>
			<icfcldap:baseContext>dc=example,dc=com</icfcldap:baseContext>
			<icfcldap:bindDn>cn=idm,ou=Administrators,dc=example,dc=com</icfcldap:bindDn>
			<icfcldap:bindPassword><t:clearValue>secret</t:clearValue></icfcldap:bindPassword>
			<icfcldap:usePermissiveModify>always</icfcldap:usePermissiveModify>
			<icfcldap:pagingStrategy>auto</icfcldap:pagingStrategy>
			<icfcldap:passwordHashAlgorithm>SSHA</icfcldap:passwordHashAlgorithm>
			<icfcldap:vlvSortAttribute>uid</icfcldap:vlvSortAttribute>
			<icfcldap:vlvSortOrderingRule>2.5.13.3</icfcldap:vlvSortOrderingRule>
			<icfcldap:operationalAttributes>memberOf</icfcldap:operationalAttributes>
			<icfcldap:operationalAttributes>createTimestamp</icfcldap:operationalAttributes>
		</icfc:configurationProperties>
		<icfc:resultsHandlerConfiguration>
			<icfc:enableNormalizingResultsHandler>false</icfc:enableNormalizingResultsHandler>
			<icfc:enableFilteredResultsHandler>false</icfc:enableFilteredResultsHandler>
			<icfc:enableAttributesToGetSearchResultsHandler>false</icfc:enableAttributesToGetSearchResultsHandler>
		</icfc:resultsHandlerConfiguration>
	</connectorConfiguration>
               

        <!-- Resource schema definition.
             It defines all the object classes that are available to midPoint
             (accounts, groups, ...).
              -->
      <schema>
	  <!-- The schema will be generated by midPoint when the resource is first used -->

		  <!-- workaround to MID-2723 -->
		  <generationConstraints>
			  <generateObjectClass>ri:inetOrgPerson</generateObjectClass>
			  <generateObjectClass>ri:groupOfUniqueNames</generateObjectClass>
			  <generateObjectClass>ri:groupOfNames</generateObjectClass>
			  <generateObjectClass>ri:organizationalUnit</generateObjectClass>
		  </generationConstraints>

	  </schema>
	
	
        <!-- Resource Schema Handling definition.
             This part defines how the schema defined above will be used by
             midPoint. It defines expressions and limitations for individual
             schema attributes.

             The expressions that describe both inbound and outbound flow of
             the attributes are defined in this section.

             This is the part where most of the customization takes place.
        -->
   
	
	<schemaHandling>
		<objectType>
			<kind>account</kind>
			<displayName>Normal Account</displayName>
			<default>true</default>
			<objectClass>ri:inetOrgPerson</objectClass>
			<attribute>
				<ref>ri:dn</ref>
				<displayName>Distinguished Name</displayName>
				<limitations>
					<minOccurs>0</minOccurs>
					<access>
                        <read>true</read>
						<add>true</add>
						<modify>true</modify>
					</access>
				</limitations>
				<matchingRule>mr:stringIgnoreCase</matchingRule>
				<outbound>
					<source>
						<path>$user/name</path>
					</source>
					<expression>
						<script>
							<!-- No explicit script language was specified. It means that this is Groovy -->
							<code>
								'uid=' + name + iterationToken + ',ou=people,dc=example,dc=com'
							</code>
						</script>
					</expression>
				</outbound>
			</attribute>
			<attribute>
				<ref>ri:entryUUID</ref>
				<displayName>Entry UUID</displayName>
				<limitations>
					<access>
                        <read>true</read>
						<add>false</add>
						<modify>true</modify>
					</access>
				</limitations>
				<matchingRule>mr:stringIgnoreCase</matchingRule>
			</attribute>
			<attribute>
				<ref>ri:cn</ref>
				<displayName>Common Name</displayName>
				<limitations>
					<minOccurs>0</minOccurs>
					<access>
                        <read>true</read>
						<add>true</add>
						<modify>true</modify>
					</access>
				</limitations>

				<outbound>
					<source>
						<path>$user/fullName</path>
					</source>
				</outbound>
				<inbound>
					<target>
						<path>$user/fullName</path>
					</target>
				</inbound>
			</attribute>
			<attribute>
				<ref>ri:sn</ref>
				<displayName>Surname</displayName>
				<limitations>
					<minOccurs>0</minOccurs>
				</limitations>
				<outbound>
					<source>
						<!-- The path can be shorteden like this. $user is a default source "context" in outbound -->
						<path>familyName</path>
					</source>
				</outbound>
				<inbound>
					<target>
						<!-- The path can be shorteden like this. $user is a default target "context" in inbound -->
						<path>familyName</path>
					</target>
				</inbound>
			</attribute>
			<attribute>
				<ref>ri:givenName</ref>
				<displayName>Given Name</displayName>
				<outbound>
					<source>
						<!-- Full namespace prefixes can be used in the path -->
						<path>$c:user/c:givenName</path>
					</source>
				</outbound>
				<inbound>
					<target>
						<path>$c:user/c:givenName</path>
					</target>
				</inbound>
			</attribute>
			<attribute>
				<ref>ri:uid</ref>
				<displayName>Login Name</displayName>
				<matchingRule>mr:stringIgnoreCase</matchingRule>
				<outbound>
					<strength>weak</strength>
					<source>
						<description>Source may have description</description>
						<path>$user/name</path>
					</source>
					<!-- We need to put iterationToken here as well, otherwise effect described in MID-2139 occurs -->
					<expression>
						<script>
							<code>name + iterationToken</code>
						</script>
					</expression>
				</outbound>
				<inbound>
					<target>
						<description>Targets may have description</description>
						<path>$c:user/c:name</path>
                    </target>
				</inbound>
			</attribute>
			<attribute>
				<ref>ri:description</ref>
				<outbound>
					<strength>weak</strength>
					<expression>
						<description>Expression that assigns a fixed value</description>
						<value>Created by midPoint</value>
					</expression>
				</outbound>
			</attribute>
			<attribute>
				<ref>ri:l</ref>
				<displayName>Location</displayName>
				<outbound>
					<source>
						<path>$user/locality</path>
					</source>
				</outbound>
			</attribute>
			<attribute>
				<ref>ri:employeeType</ref>
				<displayName>Employee Type</displayName>
				<tolerant>false</tolerant>
				<outbound>
					<source>
						<path>$user/employeeType</path>
					</source>
				</outbound>
			</attribute>
						
			<association>
				<ref>ri:group</ref>
				<displayName>LDAP Group Membership</displayName>
				<kind>entitlement</kind>
				<intent>ldapGroup</intent>
				<direction>objectToSubject</direction>
				<associationAttribute>ri:member</associationAttribute>
				<valueAttribute>ri:dn</valueAttribute>
			</association>
			
			<iteration>
				<maxIterations>5</maxIterations>
			</iteration>
			
			<protected>
       			<filter>
	       			<q:equal>
	       				<q:matching>http://prism.evolveum.com/xml/ns/public/matching-rule-3#stringIgnoreCase</q:matching>
		            	<q:path>attributes/ri:dn</q:path>
		                <q:value>cn=idm,ou=Administrators,dc=example,dc=com</q:value>
		            </q:equal>
	            </filter>
			</protected>
            
			<activation>
                <administrativeStatus>
                    <outbound/>
                    <inbound>
                    	<strength>weak</strength>
                        <expression>
                            <asIs/>
                        </expression>
                    </inbound>
                </administrativeStatus>
            </activation>
			
            <credentials>
                <password>
                    <outbound>
                    	<expression>
                        	<asIs/>
                        </expression>
                    </outbound>
                    <inbound>
                    	<strength>weak</strength>
                        <expression>
                            <generate/>
                        </expression>
                    </inbound>
                </password>
            </credentials>

		</objectType>
		
		<objectType>
			<kind>entitlement</kind>
			<intent>ldapGroup</intent>
			<displayName>LDAP Group</displayName>
			<objectClass>ri:groupOfNames</objectClass>

			<attribute>
				<ref>ri:dn</ref>
				<matchingRule>mr:stringIgnoreCase</matchingRule>
				<outbound>
					<!-- Name cannot be weak. Changes in name trigger object rename. -->
					<source>
						<path>$focus/name</path>
					</source>
					    <expression>
					    	<script>
							<code>
								import javax.naming.ldap.Rdn
								import javax.naming.ldap.LdapName
								
								dn = new LdapName('ou=groups,dc=example,dc=com')
								dn.add(new Rdn('cn', name.toString()))
								return dn.toString()
							</code>
						</script>
					    </expression>
				</outbound>
			</attribute>
			<attribute>
				<ref>ri:member</ref>
				<matchingRule>mr:distinguishedName</matchingRule>
				<fetchStrategy>minimal</fetchStrategy>
				<outbound>
					<strength>strong</strength>
					<!-- Workaround - groupOfNames MUST have at least one member. Even non-existent DN. -->
					<expression>
						<value>cn=dummy,o=whatever</value>
					</expression>
				</outbound>
			</attribute>			
			<attribute>
				<ref>ri:cn</ref>
				<matchingRule>mr:stringIgnoreCase</matchingRule>
				<outbound>
					<strength>weak</strength>
					<source>
						<path>$focus/name</path>
					</source>
				</outbound>
			</attribute>
			<attribute>
				<ref>ri:description</ref>
				<outbound>
					<source>
						<path>description</path>
					</source>
				</outbound>
			</attribute>
			<configuredCapabilities>
				<cap:pagedSearch>
					<cap:defaultSortField>ri:cn</cap:defaultSortField>
				</cap:pagedSearch>
			</configuredCapabilities>
		</objectType>
	</schemaHandling>

<!--
    <capabilities>
    	<configured>
            <cap:activation>
                <cap:status>
                    <cap:attribute>ri:ds-pwp-account-disabled</cap:attribute>
                    <cap:enableValue/>
                    <cap:disableValue>true</cap:disableValue>
                </cap:status>
            </cap:activation>
    	</configured>
    </capabilities>
-->

        <!--
            Synchronization section describes the synchronization policy, timing,
            reactions and similar synchronization settings.
        -->
        <synchronization>
        	<objectSynchronization>
	            <!--
	                The synchronization for this resource is enabled.
	                It means that the synchronization will react to changes detected by
	                the system (live sync task, discovery or reconciliation) -->
	            <enabled>true</enabled>
	
	            <correlation>
	                <q:description>
	                    Correlation expression is a search query.
	                    Following search query will look for users that have "name"
	                    equal to the "uid" attribute of the account. Simply speaking,
	                    it will look for match in usernames in the IDM and the resource.
	                    The correlation rule always looks for users, so it will not match
	                    any other object type.
	                </q:description>
	                <q:equal>
	                    <q:path>name</q:path>
	                    <expression>
							<path>
								declare namespace ri="http://midpoint.evolveum.com/xml/ns/public/resource/instance-3";
								$account/attributes/ri:uid
							</path>
	                    </expression>
	                </q:equal>
	            </correlation>
	
	            <!-- Confirmation rule may be here, but as the search above will
	                 always return at most one match, the confirmation rule is not needed. -->
	
	            <!-- Following section describes reactions to a situations.
	                 The setting here assumes that this resource is authoritative,
	                 therefore all accounts created on the resource should be
	                 reflected as new users in IDM.
	                 See http://wiki.evolveum.com/display/midPoint/Synchronization+Situations
	             -->
	
	            <reaction>
	                <situation>linked</situation>
	                <synchronize>true</synchronize>
	            </reaction>
	            <reaction>
	                <situation>deleted</situation>
	                <synchronize>true</synchronize>
		            <action>
		            	<handlerUri>http://midpoint.evolveum.com/xml/ns/public/model/action-3#unlink</handlerUri>
		            </action>
	            </reaction>
	
	            <reaction>
	                <situation>unlinked</situation>
	                <synchronize>true</synchronize>
		            <action>
		            	<handlerUri>http://midpoint.evolveum.com/xml/ns/public/model/action-3#link</handlerUri>
		            </action>
	            </reaction>
	            <reaction>
	                <situation>unmatched</situation>
	                <synchronize>true</synchronize>
		            <action>
		            	<handlerUri>http://midpoint.evolveum.com/xml/ns/public/model/action-3#addFocus</handlerUri>
		            </action>
	            </reaction>
			</objectSynchronization>
        </synchronization>

    </resource>

</objects>
