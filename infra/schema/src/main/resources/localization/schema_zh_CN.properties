# Copyright (c) 2010-2017 Evolveum
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
#
# This file contains localization keys that describe elements of the data
# model: object types, properties, container types, etc.
# It may also contain keys for concepts that are common to the whole midPoint
#
AbstractRoleType.identifier=标识符
AbstractRoleType.policyConstraints=策略约束
AccessCertificationCampaignStateType.CLOSED=已关闭
AccessCertificationCampaignStateType.CREATED=已创建
AccessCertificationCampaignStateType.IN_REMEDIATION=补救中
AccessCertificationCampaignStateType.IN_REVIEW_STAGE_FULL=处于审阅阶段{0}（{1}）
AccessCertificationCampaignStateType.IN_REVIEW_STAGE=处于审阅阶段
AccessCertificationCampaignStateType.REVIEW_STAGE_DONE_FULL=完成审阅阶段{0}（{1}）
AccessCertificationCampaignStateType.REVIEW_STAGE_DONE=审阅阶段完成
AccessCertificationResponseType.ACCEPT=接受
AccessCertificationResponseType.REVOKE=撤销
AccessCertificationResponseType.REDUCE=降低
AccessCertificationResponseType.NOT_DECIDED=未决定
AccessCertificationResponseType.DELEGATE=委托
AccessCertificationResponseType.NO_RESPONSE=无响应
ActivationStatusType.ARCHIVED=已归档
ActivationStatusType.DISABLED=已禁用
ActivationStatusType.ENABLED=已启用
ActivationStatusType.null=未定义
ActivationType.administrativeStatus=管理状态
ActivationType.effectiveStatus=有效状态
ActivationType.enabled=已启用
ActivationType.properties=属性
ActivationType.title=激活
ActivationType.validFrom=有效始于
ActivationType.validTo=有效至
ActivityType.FOCUS_OPERATION=主对象中的操作（存储库）
ActivityType.NOTIFICATIONS=发送通知
ActivityType.PROJECTOR=计算主对象的投射关系
ActivityType.RESOURCE_OBJECT_OPERATION=资源对象中的操作
ActivityType.WORKFLOWS=考虑或启动审批工作流
AssignmentPolicyEnforcementType.FULL=全部
AssignmentPolicyEnforcementType.LEGALIZE=合法化
AssignmentPolicyEnforcementType.MARK=标记
AssignmentPolicyEnforcementType.NONE=无
AssignmentPolicyEnforcementType.POSITIVE=积极的
AssignmentPolicyEnforcementType.RELATIVE=相对的
AssignmentType.description=描述
AssignmentType.description.help=Free-form description of the assignment (comment).
AssignmentType.activation=激活
AssignmentType.lifecycleState=生命周期状态
AssignmentType.lifecycleState.help=Lifecycle state of the assignment. This property defines whether the assignment represents a draft, proposed definition, whether it is active, deprecated, and so on.
AssignmnetType.accepted=Accepted
AssignmentType.policyRule=策略规则
AssignmentType.policyRule.help=Policy rule that should be applied to the target object.
AssignmentType.policySituation=Policy situation
AssignmentType.policySituation.help=The policy situation(s) of this assignment. The situations are result of evaluation of the policy rules.
AssignmentType.order=排序
AssignmentType.order.help=Order of the inducement. Simply speaking order specifies the number of assignments that the evaluation must traverse to apply the inducement.
AssignmentType.target=目标
AssignmentType.target.help=Target of assignment or inducement. This is the role, org or service that is assigned.
AssignmentType.focusType=主对象类型
AssignmentType.focusType.help=Type of focal object that this assignment/inducement applies to. E.g UserType, RoleType, OrgType, ...
AssignmentType.tenant=租户
AssignmentType.tenantReference=租户参考
AssignmentType.tenantReference.help=Reference to the tenant to which this assignment is associated with. This is an argument to the target of this assignment. E.g. is if frequently used to parametrize the role which is assigned by this assignment.
AssignmentType.orgReference=Organization reference
AssignmentType.orgReferenceShorten=Org. reference
AssignmentType.orgReference.help=Reference to the organization (org. unit, project, ...) which this assignment is associated with. This is an argument to the target of this assignment. E.g. is if frequently used to parametrize the role which is assigned by this assignment.
AttributeFetchStrategyType.EXPLICIT=显示
AttributeFetchStrategyType.IMPLICIT=隐式
AttributeFetchStrategyType.MINIMAL=最小
AuditEventStageType.EXECUTION=执行
AuditEventStageType.REQUEST=请求
AuditEventType.ADD_OBJECT=添加对象
AuditEventType.CREATE_SESSION=创建会话
AuditEventType.DELETE_OBJECT=删除dui'xia
AuditEventType.EXECUTE_CHANGES_RAW=执行原始变更
AuditEventType.GET_OBJECT=获取对象
AuditEventType.MODIFY_OBJECT=修改对象
AuditEventType.null=所有
AuditEventType.RECONCILIATION=复核
AuditEventType.SYNCHRONIZATION=同步
AuditEventType.TERMINATE_SESSION=结束会话
AuditEventTypeType.ADD_OBJECT=添加对象
AuditEventTypeType.CREATE_SESSION=创建会话
AuditEventTypeType.DELETE_OBJECT=删除对象
AuditEventTypeType.EXECUTE_CHANGES_RAW=执行原始变更
AuditEventTypeType.GET_OBJECT=获取对象
AuditEventTypeType.MODIFY_OBJECT=修改对象
AuditEventTypeType.null=全部
AuditEventTypeType.RECONCILIATION=复核
AuditEventTypeType.SYNCHRONIZATION=同步
AuditEventTypeType.TERMINATE_SESSION=结束会话
AuditEventTypeType.WORKFLOW_PROCESS_INSTANCE=工作流实例
AuditEventTypeType.WORK_ITEM=工作项
AuditEventType.WORKFLOW_PROCESS_INSTANCE=工作流实例
AuditEventType.WORK_ITEM=工作项
OperationResultStatusType.FATAL_ERROR=致命错误
OperationResultStatusType.HANDLED_ERROR=处理的错误
OperationResultStatusType.IN_PROGRESS=进行中
OperationResultStatusType.NOT_APPLICABLE=不适用
OperationResultStatusType.PARTIAL_ERROR=部分错误
OperationResultStatusType.SUCCESS=成功
OperationResultStatusType.UNKNOWN=未知
OperationResultStatusType.WARNING=警告
BeforeAfterType.AFTER=之后
BeforeAfterType.BEFORE=之前
Boolean.FALSE=假
Boolean.NULL=未定义
Boolean.TRUE=真
CapabilitiesType.activation=激活
CapabilitiesType.activationStatus=激活状态
CapabilitiesType.activationLockoutStatus=激活锁定
CapabilitiesType.activationValidity=激活有效性
CapabilitiesType.credentials=凭证
CapabilitiesType.password=密码
CapabilitiesType.liveSync=实时同步
CapabilitiesType.testConnection=测试连接
CapabilitiesType.schema=架构
CapabilitiesType.create=创建
CapabilitiesType.update=更新
CapabilitiesType.addRemoveAttributeValues=添加/移除值
CapabilitiesType.countObjects=计数对象
CapabilitiesType.delete=删除
CapabilitiesType.read=读取
CapabilitiesType.auxiliaryObjectClasses=辅助对象类
CapabilitiesType.pagedSearch=分页搜索
CapabilitiesType.script=脚本
ChangeType.ADD=添加
ChangeType.DELETE=删除
ChangeType.MODIFY=修改
ConnectorOperationalStatus.connectorClassName=连接器类名称
ConnectorOperationalStatus.poolConfigMinSize=最小池数量
ConnectorOperationalStatus.poolConfigMaxSize=最大池数量
ConnectorOperationalStatus.poolConfigMinIdle=最小空闲连接器
ConnectorOperationalStatus.poolConfigMaxIdle=最大空闲连接器
ConnectorOperationalStatus.poolConfigWaitTimeout=等待超时
ConnectorOperationalStatus.poolConfigMinEvictableIdleTime=最小可回收空闲时间
ConnectorOperationalStatus.poolStatusNumIdle=空闲连接器的数量
ConnectorOperationalStatus.poolStatusNumActive=活动连接器的数量
AbstractConstructionType.description=描述
AbstractConstructionType.strength=强度
AbstractConstructionType.strength.help=Strength of the construction defines how aggressively will the construction be applied.
ConstructionType.kind=类型
ConstructionType.kind.help=Kind of resource object that should be created on the resource.
ConstructionType.intent=用途
ConstructionType.intent.help=Intent of resource object that should be created on the resource.
ConstructionType.auxiliaryObjectClass=扩展Object Class
ConstructionType.auxiliaryObjectClass.help=The reference to additional type definitions for this object. These auxiliary object classes will be added to the resource object when the construction is provisioned.
FocusType.activation=激活
FocusType.assignment=分配
FocusType.inducement=间接分配
FocusType.delegations=委托
FocusType.delegatedToMe=委托给我
FocusType.displayName=显示名称
LockoutStatusType.LOCKED=已锁定
LockoutStatusType.NORMAL=正常
LockoutStatusType.UNDEFINED=未定义
LoggingComponentType.ALL=全部
LoggingComponentType.GUI=GUI日志
LoggingComponentType.WEB=Web日志
LoggingComponentType.MODEL=模型日志
LoggingComponentType.NOTIFICATIONS = 通知日志
LoggingComponentType.PROVISIONING=预配日志
LoggingComponentType.REPOSITORY=存储库日志
LoggingComponentType.RESOURCEOBJECTCHANGELISTENER=资源对象变更监听器日志
LoggingComponentType.TASKMANAGER=任务管理器日志
LoggingComponentType.WORKFLOWS = 工作流日志
LoggingComponentType.ACCESS_CERTIFICATION = 访问鉴定日志
LoggingComponentType.SECURITY = 安全日志
LoggingLevelType.ALL=全部
LoggingLevelType.DEBUG=调试
LoggingLevelType.ERROR=错误
LoggingLevelType.INFO=信息
LoggingLevelType.OFF=关闭
LoggingLevelType.TRACE=跟踪
LoggingLevelType.WARN=警告
MailTransportSecurityType.NONE=无
MailTransportSecurityType.SSL=SSL
MailTransportSecurityType.STARTTLS_ENABLED=StartSSL已启用
MailTransportSecurityType.STARTTLS_REQUIRED=StartSSL必须的
MappingStrengthType.NORMAL=正常
MappingStrengthType.STRONG=强制
MappingStrengthType.WEAK=弱
MisfireActionType.EXECUTE_IMMEDIATELY=立刻执行
MisfireActionType.RESCHEDULE=重新调度
NodeExecutionStatusType.COMMUNICATION_ERROR=无法连接
NodeExecutionStatusType.DOWN=关闭
NodeExecutionStatusType.ERROR=错误
NodeExecutionStatusType.PAUSED=已停止
NodeExecutionStatusType.RUNNING=运行中
ObjectType.description=描述
ObjectType.AbstractRoleType=抽象角色
ObjectType.AccessCertificationCampaignType=访问鉴定活动
ObjectType.AccessCertificationDefinitionType=访问鉴定定义
ObjectType.AccountType=账号
ObjectType.ConnectorType=连接器
ObjectType.ConnectorHostType=连接器主机
ObjectType.FocusType=主对象
ObjectType.GenericObjectType=通用对象
ObjectType.LookupTableType=查找表
ObjectType.NodeType=节点
ObjectType.ObjectType=对象
ObjectType.ObjectTemplateType=对象模板
ObjectType.OrgManagerType=组织管理者
ObjectType.OrgType=组织
ObjectType.ReportOutputType=报表输出
ObjectType.ReportType=报表
ObjectType.ResourceType=资源
ObjectType.RoleType=角色
ObjectType.SecurityPolicyType=安全策略
ObjectType.SequenceType=序列
ObjectType.ShadowType=影子
ObjectType.SystemConfigurationType=系统配置
ObjectType.TaskType=任务
ObjectType.UserType=用户
ObjectType.ServiceType=服务
ObjectType.ValuePolicyType=值策略
ObjectTypeLowercase.AbstractRoleType=abstract role
ObjectTypeLowercase.AccessCertificationCampaignType=access certification campaign
ObjectTypeLowercase.AccessCertificationDefinitionType=access certification definition
ObjectTypeLowercase.AccountType=account
ObjectTypeLowercase.ConnectorType=connector
ObjectTypeLowercase.ConnectorHostType=connector host
ObjectTypeLowercase.FocusType=focus
ObjectTypeLowercase.GenericObjectType=generic object
ObjectTypeLowercase.LookupTableType=lookup table
ObjectTypeLowercase.NodeType=node
ObjectTypeLowercase.ObjectType=object
ObjectTypeLowercase.ObjectTemplateType=object template
ObjectTypeLowercase.OrgManagerType=org. manager
ObjectTypeLowercase.OrgType=organization
ObjectTypeLowercase.ReportOutputType=report output
ObjectTypeLowercase.ReportType=report
ObjectTypeLowercase.ResourceType=resource
ObjectTypeLowercase.RoleType=role
ObjectTypeLowercase.SecurityPolicyType=security policy
ObjectTypeLowercase.SequenceType=sequence
ObjectTypeLowercase.ShadowType=shadow
ObjectTypeLowercase.SystemConfigurationType=system configuration
ObjectTypeLowercase.TaskType=task
ObjectTypeLowercase.UserType=用户
ObjectTypeLowercase.ServiceType=service
ObjectTypeLowercase.ValuePolicyType=value policy
ObjectType.name=名称
ObjectType.parentOrgRef=父级组织单元
ObjectType.subtype=Subtype
OrgType.costCenter=成本中心
OrgType.displayName=显示名称
OrgType.identifier=标识符
OrgType.mailDomain=邮件域
OrgType.orgType=组织类型
OrgType.requestable=可请求的
OrgType.tenant=租户
OriginType.ACTIVATIONS=激活
OriginType.ASSIGNMENTS=分配
OriginType.CREDENTIALS=凭证
OriginType.INBOUND=入站
OriginType.null=-
OriginType.OUTBOUND=出站
OriginType.RECONCILIATION=复核
OriginType.SYNC_ACTION=同步操作
OriginType.USER_ACTION=用户操作
OriginType.USER_POLICY=用户策略
AccessCertificationCaseOutcomeStrategyType.ONE_ACCEPT_ACCEPTS = Any "accept" accepts
AccessCertificationCaseOutcomeStrategyType.ONE_DENY_DENIES = Any "deny" denies
AccessCertificationCaseOutcomeStrategyType.ACCEPTED_IF_NOT_DENIED = 如果没有拒绝，则接受
AccessCertificationCaseOutcomeStrategyType.ALL_MUST_ACCEPT = 只有所有审阅人接受才接受
AccessCertificationRemediationStyleType.AUTOMATED=自动化复核（非合规项自动删除）
AccessCertificationRemediationStyleType.REPORT_ONLY=手工复核（报告不合规项）
PolicyConstraintEnforcementType.ENFORCE=强制
PolicyConstraintEnforcementType.REMEDIATE=补救
PolicyConstraintEnforcementType.REPORT=报表
ReportType.export=导出
ReportType.orientation=方向
ReportType.parent=父级
ReportType.useHibernateSession=使用Hibernate会话
ReportType.virtualizer=Jasper虚拟化
ReportType.virtualizerKickOn=虚拟的页面的kick-on
ReportType.maxPages=最大页数
ReportType.timeout=执行超时时间[毫秒]
ResourceObjectAssociationDirectionType.OBJECT_TO_SUBJECT=主对象到从对象
ResourceObjectAssociationDirectionType.SUBJECT_TO_OBJECT=从对象到主对象
ResourceObjectTypeDependencyStrictnessType.LAX=Lax
ResourceObjectTypeDependencyStrictnessType.RELAXED=Relaxed
ResourceObjectTypeDependencyStrictnessType.STRICT=Strict
ShadowType.dead=僵死
ShadowType.kind=类型
ShadowType.failedOperationType=失败的操作类型
ShadowType.exists=已存在
ShadowType.intent=用途
ShadowType.objectClass=对象类
ShadowType.synchronizationSituation=条件
ShadowKindType.ACCOUNT=账号
ShadowKindType.ENTITLEMENT=授权
ShadowKindType.GENERIC=通用
SynchronizationSituationType.DELETED=已删除
SynchronizationSituationType.DISPUTED=争议的
SynchronizationSituationType.LINKED=已链接
SynchronizationSituationType.null=请选择
SynchronizationSituationType.UNLINKED=未链接的
SynchronizationSituationType.UNMATCHED=未匹配的
ThreadStopActionType.CLOSE=关闭
ThreadStopActionType.RESCHEDULE=重新调度
ThreadStopActionType.RESTART=重新启动
ThreadStopActionType.SUSPEND=挂起
FocusType.emailAddress=电子邮件
UserType.familyName=家族名
UserType.fullName=全名
UserType.givenName=名字
FailedOperationTypeType.ADD=添加
FailedOperationTypeType.GET=获取
FailedOperationTypeType.MODIFY=修改
FailedOperationTypeType.DELETE=删除
AbstractRoleType.description=描述
AbstractRoleType.displayName=显示名称
TaskType.kind=类型
TaskType.intent=用途
TaskType.objectClass=对象类
TaskType.executionStatus=状态
ObjectTypes.CONNECTOR=连接器
ObjectTypes.CONNECTOR_HOST=连接器主机
ObjectTypes.GENERIC_OBJECT=通用对象
ObjectTypes.RESOURCE=资源
ObjectTypes.USER=用户
ObjectTypes.OBJECT_TEMPLATE=对象模板
ObjectTypes.SYSTEM_CONFIGURATION=系统配置
ObjectTypes.TASK=任务
ObjectTypes.SHADOW=影子
ObjectTypes.ROLE=角色
ObjectTypes.PASSWORD_POLICY=密码策略
ObjectTypes.NODE=节点
ObjectTypes.ORG=组织
ObjectTypes.ABSTRACT_ROLE=抽象角色
ObjectTypes.FOCUS_TYPE=主对象类型
ObjectTypes.REPORT=报表
ObjectTypes.REPORT_OUTPUT=报表输出
ObjectTypes.SECURITY_POLICY=安全策略
ObjectTypes.LOOKUP_TABLE=查找表
ObjectTypes.ACCESS_CERTIFICATION_DEFINITION=鉴定定义
ObjectTypes.ACCESS_CERTIFICATION_CAMPAIGN=鉴定活动
ObjectTypes.SEQUENCE=序列
ObjectTypes.SERVICE=服务
ObjectTypes.OBJECT=对象
ObjectTypes.FORM=表单
ObjectTypes.CASE=场景
ObjectTypes.FUNCTION_LIBRARY=Function library
OrgType.parentOrganization=父级组织
ObjectType.extension=扩展
FocusType.assignmentKey=分配
FocusType.jpegPhoto=JPEG相片
UserType.additionalName=额外名称
UserType.nickname=昵称
UserType.honorificPrefix=敬语前缀
UserType.honorificSuffix=敬语后缀
UserType.title=头衔
FocusType.preferredLanguage=首选语言
FocusType.locale=本地
FocusType.timezone=时区
UserType.telephoneNumber=电话号码
UserType.employeeNumber=员工编号
UserType.employeeType=员工类型
UserType.emailAddress=电子邮件
FocusType.costCenter=成本中心
UserType.organization=组织
UserType.organizationalUnit=组织单元
FocusType.locality=本地
UserType.credentials=凭证
CredentialsType.password=密码
CredentialsType.securityQuestions=安全问题
AssignmentType.assignment=分配
AssignmentType.target=目标
AssignmentType.construction=构造
AssignmentType.tenantReference=租户参考
AssignmentType.orgReference=Organization reference
ActivationType.activation=激活
ActivationType.validityStatus=有效性状态
ActivationType.lockOutStatus=锁定状态
ActivationType.lockOutExpiration=锁定到期时间
ConnectorType.displayName=显示名称
ShadowType.activation=激活
AbstractRoleType.inducement=间接分配
AbstractRoleType.requestable=可请求的
AbstractRoleType.riskLevel=风险级别
AbstractRoleType.owner=所有者
AbstractRoleType.approver=审批人
AbstractRoleType.idempotent=幂等
RoleType.roleType=角色类型
OrgType.type=类型
OrgType.isTenant=是否租户
OrgType.displayOrder=显示顺序
OrgType.securityPolicy=安全策略
OrgType.passwordPolicy=密码策略
ServiceType.type=类型
ServiceType.displayOrder=显示顺序
ServiceType.URL=URL
ResourceAttribute.connIdName=ConnId名称
ResourceAttribute.connIdUID=ConnId UID
ResourceValidator.noSchema=资源架构不可用：{0}
ResourceValidator.multipleSynchronizationDefinitions=有多个用于类型/用途的同步定义：{0}。
ResourceValidator.multipleSchemaHandlingDefinitions=有多个用于类型/用途的架构处理定义：{0}。
ResourceValidator.multipleSchemaHandlingDefaultDefinitions=当前有多个默认的对类型为“{0}”的架构处理定义。
ResourceValidator.noDefaultAccountSchemaHandlingDefinition=There is no "account" schema handling definition marked as default. Unqualified assignments of this resource will not work.
ResourceValidator.missingObjectClass=在架构处理定义中没有找到ObjectClass：“{0}”
ResourceValidator.unknownObjectClass=Unknown object class "{1}" for schema handling definition: "{0}".
ResourceValidator.noSynchronizationDefinition=没有“{0}”的同步定义。
ResourceValidator.noSchemaHandlingDefinition=No schema handling definition for "{0}".
ResourceValidator.noAttributeName=在“{0}”的架构处理中有未命名的属性。
ResourceValidator.unknownAttributeName=There is no attribute named "{1}" in object class "{2}" (defined in schema handling for "{0}").
ResourceValidator.noAssociationName=Unnamed association in schema handling for "{0}".
ResourceValidator.collidingAssociationName=Association "{1}" collides with existing attribute in schema handling for "{0}".
ResourceValidator.wrongItemName=Illegal reference to attribute or association "{1}" in schema handling for "{0}".
ResourceValidator.noItemNamespace=No namespace in reference to attribute or association "{1}" in schema handling for "{0}".
ResourceValidator.missingAssociationTargetKind=Missing "target kind" property for association "{1}" in schema handling for "{0}".
ResourceValidator.missingAssociationTargetIntent=Missing "target intent" property for association "{1}" in schema handling for "{0}".
ResourceValidator.missingAssociationDirection=Missing "direction" property for association "{1}" in schema handling for "{0}".
ResourceValidator.missingAssociationAssociationAttribute=Missing "association attribute" property for association "{1}" in schema handling for "{0}".
ResourceValidator.missingAssociationValueAttribute=Missing "value attribute" property for association "{1}" in schema handling for "{0}".
ResourceValidator.wrongMatchingRule=Wrong matching rule for attribute "{1}" in schema handling for "{0}": {2}
ResourceValidator.multipleItems=There are multiple definitions for attribute or association "{1}" in "{0}".
ResourceValidator.dependentObjectTypeDoesNotExist=Dependent kind/intent "{1}" does not exist in a dependency of "{0}".
ResourceValidator.targetObjectTypeDoesNotExist=Target kind/intent "{1}" for association "{2}" does not exist in schema handling for "{0}".
ResourceValidator.suspiciousMappingSource=Suspicious source for {1} for "{2}" in schema handling for "{0}": {3}
ResourceValidator.invalidMappingSource=Invalid source for {1} for "{2}" in schema handling for "{0}": {3}
ResourceValidator.missingMappingSource=Missing source for {1} for "{2}" in schema handling for "{0}"
ResourceValidator.suspiciousMappingTarget=Suspicious target for {1} for "{2}" in schema handling for "{0}": {3}
ResourceValidator.invalidMappingTarget=Invalid target for {1} for "{2}" in schema handling for "{0}": {3}
ResourceValidator.missingMappingTarget=Missing target for {1} for "{2}" in schema handling for "{0}"
ResourceValidator.superfluousMappingTarget=Superfluous target for {1} for "{2}" in schema handling for "{0}": {3}
ResourceValidator.unknownObjectClassInSynchronization=Unknown object class "{1}" for synchronization definition: "{0}".
ResourceValidator.noReaction=No reaction defined in "{0}" for situation(s): {1}
ResourceValidator.duplicateReactions=Duplicate reactions defined in "{0}" for situation(s): {1}
ResourceValidator.noSituation=Missing synchronization situation name in a reaction defined in "{0}"
ResourceValidator.noCorrelationRule=No correlation rule for synchronization of "{0}"
ResourceValidator.outboundMapping=出站映射
ResourceValidator.inboundMapping=入站映射编号{0}
AdminGuiConfigurationType.adminGuiConfiguration=管理控制台（GUI）配置
midPointVersion=${pom.version}
midPointRevision=${git.describe}
IdempotenceType.CONSERVATIVE=保守的
IdempotenceType.AGGRESSIVE=积极的
IdempotenceType.NONE=无
AdditionalInformationGenerator.exclusionsTitle=Exclusions to be approved
AdditionalInformationGenerator.assignmentOf=Assignment of {0}
AdditionalInformationGenerator.isInConflictWithAssignmentOf=is in conflict with assignment of {0}
AdditionalInformationGenerator.notes=说明
ExclusionPolicyType.ENFORCE=强制
ExclusionPolicyType.APPROVE=审批
ExclusionPolicyType.REPORT=报表
TechnicalObjectSpecification={0} "{1}" (OID {2})
ObjectSpecification={0} "{1}"
ObjectSpecificationWithPath={0} "{1}" ({2})
DefaultPolicyConstraint.assignmentModification.toBeAdded=Assignment of {0} (relation {1}) is to be added
DefaultPolicyConstraint.assignmentModification.wasAdded=Assignment of {0} (relation {1}) was added
DefaultPolicyConstraint.assignmentModification.toBeDeleted=Assignment of {0} (relation {1}) is to be deleted
DefaultPolicyConstraint.assignmentModification.wasDeleted=Assignment of {0} (relation {1}) was deleted
DefaultPolicyConstraint.assignmentModification.toBeModified=Assignment of {0} (relation {1}) is to be modified
DefaultPolicyConstraint.assignmentModification.wasModified=Assignment of {0} (relation {1}) was modified
DefaultPolicyConstraint.objectModification.toBeAdded={0} is to be added
DefaultPolicyConstraint.objectModification.wasAdded={0}已添加
DefaultPolicyConstraint.objectModification.toBeDeleted={0}将被删除
DefaultPolicyConstraint.objectModification.wasDeleted={0}已删除
DefaultPolicyConstraint.objectModification.toBeModified={0}将被修改
DefaultPolicyConstraint.objectModification.wasModified={0}已修改
PolicyConstraints.before=before operation
PolicyConstraints.after=操作后
DefaultPolicyConstraint.objectState.unnamed=Object state {0} matches constraint
DefaultPolicyConstraint.objectState.named=Object state {0} matches constraint "{1}"
DefaultPolicyConstraint.objectState.namedWithPath=Object state {0} matches constraint "{1}" in assignment path {2}
# {0} = before/after, {1} target/path, {2} rule name
DefaultPolicyConstraint.assignmentState.unnamed=Assignment state {0} matches constraint ({1})
DefaultPolicyConstraint.assignmentState.named=Assignment state {0} matches constraint "{1}" ({2})
DefaultPolicyConstraint.exclusion=Violation of SoD policy: {0} excludes {1}, they cannot be assigned at the same time
DefaultPolicyConstraint.hasAssignment=Assignment exists for {0} ({1})
# {0} = type name, {1} = OID, {2} = before/after. TODO do something with the OID
DefaultPolicyConstraint.hasNoAssignment=No assignment exists for {0} {1} ({2})
DefaultPolicyConstraint.multiplicityConstraint.min.object={0} requires at least {1} assignees with the relation of "{2}"
DefaultPolicyConstraint.multiplicityConstraint.max.object={0} requires at most {1} assignees with the relation of "{2}"
DefaultPolicyConstraint.multiplicityConstraint.min.target={0} requires at least {1} assignees with the relation of "{2}". The operation would result in {3} assignees.
DefaultPolicyConstraint.multiplicityConstraint.max.target={0} requires at most {1} assignees with the relation of "{2}". The operation would result in {3} assignees.
DefaultPolicyConstraint.and=All included constraints triggered
DefaultPolicyConstraint.or=At least one of included constraints triggered
DefaultPolicyConstraint.not=Included constraints have not triggered
DefaultPolicyConstraint.transition=Transition policy constraint matched
DefaultPolicyConstraint.situation=Situation policy constraint matched
PolicyViolationException.message.aggregate={0} policy violations occurred
PolicyViolationException.message.projectionPassword=Provided password does not satisfy password policies in {0}: {1}
PolicyViolationException.message.credentials.nonce=Provided nonce does not satisfy the policies: {0}
PolicyViolationException.message.credentials.password=Provided password does not satisfy the policies: {0}
PolicyViolationException.message.credentials.securityQuestions=Provided security questions do not satisfy the policies: {0}
Credentials.nonce=随机数
Credentials.password=密码
Credentials.securityQuestions=安全问题
ValuePolicy.minAgeNotReached=Minimal age was not yet reached.
ValuePolicy.valueRecentlyUsed=The value was recently used.
ValuePolicy.valueMustBePresent=The value must be present.
ValuePolicy.valuesMustBePresent=At least {0} values must be present. Actual number of values: {1}.
ValuePolicy.minimalSizeNotMet=Minimal size ({0}) is not met (actual length: {1}).
ValuePolicy.maximalSizeExceeded=Maximal size ({0}) was exceeded (actual length: {1}).
ValuePolicy.minimalUniqueCharactersNotMet=Minimal count of unique characters ({0}) is not met (unique characters: {1}).
ValuePolicy.prohibitedValue=The value is prohibited. Choose a different one.
ValuePolicy.checkExpressionFailed=检查表达式失败。
ValuePolicy.minimalOccurrenceNotMet=Minimal occurrence ({0}) of characters ({1}) is not met (occurrence of characters: {2}).
ValuePolicy.maximalOccurrenceExceeded=Maximal occurrence ({0}) of characters ({1}) was exceeded (occurrence of characters: {2}).
ValuePolicy.firstCharacterNotAllowed=First character is not from allowed set. Allowed set: {0}.
ValuePolicy.charactersNotAllowed=Characters [ {0} ] are not allowed in the value.
AbstractRoleType.dataProtection=数据保护
DataProtectionType.controllerName=Controller name
DataProtectionType.controllerContact=Controller contact
DataProtectionType.dpoContact=DPO contact
DataProtectionType.processingPurposesDescription=Processing purposes
DataProtectionType.legitimateInterestDescription=Legitimate interest
DataProtectionType.dataRecipientDescription=Data recipient
DataProtectionType.periodOfStorageDescription=Period of storage
DataProtectionType.automatedDecisionMakingDescription=Automated decision making
DataProtectionType.securityMeasuresDescription=Security measures
DataProtectionType.dataErasureDescription=Data erasure description
PolicyRuleEvaluationTargetType.OBJECT=对象
PolicyRuleEvaluationTargetType.ASSIGNMENT=分配
PolicyRuleType.name=名称
PolicyRuleType.name.help=Short name of the policy rule. It is used to identify the rule in user interface, logfiles, etc.
PolicyRuleType.description=描述
PolicyRuleType.description.help=Free-form description of the policy rule (comment).
PolicyRuleType.policyConstraints=策略约束
PolicyRuleType.policyConstraints.help=Policy constraints. When the constraints are violated then the policy rule is triggered and the action takes place.
PolicyRuleType.policySituation=Policy situation
PolicyRuleType.policySituation.help=Policy situation that is the result when this policy rule is triggered. If the situation is not explicitly stated then default situation will be selected instead. The situation is determined by the constraint that triggered the rule.
PolicyRuleType.policyActions=Policy actions
PolicyRuleType.policyActions.help=Action(s) that has to be takes as a reaction to this rule being triggered.
PolicyRuleType.evaluationTarget=Evaluation target
PolicyRuleType.evaluationTarget.help=Whether this rule has to be applied on an object or an assignment. Normally this is determined by looking at policy constraints. But this setting can be used to override that.
AbstractPolicyConstraintType.name=名称
AbstractPolicyConstraintType.name.help=Short name of the policy constraint. It is used to identify the constraint in user interface, logfiles, etc.
AbstractPolicyConstraintType.description=描述
AbstractPolicyConstraintType.description.help=Free-form description of the policy constraint (comment).
AbstractPolicyConstraintType.presentation=展示
AbstractPolicyConstraintType.presentation.help=How should be triggering of this constraint presented, e.g. in enforcement messages, in approvals, in certification, in notifications, etc.
PolicyConstraintsType.objectState=对象状态
PolicyConstraintsType.objectState.help=Constraint on a particular state of the object.
PolicyConstraintsType.assignmentState=分配状态
PolicyConstraintsType.assignmentState.help=Constraint on a particular state of an assignment.
PolicyConstraintsType.hasAssignment=分配有
PolicyConstraintsType.hasAssignment.help=Constraint requiring a particular assignment.
PolicyConstraintsType.hasNoAssignment=没有分配
PolicyConstraintsType.hasNoAssignment.help=Constraint forbidding a particular assignment.
PolicyConstraintsType.exclusion=排除
PolicyConstraintsType.exclusion.help=Exclusion constraint. Constraint that forbids this object to be assigned together with other object.
PolicyConstraintsType.minAssignees=Minimum assignees
PolicyConstraintsType.minAssignees.help=Minimum number of assignees constraint. Number of objects (users) that have this role assigned must be higher or equal to prescribed value.
PolicyConstraintsType.maxAssignees=Maximum assignees
PolicyConstraintsType.maxAssignees.help=Maximum number of assignees constraint. Number of objects (users) that have this role assigned must be lower or equal to prescribed value.
PolicyConstraintsType.modification=修改
PolicyConstraintsType.modification.help=Constraint that triggers when the object is modified.
PolicyConstraintsType.assignment=分配
PolicyConstraintsType.assignment=分配
PolicyConstraintsType.objectTimeValidity=Object time validity
PolicyConstraintsType.objectTimeValidity.help=A constraint that triggers when validity of an object or any of its time-sensitive items (e.g. password) is about to end.
PolicyConstraintsType.assignmentTimeValidity=Assignment time validity
PolicyConstraintsType.assignmentTimeValidity.help=A constraint that triggers when validity of an assignment or any of its time-sensitive items (e.g. password) is about to end.
PolicyConstraintsType.situation=Policy situation
PolicyConstraintsType.situation.help=Occurrence of the policy situation within an object or an assignment.
PolicyConstraintsType.transition=转换
PolicyConstraintsType.transition.help=Specifies how the inner constraints are to be evaluated with regards to operation start and end state.
PolicyConstraintsType.ref=Reference
PolicyConstraintsType.ref.help=References another policy constraint e.g. by its name.
ExclusionPolicyConstraintType.targetRef=目标
ExclusionPolicyConstraintType.targetRef.help=Target of exclusion. The object defining this "exclusion" and the object defined as target cannot be assigned at the same time.
PolicyActionsType.enforcement=强制性
PolicyActionsType.enforcement.help=This action stops the operation and results with the error.
PolicyActionsType.approval=Approval
PolicyActionsType.approval.help=The operation will be suspended and the approval workflow will be started. If the workflow ends with success the operation will proceed. If the workflow ends with an error the operation will also end with an error.
PolicyActionsType.remediation=补救
PolicyActionsType.remediation.help=The operation will proceed. A workflow will be started to remediate the result of the operation after the operation is done.
PolicyActionsType.prune=Prune
PolicyActionsType.prune.help=The operation will proceed. Any other assignments that are in conflict with this assignment that triggered the rule will be "pruned": they will be removed. The removal of the conflicting assignments is automatic and silent. It will not be subject to approvals or other policy constraints.
PolicyActionsType.certification=鉴定
PolicyActionsType.certification.help=The operation will proceed. The object will be scheduled for a certification campaign after the operation is done.
PolicyActionsType.notification=Notification
PolicyActionsType.notification.help=The operation will proceed. Notifications are sent at the end of the operation.
PolicyActionsType.record=Record
PolicyActionsType.record.help=The operation will proceed. Policy situation will be recorded for given object or assignment.
PolicyActionType.name=名称
PolicyActionType.name.help=Short name of the policy action. It is used to identify the action in user interface, logfiles, etc.
PolicyActionType.description=描述
PolicyActionType.description.help=Free-form description of the policy action (comment).
PolicyActionType.condition=条件
PolicyActionType.condition.help=Condition specifying when should this action be applied.
ApprovalPolicyActionType.compositionStrategy=Composition strategy
ApprovalPolicyActionType.compositionStrategy.help=How should be this approval policy action composed with other ones that might be related to the same item (object or assignment).
ApprovalPolicyActionType.approvalDisplayName=Approval display name
ApprovalPolicyActionType.approvalDisplayName.help=Display name for this approval definition. If not specified, the name is derived from triggered constraints (short messages).
ApprovalPolicyActionType.approverRelation=Approver relation
ApprovalPolicyActionType.approverRelation.help=What relation(s) to use when determining approvers. E.g. "approver", "owner", "securityApprover", and so on.
ApprovalPolicyActionType.approverRef=审批人
ApprovalPolicyActionType.approverRef.help=Direct enumeration of the approvers to be used.
ApprovalPolicyActionType.approverExpression=Approver expression
ApprovalPolicyActionType.approverExpression.help=Expression(s) that yield approvers to be used. If specified, the expression(s) are evaluated and the result is used as a set of approvers (UserType, OrgType, RoleType, or any combination of them).
ApprovalPolicyActionType.approvalSchema=审批架构
ApprovalPolicyActionType.approvalSchema.help=More complex (multi-stages) approval schema.
CertificationPolicyActionType.definitionRef=Definition
CertificationPolicyActionType.definitionRef.help=Certification definition(s) to be started as part of the action execution.
PolicyConstraintPresentationType.message=消息
PolicyConstraintPresentationType.message.help=Message to be conveyed to the user.
PolicyConstraintPresentationType.shortMessage=Short message
PolicyConstraintPresentationType.shortMessage.help=Very short message describing the situation. Could be used for e.g. notification messages subject, approval process or work item names.
PolicyConstraintPresentationType.longMessage=Long message
PolicyConstraintPresentationType.longMessage.help=Long, documentation-like explanation of the rule.
PolicyConstraintPresentationType.final=Final
PolicyConstraintPresentationType.final.help=If set to true, no embedded triggers will be presented. Use for hiding constraints that are to be considered too technical to be shown to user.
PolicyConstraintPresentationType.hidden=Hidden
PolicyConstraintPresentationType.hidden.help=If set to true, this trigger will be excluded from presentation.
PolicyConstraintPresentationType.displayOrder=Display order
PolicyConstraintPresentationType.displayOrder.help=Ordinal number that determines ordering of displayed messages.

DefaultPolicyConstraint.Short.assignmentModification.toBeAdded=Assigning {0} to {1}
DefaultPolicyConstraint.Short.assignmentModification.wasAdded=Assigned {0} to {1}
DefaultPolicyConstraint.Short.assignmentModification.toBeDeleted=Unassigning {0} from {1}
DefaultPolicyConstraint.Short.assignmentModification.wasDeleted=Unassigned {0} from {1}
DefaultPolicyConstraint.Short.assignmentModification.toBeModified=Modifying assignment of {0} on {1}
DefaultPolicyConstraint.Short.assignmentModification.wasModified=Modified assignment of {0} on {1}
DefaultPolicyConstraint.Short.objectModification.toBeAdded=Adding {0}
DefaultPolicyConstraint.Short.objectModification.wasAdded=Added {0}
DefaultPolicyConstraint.Short.objectModification.toBeDeleted=Deleting {0}
DefaultPolicyConstraint.Short.objectModification.wasDeleted=Deleted {0}
DefaultPolicyConstraint.Short.objectModification.toBeModified=Modifying {0}
DefaultPolicyConstraint.Short.objectModification.wasModified=Modified {0}
DefaultPolicyConstraint.Short.objectState.unnamed=Matching state: {0}
DefaultPolicyConstraint.Short.objectState.named=Matching state: {0} ("{1}")
# {0} = before/after, {1} target/path, {2} rule name
DefaultPolicyConstraint.Short.assignmentState.unnamed=Matching state: assignment of {1} ({0})
DefaultPolicyConstraint.Short.assignmentState.named=Matching state: assignment of {1} ({0}) ("{2}")
DefaultPolicyConstraint.Short.exclusion={0} excludes {1}
DefaultPolicyConstraint.Short.hasAssignment=Assignment exists for {0} ({1})
DefaultPolicyConstraint.Short.hasNoAssignment=No assignment exists for {0} {1} ({2})
DefaultPolicyConstraint.Short.multiplicityConstraint.min.object={0} requires at least {1} assignees ("{2}")
DefaultPolicyConstraint.Short.multiplicityConstraint.max.object={0} requires at most {1} assignees ("{2}")
DefaultPolicyConstraint.Short.multiplicityConstraint.min.target={0} requires at least {1} assignees ("{2}")
DefaultPolicyConstraint.Short.multiplicityConstraint.max.target={0} requires at most {1} assignees ("{2}")
DefaultPolicyConstraint.Short.and=All constraints triggered
DefaultPolicyConstraint.Short.or=At least one of constraints triggered
DefaultPolicyConstraint.Short.not=Constraints have not triggered
DefaultPolicyConstraint.Short.transition=Transition constraint matched
DefaultPolicyConstraint.Short.situation=Situation constraint matched
ApprovingAndExecuting.CreationOf=Approving and executing creation of {0} (started {1})
ApprovingAndExecuting.DeletionOf=Approving and executing deletion of {0} (started {1})
ApprovingAndExecuting.ChangeOf=Approving and executing change of {0} (started {1})
PolicyRuleType.policyConstraints=策略约束
AssignmentType.policyRule=策略规则
ShadowType.attributes=属性
ShadowType.association=关联
MetadataType.requestTimestamp=Requested at
MetadataType.requestorRef=Requester
MetadataType.requestorComment=请求人备注
MetadataType.createTimestamp=Created at
MetadataType.creatorRef=Creator
MetadataType.createApproverRef=Creation approved by
MetadataType.createApprovalComment=Creation approval comments
MetadataType.createApprovalTimestamp=Creation approved at
MetadataType.createChannel=Creation channel
MetadataType.modifyTimestamp=Modified at
MetadataType.modifierRef=Modifier
MetadataType.modifyApproverRef=Last modification approved by
MetadataType.modifyApprovalComment=Modification approval comments
MetadataType.modifyApprovalTimestamp=Modification approved at
MetadataType.modifyChannel=Modification channel
MetadataType.lastProvisioningTimestamp=Last provisioning at
MetadataType.certificationFinishedTimestamp=Last certification finished at
MetadataType.certificationOutcome=Last certification outcome
MetadataType.certifierRef=Certifier
MetadataType.certifierComment=Certifier comment
MetadataType.originMappingName=Originating mapping name
MetadataType.createTaskRef=由任务创建
MetadataType.modifyTaskRef=由任务修改
ResourceObjectAssociationType.ref=ref
relation.default=默认
relation.manager=管理者
relation.meta=meta
relation.deputy=deputy
relation.approver=approver
relation.owner=owner
relation.consent=consent
AbstractCredentialType.forceChange=Force change on next login
PasswordType.value=值
AdminGuiConfigurationType.enableExperimentalFeature=Enable GUI experimental features
