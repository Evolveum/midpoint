<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2010-2017 Evolveum
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context-3.0.xsd"
       default-lazy-init="true" default-autowire="byName">

    <bean id="testDataSourceFactory" class="com.evolveum.midpoint.repo.sql.DataSourceFactory" destroy-method="destroy">
        <property name="configuration" value="#{testSqlRepositoryFactory.sqlConfiguration}"/>
    </bean>

    <bean id="testDataSource" factory-bean="testDataSourceFactory" factory-method="createDataSource"
          depends-on="testDataSourceFactory"/>

    <!-- Hibernate session factory -->
    <bean id="testSessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean"
          depends-on="testDataSource" lazy-init="true">

        <property name="dataSource" ref="testDataSource"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.dialect">#{testSqlRepositoryFactory.sqlConfiguration.hibernateDialect}</prop>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.hbm2ddl.auto">#{testSqlRepositoryFactory.sqlConfiguration.hibernateHbm2ddl}</prop>
                <prop key="hibernate.id.new_generator_mappings">true</prop>
                <prop key="hibernate.jdbc.batch_size">20</prop>
                <prop key="javax.persistence.validation.mode">none</prop>
                <prop key="hibernate.transaction.coordinator_class">jdbc</prop>
                <prop key="hibernate.hql.bulk_id_strategy">org.hibernate.hql.spi.id.inline.InlineIdsOrClauseBulkIdStrategy</prop>
                <!-- Todo implement strategy that will not do select when where clause contains only equals on primary key -->
                <!--<prop key="hibernate.hql.bulk_id_strategy">com.evolveum.midpoint.repo.sql.util.EmptyMultiTableBulkIdStrategy</prop>-->
            </props>
        </property>
        <property name="implicitNamingStrategy">
            <bean class="com.evolveum.midpoint.repo.sql.util.MidPointImplicitNamingStrategy"/>
        </property>
        <property name="physicalNamingStrategy">
            <bean class="com.evolveum.midpoint.repo.sql.util.MidPointPhysicalNamingStrategy"/>
        </property>
        <property name="annotatedPackages">
            <list>
                <value>com.evolveum.midpoint.repo.sql.type</value>
            </list>
        </property>
        <property name="packagesToScan">
            <list>
                <value>com.evolveum.midpoint.repo.sql.data.common</value>
                <value>com.evolveum.midpoint.repo.sql.data.common.any</value>
                <value>com.evolveum.midpoint.repo.sql.data.common.container</value>
                <value>com.evolveum.midpoint.repo.sql.data.common.embedded</value>
                <value>com.evolveum.midpoint.repo.sql.data.common.enums</value>
                <value>com.evolveum.midpoint.repo.sql.data.common.id</value>
                <value>com.evolveum.midpoint.repo.sql.data.common.other</value>
                <value>com.evolveum.midpoint.repo.sql.data.common.type</value>
                <value>com.evolveum.midpoint.repo.sql.data.audit</value>
            </list>
        </property>
        <property name="entityInterceptor">
            <ref bean="testInterceptor"/>
        </property>
    </bean>

    <bean id="transactionManager"
          class="org.springframework.orm.hibernate5.HibernateTransactionManager">
        <property name="sessionFactory" ref="testSessionFactory"/>
    </bean>

    <context:annotation-config/>
    <context:component-scan base-package="com.evolveum.midpoint.repo.sql.helpers"/>

</beans>
