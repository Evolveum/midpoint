/*
 * Copyright (C) 2010-2021 Evolveum and contributors
 *
 * Licensed under the EUPL-1.2 or later.
 */

package com.evolveum.midpoint.repo.common.activity.run;

import com.evolveum.midpoint.repo.common.activity.run.processing.ItemProcessor;

import org.jetbrains.annotations.NotNull;

import com.evolveum.midpoint.schema.result.OperationResult;
import com.evolveum.midpoint.util.exception.CommonException;

import org.jetbrains.annotations.Nullable;

/**
 * Provides execution logic and/or execution state related to a plain iterative activity run.
 *
 * Main responsibilities:
 *
 * 1. Starting the item source and submitting the items to processing.
 * 2. "Pure" processing of an item found, free from threading, reporting, error handling, tracing, etc.
 * (Inherited from {@link ItemProcessor}.)
 * 3. Specifying default error action if no error handling policy is defined or matching.
 *
 * @param <I> Kind of items that are processed.
 */
public interface PlainIterativeActivityRunSpecifics<I>
        extends IterativeActivityRunSpecifics, ItemProcessor<I> {

    /**
     * Starts the item source for the current bucket (e.g. by issuing the `synchronize` call) and begins processing items
     * generated by it. Returns when the source finishes.
     *
     * See {@link IterativeActivityRun#iterateOverItemsInBucket(OperationResult)}.
     *
     * Majority of plain iterative activities are not bucketed. However, some of them are, e.g. audit report export.
     *
     * Note that the bucket can be obtained from the activity run. It is included here simply for convenience.
     */
    void iterateOverItemsInBucket(OperationResult opResult) throws CommonException;

    /**
     * Determines the expected total progress.
     *
     * Majority of current plain iterative activities do not know the number of items: for example, ConnId SyncOp does not
     * provide information about how many changes are on the resource. But there might be some activities that do.
     */
    @SuppressWarnings({ "unused", "RedundantThrows" }) // These warnings are false ones.
    default @Nullable Integer determineOverallSize(OperationResult result) throws CommonException, ActivityRunException {
        return null;
    }

    /**
     * Determines the current bucket size.
     *
     * Not applicable to the majority of current plain iterative activities, just like
     * {@link #determineOverallSize(OperationResult)}.
     */
    @SuppressWarnings("unused") // This warning is a false one.
    default @Nullable Integer determineCurrentBucketSize(OperationResult result) throws CommonException {
        return null;
    }

    /**
     * @return Default error action if no policy is specified or if no policy entry matches.
     */
    @NotNull ErrorHandlingStrategyExecutor.FollowUpAction getDefaultErrorAction();
}
