<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2010-2023 Evolveum and contributors
  ~
  ~ This work is dual-licensed under the Apache License 2.0
  ~ and European Union Public License. See LICENSE file for details.
  -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!--
    Notes:
    - See https://maven.apache.org/developers/conventions/code.html for recommended element order.
    - Most information is inherited from this parent, no need to repeat license, organization, etc.
    - Some JAR modules are pure-test, no main sources - deploy/install is skipped for these, otherwise it fails with:
    "The packaging for this project did not assign a file to the build artifact"
    - Some modules have explicit maven.test.skip=true to disable test plugins coming from parents.
    Use this only for modules without any test sources!
    If you need to skip test execution for some profile, use skipTests property instead.
    - Maven's failsafe plugin is declared in build/plugin only in modules that need it.
    This by default uses testng-integration.xml suite file, but see property integrationTestSuite
    for other possibilities (mostly to make build faster by running only most important int-tests).
    - Test JARs of some modules are created, installed/deployed and used downstream (search for test-jar).

    VARIOUS MVN COMMANDS (with rough times on average notebook)

    Quick developer's run without any tests, skipping distribution and documentation build (~5m):
    mvn clean install -P -dist -DskipTests
    After this, it's possible to run midPoint JAR with: java -jar gui/midpoint-jar/target/midpoint.jar

    Quick build of distribution without running tests, skipping documentation (~6m):
    mvn clean install -P -docs -DskipTests
    Generated distribution archives (ZIP and tar.gz) are under dist/target.

    Quick build of everything without tests, not often useful, javadoc + apidocs add quite a lot of time (~9m):
    mvn clean install -DskipTests

    "Quick" build with unit tests only and checkstyle (~30m):
    mvn clean install -P -dist -DskipITs

    "Quick" build with smaller/faster set of integration test (~1h20m):
    mvn clean install -P -dist -DintegrationTestSuite=fast

    Default build - creates distribution package, runs all tests except "extra" tests ():
    mvn clean install

    Extra test use custom JVM args (mostly more memory) which are set in the "extratest" profile,
    runs just under 900 tests, skips distribution and any common unit/IT tests (~1h50m):
    mvn clean install -P extratest,-dist
    (Skipping of default tests is also managed by "extratest" profile.)
    To use with Native repository, just add this to the command line:
    -Dtest.config.file=test-config-new-repo.xml

    Extra test run for a single module, -D property matches the module in -pl:
    mvn clean install -DskipConnTests=false -pl testing/conntest

    Running a single IT test class in one module from the "extra" set with output to stdout:
    mvn integration-test -DskipConnTests=false -DredirectTestOutputToFile=false -pl testing/conntest -Dit.test=TestAdLdapChimera
    Note usage of "it.test" property (for failsafe), not just "test" (for surefire).

    Full build with extra tests for a single module, "-DskipTests" suppresses other default tests:
    mvn clean install -P -dist -DskipTests -DskipStoryTests=false
    See "extratest" profile in testing/pom.xml for all individual properties enabling extra tests.

    Running a single IT test class from story tests with remote debugger:
    mvn integration-test -DskipStoryTests=false -DredirectTestOutputToFile=false \
      -Dmaven.failsafe.debug="-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=*:5005" \
      -pl testing/story -Dit.test=TestSystemPerformance
    Note the "maven.failsafe.debug", it is possible to use "maven.surefire.debug" (with -Dtest) too.
    Change to "suspend=y" for the test to wait for the debugger (e.g. debugging the startup).
    See: https://maven.apache.org/surefire/maven-surefire-plugin/examples/debugging.html
    and https://maven.apache.org/surefire/maven-failsafe-plugin/examples/debugging.html

    Running unit+IT tests of a selected module (-pl) with output to stdout:
    mvn clean install -DredirectTestOutputToFile=false -pl model/model-intest

    DB SPECIFIC/TESTING:
    - Use profile "dbtest" to run additional tests intended for other than H2 databases.
    These tests are integration tests named in additional suite XML called "testng-db-specific.xml".
    Tests from main "testng-integration.xml" are run too.
    - Use profile "sqale" to switch from old Generic repo tests (disables test execution for repo-sql-impl-test)
    to the new Native repository tests (enables tests in repo-sqale module).
    Combine it with "dbtest" profile if additional tests (often taking longer) are desirable.
    Also see the warning about overriding failsafe/surefire.args above.
    - Note, that both "sqale" and "extratest" profiles specify failsafe/surefire.args, so it's better to use
    just "extratest" (memory settings, etc.) and specifying the Native test config like so:
    mvn clean install -P extratest,-dist -Dtest.config.file=test-config-new-repo.xml
    - To run tests against new Native repository in the IDE, just use this VM option
    in the run configuration: -Dtest.config.file=test-config-new-repo.xml
    - Tests using old repository support option -Dconfig=db-specific.properties to override default
    repository test setup (config.xml).
    This is not supported by new repository, but standard config.xml override mechanism can be used,
    e.g. -Dmidpoint.repository.jdbcUrl=... and other properties.
    -->

    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>2.7.15</version>
        <!-- This parent also declares dependencies listed here:
        https://docs.spring.io/spring-boot/docs/2.7.3/reference/html/dependency-versions.html#dependency-versions
        Or for current version of Spring Boot:
        https://docs.spring.io/spring-boot/docs/current/reference/html/appendix-dependency-versions.html
        -->
    </parent>

    <groupId>com.evolveum.midpoint</groupId>
    <artifactId>midpoint</artifactId>
    <version>4.7.2</version>
    <packaging>pom</packaging>

    <name>midPoint Project</name>
    <description>Main parent Maven module for all midPoint sub-modules.</description>
    <organization>
        <name>evolveum</name>
        <url>https://www.evolveum.com</url>
    </organization>
    <licenses>
        <license>
            <name>Apache License v2.0</name>
            <url>https://www.apache.org/licenses/LICENSE-2.0.txt</url>
            <distribution>repo</distribution>
        </license>
        <license>
            <name>European Union Public License</name>
            <url>https://joinup.ec.europa.eu/collection/eupl/eupl-text-11-12</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <modules>
        <module>tools</module>
        <module>infra</module>
        <module>repo</module>
        <module>provisioning</module>
        <module>model</module>
        <module>custom</module>
        <module>gui</module>
        <module>icf-connectors</module>
        <module>testing</module>
    </modules>

    <scm>
        <connection>https://github.com/Evolveum/midpoint.git</connection>
        <developerConnection>git@github.com:Evolveum/midpoint.git</developerConnection>
        <url>https://github.com/Evolveum/midpoint.git</url>
    </scm>
    <issueManagement>
        <system>Atlassian JIRA</system>
        <url>https://jira.evolveum.com/browse/MID</url>
    </issueManagement>

    <distributionManagement>
        <repository>
            <id>evolveum-nexus</id>
            <name>Internal Releases</name>
            <url>https://nexus.evolveum.com/nexus/content/repositories/releases/</url>
        </repository>
        <snapshotRepository>
            <id>evolveum-nexus</id>
            <name>Internal Snapshots</name>
            <url>https://nexus.evolveum.com/nexus/content/repositories/snapshots/</url>
        </snapshotRepository>
    </distributionManagement>

    <properties>
        <!-- Build system options -->
        <!-- Encoding for both sources and resources -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <!-- JDK level also affects midPoint Studio, which depends on JDK used by minimum supported IDEA version. -->
        <project.source.version>11</project.source.version>
        <project.build.locale>en_US</project.build.locale>
        <ansi.color>true</ansi.color>
        <verbose.jaxb2>false</verbose.jaxb2>
        <verbose.jaxws>false</verbose.jaxws>

        <!--suppress UnresolvedMavenProperty (for IDE development) -->
        <git.describe>${describe}</git.describe>
        <timestamp>${maven.build.timestamp}</timestamp>
        <maven.build.timestamp.format>EEE, d MMM yyyy HH:mm:ss Z</maven.build.timestamp.format>

        <!--
        JVM args for testing plugins, can be used to add profiling, etc.
        Option add-exports is added because OpenDJ on JDK 17 uses some recently hidden API.
        -->
        <surefire.args>-Xms1024m -Xmx4096m --add-exports java.management/sun.management=ALL-UNNAMED</surefire.args>
        <failsafe.args>-Xms1024m -Xmx4096m -Duser.language=en --add-exports java.management/sun.management=ALL-UNNAMED</failsafe.args>
        <!--
        Some modules support "full" or "fast" suite for integration tests.
        This can be used as command line switch for mvn: -DintegrationTestSuite=fast
        See model/model-intest for example, how to do it.
        -->
        <integrationTestSuite>full</integrationTestSuite>
        <!-- Controls both surefire and failsafe config/redirectTestOutputToFile setting. -->
        <redirectTestOutputToFile>true</redirectTestOutputToFile>

        <!-- For now, both versions are aligned, but this may change in the future. -->
        <prism.version>${project.version}</prism.version>

        <!-- Dependencies global versions -->
        <assertj.version>3.23.1</assertj.version>
        <commons.io.version>2.9.0</commons.io.version>
        <commons.cli>1.5.0</commons.cli>
        <cxf.version>3.4.10</cxf.version>
        <cxf-xjc.version>3.3.1</cxf-xjc.version>
        <wss4j.version>2.3.3</wss4j.version>
        <opendj.version>2.6.2</opendj.version>
        <quartz.version>2.3.2.e3</quartz.version>
        <slf4j.version>1.7.36</slf4j.version>
        <logback.version>1.2.11</logback.version>
        <opensaml.version>4.1.1</opensaml.version>
        <cache2k.version>2.0.0.Final</cache2k.version>
        <testng.version>7.7.0</testng.version>
        <xml.resolver.version>1.2</xml.resolver.version>
        <xmlunit.version>2.8.2</xmlunit.version>
        <hibernate.version>5.5.3.Final</hibernate.version>
        <!--
        Default Spring Boot 2.7.3 uses H2 2.1.x, which is a big step from our current.
        Every upgrade after v193 up to 1.4.200 had issues for use, some are probably fixed like this NPE bug
        https://github.com/h2database/h2database/issues/1808, but we don't know how many changes to expect.
        Sometimes occurs on heavy concurrent test, e.g. on TestDummyParallelism, but also during app run.
        This bug was introduced in 1.4.198, which was major version that also changed queries in OrgClosureManager.
        Between 1.4.197 and 198 changes of OrgClosureManager and around MVCC must be made (see commit history).
        With 1.4.200 TestObjectLifecycleApprovalGlobal fails consistently.
        197 is the last version that does not require code changes, but self-corrupts DB sometimes (MID-6510).
        193 was used for 4 years with few problems, so it's still here to stay.
        -->
        <h2.version>1.4.193</h2.version>
        <!-- Spring Boot parent declares most fresh versions for JDBC drivers for all our servers. -->

        <!-- START of Spring Boot dependencies overrides (temporary/security fixes, revise regularly!) -->
        <postgresql.version>42.3.8</postgresql.version> <!-- fixes CVE-2022-31197 and more, this is the version in Boot 2.7.6 -->
        <jackson-bom.version>2.13.4</jackson-bom.version> <!-- fixes CVE-2022-42004 -->
        <snakeyaml.version>1.33</snakeyaml.version> <!-- fixes CVE-2022-25857 -->
        <!-- END of Spring Boot dependencies overrides -->

        <wicket.version>9.12.0.e1</wicket.version>
        <wicketstuff.version>9.12.0</wicketstuff.version>
        <wicket.chartjs.version>0.1</wicket.chartjs.version>
        <!-- Groovy 3.0.12 is also default for Spring Boot 2.7.3 -->
        <groovy.version>3.0.12</groovy.version>
        <xmlsec.version>2.2.4</xmlsec.version>
        <!-- NOTE: also update the version number in TestConnectorManager -->
        <connid.version>1.5.1.10</connid.version>
        <derby.version>10.15.2.0</derby.version>
        <poi.version>5.2.2</poi.version>
        <!-- Version for classgraph must the one declared in Prism -->
        <classgraph.version>4.8.146</classgraph.version>
        <guava.version>31.1-jre</guava.version>
        <jcommander.version>1.82</jcommander.version>
        <qpid-broker.version>8.0.4</qpid-broker.version>
        <artemis.version>2.24.0</artemis.version> <!-- name matches property from Boot parent -->
        <asm.version>9.3</asm.version>
        <geronimo-ws-metadata_2.0_spec.version>1.1.3</geronimo-ws-metadata_2.0_spec.version>
        <jetty.version>11.0.11</jetty.version>
        <checkstyle.version>3.1.2</checkstyle.version>
        <xerces.version>2.12.2</xerces.version>
        <commons.csv.version>1.9.0</commons.csv.version>
        <j2html.version>1.4.0</j2html.version>
        <bouncycastle.version>1.70</bouncycastle.version>
        <javax.persistence.version>2.2</javax.persistence.version>
        <keycloak.version>20.0.3</keycloak.version>

        <maven.api.version>3.8.5</maven.api.version>
        <!-- With M6 we get [WARNING] Corrupted channel by directly writing to native stream in forked JVM 1,
        but M5 doesn't work for us anymore either (failing test initialization). -->
        <surefire.version>3.0.0-M6</surefire.version>
        <failsafe.version>3.0.0-M6</failsafe.version>

        <asciidoclet.version>1.5.6</asciidoclet.version>
    </properties>

    <dependencyManagement>
        <dependencies>

            <!-- Prism libraries with versions pre-declared (no need to use versions in other POMs) -->
            <dependency>
                <groupId>com.evolveum.commons</groupId>
                <artifactId>util</artifactId>
                <version>${prism.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>javax.xml.bind</groupId>
                        <artifactId>jaxb-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.evolveum.commons</groupId>
                <artifactId>concepts</artifactId>
                <version>${prism.version}</version>
            </dependency>
            <dependency>
                <groupId>com.evolveum.prism</groupId>
                <artifactId>prism-api</artifactId>
                <version>${prism.version}</version>
                <exclusions>
                    <!-- superset jakarta.activation:jakarta.activation comes from other deps -->
                    <exclusion>
                        <groupId>jakarta.activation</groupId>
                        <artifactId>jakarta.activation-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>javax.xml.bind</groupId>
                        <artifactId>jaxb-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.evolveum.prism</groupId>
                <artifactId>prism-impl</artifactId>
                <version>${prism.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>javax.xml.bind</groupId>
                        <artifactId>jaxb-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.evolveum.axiom</groupId>
                <artifactId>axiom</artifactId>
                <version>${prism.version}</version>
            </dependency>

            <!-- TODO: Upgrade to Java 11 -->
            <dependency>
                <groupId>org.apache.geronimo.specs</groupId>
                <artifactId>geronimo-ws-metadata_2.0_spec</artifactId>
                <version>${geronimo-ws-metadata_2.0_spec.version}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.wicket</groupId>
                <artifactId>wicket-core</artifactId>
                <version>${wicket.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.wicket</groupId>
                <artifactId>wicket-request</artifactId>
                <version>${wicket.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.wicket</groupId>
                <artifactId>wicket-ioc</artifactId>
                <version>${wicket.version}</version>
                <exclusions>
                    <exclusion> <!-- Conflicting version with CXF -->
                        <groupId>org.ow2.asm</groupId>
                        <artifactId>asm</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.ant</groupId>
                        <artifactId>ant</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.wicket</groupId>
                <artifactId>wicket-util</artifactId>
                <version>${wicket.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.wicket</groupId>
                <artifactId>wicket-devutils</artifactId>
                <version>${wicket.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.wicket</groupId>
                <artifactId>wicket-auth-roles</artifactId>
                <version>${wicket.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.wicket</groupId>
                <artifactId>wicket-spring</artifactId>
                <version>${wicket.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.wicket</groupId>
                <artifactId>wicket-extensions</artifactId>
                <version>${wicket.version}</version>
            </dependency>
            <dependency>
                <groupId>org.wicketstuff</groupId>
                <artifactId>wicketstuff-select2</artifactId>
                <version>${wicketstuff.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.wicket</groupId>
                <artifactId>wicket-datetime</artifactId>
                <version>8.0.0-M7</version>
            </dependency>
            <dependency>
                <groupId>com.evolveum.chartjs</groupId>
                <artifactId>wicket-chartjs-core</artifactId>
                <version>${wicket.chartjs.version}</version>
            </dependency>
            <dependency>
                <groupId>org.ow2.asm</groupId>
                <artifactId>asm</artifactId>
                <version>${asm.version}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy-all</artifactId>
                <version>${groovy.version}</version>
                <type>pom</type>
                <exclusions>
                    <exclusion>
                        <groupId>org.codehaus.groovy</groupId>
                        <artifactId>groovy-ant</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.codehaus.groovy</groupId>
                        <artifactId>groovy-test-junit5</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.codehaus.groovy</groupId>
                        <artifactId>groovy-test</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.codehaus.groovy</groupId>
                        <artifactId>groovy-testng</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.codehaus.groovy</groupId>
                <artifactId>groovy</artifactId>
                <version>${groovy.version}</version>
            </dependency>
            <dependency>
                <groupId>org.hibernate</groupId>
                <artifactId>hibernate-core</artifactId>
                <!-- Version defined in Spring Boot parent/BOM. -->
                <version>${hibernate.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>javax.annotation</groupId>
                        <artifactId>jsr250-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>javax.activation</groupId>
                        <artifactId>javax.activation-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>javax.annotation</groupId>
                        <artifactId>javax.annotation-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>javax.xml.bind</groupId>
                        <artifactId>jaxb-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>javax.persistence</groupId>
                <artifactId>javax.persistence-api</artifactId>
                <version>${javax.persistence.version}</version>
            </dependency>
            <dependency>
                <groupId>org.javassist</groupId>
                <artifactId>javassist</artifactId>
                <!-- Version compatible with JDK 11+. Transitive dependency from hibernate. Hibernate has older version. -->
                <version>3.28.0-GA</version>
            </dependency>
            <dependency>
                <groupId>com.zaxxer</groupId>
                <artifactId>HikariCP</artifactId>
                <version>4.0.3</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>jul-to-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-classic</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>ch.qos.logback</groupId>
                <artifactId>logback-core</artifactId>
                <version>${logback.version}</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.janino</groupId>
                <artifactId>janino</artifactId>
                <version>3.1.4</version>
            </dependency>
            <!-- Needed for OpenDJ in tests -->
            <dependency>
                <groupId>com.sleepycat</groupId>
                <artifactId>je</artifactId>
                <version>5.0.103</version>
                <!-- upgrade to 18.x is not possible with currently used OpenDJ -->
                <!--<version>18.3.12</version>-->
            </dependency>

            <!--
            TODO: Originally in jdk-11 profile, consolidate, now, when JDK 8 is not needed anymore.
            In JDK 11 we want to get rid of xml-apis, that are covered by Java 9+.
            Comes with xerces/xalan, overrides many classes from other APIs (StAX, SAX) or JDK.
            But it contains DOM classes like org.w3c.dom.ElementTraversal that are available
            from JDK 9+, so we still need it with JDK 8, among others in schemadist-prism.
            BTW: 1.4 (from 2009) is NEWER version than 2.0.2 (2002)... what can you say...
            -->
            <dependency>
                <groupId>xerces</groupId>
                <artifactId>xercesImpl</artifactId>
                <version>${xerces.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>xml-apis</groupId>
                        <artifactId>xml-apis</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.codehaus.staxmate</groupId>
                <artifactId>staxmate</artifactId>
                <version>2.0.1</version>
                <exclusions>
                    <exclusion>
                        <groupId>stax</groupId>
                        <artifactId>stax-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>net.sourceforge.ccxjc</groupId>
                <artifactId>cc-xjc-plugin</artifactId>
                <version>2.0.1</version>
            </dependency>
            <dependency>
                <groupId>commons-validator</groupId>
                <artifactId>commons-validator</artifactId>
                <version>1.7</version>
                <exclusions>
                    <!-- replaced by org.slf4j:jcl-over-slf4j -->
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                    <!-- Use org.apache.commons:commons-collections4 instead, not required by our usages of validator. -->
                    <exclusion>
                        <groupId>commons-collections</groupId>
                        <artifactId>commons-collections</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>commons-digester</groupId>
                        <artifactId>commons-digester</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>commons-beanutils</groupId>
                <artifactId>commons-beanutils</artifactId>
                <version>1.9.4</version>
                <exclusions>
                    <!-- replaced by org.slf4j:jcl-over-slf4j -->
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- TODO: We want to get rid of this, which requires removal of beanutils as well. -->
            <dependency>
                <groupId>commons-collections</groupId>
                <artifactId>commons-collections</artifactId>
                <version>3.2.2</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>1.15</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-configuration2</artifactId>
                <version>2.8.0</version>
                <exclusions>
                    <!-- replaced by org.slf4j:jcl-over-slf4j -->
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                    <!-- just to avoid dep-convergence failure for lib we don't even use -->
                    <exclusion>
                        <groupId>javax.servlet</groupId>
                        <artifactId>servlet-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-text</artifactId>
                <version>1.10.0</version>
            </dependency>
            <!-- experimental -->
            <dependency>
                <groupId>com.google.code.findbugs</groupId>
                <artifactId>jsr305</artifactId>
                <version>3.0.2</version>
            </dependency>
            <dependency>
                <groupId>commons-io</groupId>
                <artifactId>commons-io</artifactId>
                <version>${commons.io.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-pool</groupId>
                <artifactId>commons-pool</artifactId>
                <version>1.6</version>
            </dependency>
            <dependency>
                <groupId>commons-javaflow</groupId>
                <artifactId>commons-javaflow</artifactId>
                <version>20060411</version>
            </dependency>
            <dependency>
                <groupId>org.jetbrains</groupId>
                <artifactId>annotations</artifactId>
                <version>21.0.1</version>
            </dependency>
            <dependency>
                <groupId>javax.annotation</groupId>
                <artifactId>jsr250-api</artifactId>
                <version>1.0</version>
            </dependency>
            <dependency>
                <groupId>javax.jws</groupId>
                <artifactId>jsr181-api</artifactId>
                <version>1.0-MR1</version>
            </dependency>
            <dependency>
                <groupId>javax.inject</groupId>
                <artifactId>javax.inject</artifactId>
                <version>1</version>
            </dependency>
            <dependency>
                <groupId>javax.persistence</groupId>
                <artifactId>persistence-api</artifactId>
                <version>1.0.2</version>
                <optional>true</optional>
            </dependency>
            <dependency>
                <groupId>jakarta.servlet</groupId>
                <artifactId>jakarta.servlet-api</artifactId>
                <version>${jakarta-servlet.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>javax.ws.rs</groupId>
                <artifactId>javax.ws.rs-api</artifactId>
                <version>2.1.1</version>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>4.5.13</version>
                <exclusions>
                    <!-- replaced by org.slf4j:jcl-over-slf4j -->
                    <exclusion>
                        <groupId>commons-logging</groupId>
                        <artifactId>commons-logging</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpcore</artifactId>
                <version>4.4.14</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-core</artifactId>
                <version>${cxf.version}</version>
                <!-- as per http://www.jroller.com/melix/entry/apache_cxf_maven_javamail_awful,
                https://jira.springsource.org/browse/SPR-7914 -->
                <exclusions>
                    <exclusion>
                        <groupId>org.apache.geronimo.specs</groupId>
                        <artifactId>geronimo-javamail_1.4_spec</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.geronimo.specs</groupId>
                        <artifactId>geronimo-activation_1.1_spec</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>javax.activation</groupId>
                        <artifactId>activation</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-core</artifactId>
                <version>${cxf.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.jvnet.staxex</groupId>
                        <artifactId>stax-ex</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>javax.xml.soap</groupId>
                        <artifactId>javax.xml.soap-api</artifactId>
                    </exclusion>
                    <!-- This should be safe to exclude, if we don't generate from WSDL. -->
                    <exclusion>
                        <groupId>org.glassfish.jaxb</groupId>
                        <artifactId>jaxb-xjc</artifactId>
                    </exclusion>
                    <!-- in favor of Jakarta version -->
                    <exclusion>
                        <groupId>javax.annotation</groupId>
                        <artifactId>javax.annotation-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.sun.activation</groupId>
                        <artifactId>javax.activation</artifactId>
                    </exclusion>
                    <!-- in favor of wss4j version -->
                    <exclusion>
                        <groupId>com.fasterxml.woodstox</groupId>
                        <artifactId>woodstox-core</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-wsdl</artifactId>
                <version>${cxf.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>javax.activation</groupId>
                        <artifactId>activation</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-tools-common</artifactId>
                <version>${cxf.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.jvnet.staxex</groupId>
                        <artifactId>stax-ex</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>javax.xml.soap</groupId>
                        <artifactId>javax.xml.soap-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-transports-local</artifactId>
                <version>${cxf.version}</version>
                <exclusions>
                    <!-- in favor of Jakarta version -->
                    <exclusion>
                        <groupId>com.sun.activation</groupId>
                        <artifactId>javax.activation</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-transports-http</artifactId>
                <version>${cxf.version}</version>
                <exclusions>
                    <exclusion>
                        <!-- use custom version -->
                        <groupId>org.apache.httpcomponents</groupId>
                        <artifactId>httpclient</artifactId>
                    </exclusion>
                    <exclusion>
                        <!-- use custom version -->
                        <groupId>org.apache.httpcomponents</groupId>
                        <artifactId>httpcore</artifactId>
                    </exclusion>
                    <!-- in favor of Jakarta version -->
                    <exclusion>
                        <groupId>javax.annotation</groupId>
                        <artifactId>javax.annotation-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.sun.activation</groupId>
                        <artifactId>javax.activation</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-transports-http-jetty</artifactId>
                <version>${cxf.version}</version>
                <exclusions>
                    <!-- in favor of Jakarta version -->
                    <exclusion>
                        <groupId>com.sun.activation</groupId>
                        <artifactId>javax.activation</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-transports-jms</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-management</artifactId>
                <version>${cxf.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-ws-security</artifactId>
                <version>${cxf.version}</version>
                <exclusions>
                    <exclusion> <!-- Version in dependency of org.apache.neethi:neethi conflicts with cxf-core -->
                        <groupId>org.codehaus.woodstox</groupId>
                        <artifactId>woodstox-core-asl</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-frontend-jaxrs</artifactId>
                <version>${cxf.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>jakarta.ws.rs</groupId>
                        <artifactId>jakarta.ws.rs-api</artifactId>
                    </exclusion>
                    <!-- in favor of Jakarta version -->
                    <exclusion>
                        <groupId>javax.annotation</groupId>
                        <artifactId>javax.annotation-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.sun.activation</groupId>
                        <artifactId>javax.activation</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-rs-client</artifactId>
                <version>${cxf.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.jvnet.staxex</groupId>
                        <artifactId>stax-ex</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>javax.xml.soap</groupId>
                        <artifactId>javax.xml.soap-api</artifactId>
                    </exclusion>
                    <!-- in favor of Jakarta version -->
                    <exclusion>
                        <groupId>javax.annotation</groupId>
                        <artifactId>javax.annotation-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.sun.activation</groupId>
                        <artifactId>javax.activation</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf</groupId>
                <artifactId>cxf-rt-rs-extension-providers</artifactId>
                <version>${cxf.version}</version>
                <exclusions>
                    <!-- in favor of Jakarta version -->
                    <exclusion>
                        <groupId>javax.annotation</groupId>
                        <artifactId>javax.annotation-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.sun.activation</groupId>
                        <artifactId>javax.activation</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.cxf.xjc-utils</groupId>
                <artifactId>cxf-xjc-runtime</artifactId>
                <version>${cxf-xjc.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>javax.activation</groupId>
                        <artifactId>activation</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.wss4j</groupId>
                <artifactId>wss4j-ws-security-common</artifactId>
                <version>${wss4j.version}</version>
                <exclusions>
                    <exclusion> <!-- conflict with javax.mail:mail -->
                        <groupId>org.apache.geronimo.javamail</groupId>
                        <artifactId>geronimo-javamail_1.4_mail</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>net.shibboleth.utilities</groupId>
                        <artifactId>java-support</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${guava.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.wss4j</groupId>
                <artifactId>wss4j-ws-security-dom</artifactId>
                <version>${wss4j.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>net.shibboleth.utilities</groupId>
                        <artifactId>java-support</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <!-- make this dependency explicit to detect conflicts with older versions -->
                <groupId>org.codehaus.woodstox</groupId>
                <artifactId>stax2-api</artifactId>
                <version>4.2.1</version>
            </dependency>
            <dependency>
                <groupId>org.forgerock.opendj</groupId>
                <artifactId>opendj</artifactId>
                <version>${opendj.version}</version>
            </dependency>
            <!-- Identity connectors -->
            <dependency>
                <groupId>net.tirasa.connid</groupId>
                <artifactId>connector-framework</artifactId>
                <version>${connid.version}</version>
            </dependency>
            <dependency>
                <groupId>net.tirasa.connid</groupId>
                <artifactId>connector-framework-internal</artifactId>
                <version>${connid.version}</version>
            </dependency>
            <dependency>
                <groupId>com.evolveum.polygon</groupId>
                <artifactId>connector-databasetable</artifactId>
                <version>1.5.0.0</version>
                <exclusions>
                    <!-- Connectors may have dependencies on various versions of connector-common,
                         as they can be built against various versions of polygon.
                         However, this will make dependency convergence enforcement really unhappy.
                         Therefore, we will exclude the dependency from all connectors, except for LDAP connector.
                         The LDAP connector is usually the newest one, bringing the newest version of connector-common.
                         Excluding in Maven reactor should not do much anyway.
                         MidPoint/ConnId are loading the connectors in their own way, anyway. -->
                    <exclusion>
                        <groupId>com.evolveum.polygon</groupId>
                        <artifactId>connector-common</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.evolveum.polygon</groupId>
                <artifactId>connector-csv</artifactId>
                <version>2.6</version>
                <exclusions>
                    <!-- Connectors may have dependencies on various versions of connector-common,
                         as they can be built against various versions of polygon.
                         However, this will make dependency convergence enforcement really unhappy.
                         Therefore, we will exclude the dependency from all connectors, except for LDAP connector.
                         The LDAP connector is usually the newest one, bringing the newest version of connector-common.
                         Excluding in Maven reactor should not do much anyway.
                         MidPoint/ConnId are loading the connectors in their own way, anyway. -->
                    <exclusion>
                        <groupId>com.evolveum.polygon</groupId>
                        <artifactId>connector-common</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.evolveum.polygon</groupId>
                <artifactId>connector-ldap</artifactId>
                <!-- Do not forget to update provisioning/ucf-impl-connid/src/test/resources/connector-ldap.xml when changing connector version. -->
                <version>3.6.1</version>
                <exclusions>
                    <!-- Needed otherwise the JDK14 SLF4J binding can override the midpoint's logback binding -->
                    <exclusion>
                        <groupId>org.slf4j</groupId>
                        <artifactId>slf4j-jdk14</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>com.evolveum.polygon</groupId>
                <artifactId>connector-ssh</artifactId>
                <version>1.0</version>
                <exclusions>
                    <!-- Connectors may have dependencies on various versions of connector-common,
                         as they can be built against various versions of polygon.
                         However, this will make dependency convergence enforcement really unhappy.
                         Therefore, we will exclude the dependency from all connectors, except for LDAP connector.
                         The LDAP connector is usually the newest one, bringing the newest version of connector-common.
                         Excluding in Maven reactor should not do much anyway.
                         MidPoint/ConnId are loading the connectors in their own way, anyway. -->
                    <exclusion>
                        <groupId>com.evolveum.polygon</groupId>
                        <artifactId>connector-common</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- End connectors -->

            <dependency>
                <!-- this replaces commons-logging and spring-jcl (or other JARs with org.apache.commons.logging.Log) -->
                <groupId>org.slf4j</groupId>
                <artifactId>jcl-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>log4j-over-slf4j</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${slf4j.version}</version>
            </dependency>
            <dependency>
                <groupId>org.quartz-scheduler</groupId>
                <artifactId>quartz</artifactId>
                <version>${quartz.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>com.mchange</groupId>
                        <artifactId>c3p0</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.mchange</groupId>
                        <artifactId>mchange-commons-java</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>com.zaxxer</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <!-- Need to explicitly specify this, because there seems to be three different xmlsec
                     dependencies in CXF (three versions). Once the CXF is gone, xmlsec can go as well. MID-5714 -->
                <groupId>org.apache.santuario</groupId>
                <artifactId>xmlsec</artifactId>
                <version>${xmlsec.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>javax.xml.stream</groupId> <!-- Other packages use stax:stax-api -->
                        <artifactId>stax-api</artifactId>
                    </exclusion>
                    <exclusion> <!-- Duplicate with woodstox-core -->
                        <groupId>org.codehaus.woodstox</groupId>
                        <artifactId>woodstox-core-asl</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.springframework</groupId>
                <artifactId>spring-core</artifactId>
                <version>${spring-framework.version}</version>
                <exclusions>
                    <!-- replaced with jcl-over-slf4j -->
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-jcl</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.opensaml</groupId>
                <artifactId>opensaml-core</artifactId>
                <version>${opensaml.version}</version>
            </dependency>
            <dependency>
                <groupId>org.opensaml</groupId>
                <artifactId>opensaml-saml-impl</artifactId>
                <version>${opensaml.version}</version>
            </dependency>
            <dependency>
                <groupId>org.opensaml</groupId>
                <artifactId>opensaml-saml-api</artifactId>
                <version>${opensaml.version}</version>
            </dependency>
            <dependency>
                <groupId>org.opensaml</groupId>
                <artifactId>opensaml-security-api</artifactId>
                <version>${opensaml.version}</version>
            </dependency>
            <dependency>
                <groupId>org.opensaml</groupId>
                <artifactId>opensaml-xmlsec-api</artifactId>
                <version>${opensaml.version}</version>
            </dependency>
            <dependency>
                <groupId>net.shibboleth.utilities</groupId>
                <artifactId>java-support</artifactId>
                <version>8.0.0</version>
            </dependency>
            <dependency>
                <groupId>org.cache2k</groupId>
                <artifactId>cache2k-api</artifactId>
                <version>${cache2k.version}</version>
            </dependency>
            <dependency>
                <groupId>org.cache2k</groupId>
                <artifactId>cache2k-core</artifactId>
                <version>${cache2k.version}</version>
            </dependency>
            <dependency>
                <groupId>com.nimbusds</groupId>
                <artifactId>nimbus-jose-jwt</artifactId>
                <version>9.15.2</version>
            </dependency>

            <dependency>
                <groupId>org.xmlunit</groupId>
                <artifactId>xmlunit-core</artifactId>
                <version>${xmlunit.version}</version>
            </dependency>
            <dependency>
                <groupId>org.xmlunit</groupId>
                <artifactId>xmlunit-legacy</artifactId>
                <version>${xmlunit.version}</version>
            </dependency>
            <dependency>
                <groupId>xml-resolver</groupId>
                <artifactId>xml-resolver</artifactId>
                <version>${xml.resolver.version}</version>
            </dependency>
            <dependency>
                <groupId>commons-cli</groupId>
                <artifactId>commons-cli</artifactId>
                <version>${commons.cli}</version>
            </dependency>
            <dependency>
                <groupId>org.forgerock.opendj</groupId>
                <artifactId>opendj-ldap-sdk</artifactId>
                <version>${opendj.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.velocity</groupId>
                <artifactId>velocity-engine-core</artifactId>
                <version>2.3</version>
            </dependency>
            <dependency>
                <groupId>org.apache.derby</groupId>
                <artifactId>derby</artifactId>
                <version>${derby.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.derby</groupId>
                <artifactId>derbynet</artifactId>
                <version>${derby.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.derby</groupId>
                <artifactId>derbyclient</artifactId>
                <version>${derby.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.derby</groupId>
                <artifactId>derbytools</artifactId>
                <version>${derby.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.inamik.text.tables</groupId>
                <artifactId>inamik-text-tables</artifactId>
                <version>0.8</version>
            </dependency>

            <!-- report dependency (needed for Microsoft Office formats) -->
            <dependency>
                <groupId>org.apache.poi</groupId>
                <artifactId>poi</artifactId>
                <version>${poi.version}</version>
            </dependency>

            <!-- Used by cxf-core, can go away with CXF -->
            <dependency>
                <groupId>org.apache.ws.xmlschema</groupId>
                <artifactId>xmlschema-core</artifactId>
                <version>2.2.5</version>
            </dependency>
            <dependency>
                <groupId>org.jvnet.jaxb2_commons</groupId>
                <artifactId>jaxb2-basics-runtime</artifactId>
                <version>1.11.1</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-csv</artifactId>
                <version>${commons.csv.version}</version>
            </dependency>
            <dependency>
                <groupId>com.j2html</groupId>
                <artifactId>j2html</artifactId>
                <version>${j2html.version}</version>
            </dependency>

            <!-- Version convergence setup; RECONSIDER after major upgrades of Boot, Maven... -->
            <dependency>
                <groupId>org.osgi</groupId>
                <artifactId>org.osgi.core</artifactId>
                <version>6.0.0</version>
            </dependency>
            <dependency>
                <groupId>com.google.errorprone</groupId>
                <artifactId>error_prone_annotations</artifactId>
                <version>2.10.0</version>
            </dependency>
            <dependency>
                <groupId>com.google.errorprone</groupId>
                <artifactId>error_prone_core</artifactId>
                <version>2.10.0</version>
            </dependency>
            <dependency>
                <groupId>org.checkerframework</groupId>
                <artifactId>checker-qual</artifactId>
                <version>3.19.0</version>
            </dependency>
            <dependency>
                <groupId>javax.el</groupId>
                <artifactId>javax.el-api</artifactId>
                <version>3.0.1-b06</version>
            </dependency>

            <!-- Maven plugins -->
            <dependency>
                <groupId>org.apache.maven</groupId>
                <artifactId>maven-plugin-api</artifactId>
                <version>${maven.api.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.codehaus.plexus</groupId>
                        <artifactId>plexus-component-annotations</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.codehaus.plexus</groupId>
                        <artifactId>plexus-classworlds</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.maven</groupId>
                <artifactId>maven-model</artifactId>
                <version>${maven.api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.maven</groupId>
                <artifactId>maven-artifact</artifactId>
                <version>${maven.api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.maven</groupId>
                <artifactId>maven-core</artifactId>
                <version>${maven.api.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.maven</groupId>
                <artifactId>maven-archiver</artifactId>
                <version>3.5.1</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.codehaus.plexus</groupId>
                        <artifactId>plexus-container-default</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.codehaus.plexus</groupId>
                        <artifactId>plexus-component-annotations</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.slf4j</groupId> <!-- We do not want multiple SLF4J implementations -->
                        <artifactId>slf4j-jdk14</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.apache.maven.shared</groupId>
                        <artifactId>maven-shared-utils</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.codehaus.plexus</groupId>
                        <artifactId>plexus-interpolation</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.codehaus.plexus</groupId>
                <artifactId>plexus-archiver</artifactId>
                <version>4.2.5</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.slf4j</groupId> <!-- We do not want multiple SLF4J implementations -->
                        <artifactId>slf4j-jdk14</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- Used by maven-plugin-api in schema-dist-maven-plugin -->
            <dependency>
                <groupId>org.codehaus.plexus</groupId>
                <artifactId>plexus-utils</artifactId>
                <version>3.3.0</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.plexus</groupId>
                <artifactId>plexus-io</artifactId>
                <version>3.2.0</version>
            </dependency>
            <dependency>
                <groupId>org.codehaus.plexus</groupId>
                <artifactId>plexus-interactivity-api</artifactId>
                <version>1.0</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.codehaus.plexus</groupId>
                        <artifactId>plexus-classworlds</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <!-- This is also used by WRO, but we want to use current version. -->
            <dependency>
                <groupId>io.github.classgraph</groupId>
                <artifactId>classgraph</artifactId>
                <version>${classgraph.version}</version>
            </dependency>
            <!-- TODO: Seriously should go away! Let's get rid of this. -->
            <dependency>
                <groupId>joda-time</groupId>
                <artifactId>joda-time</artifactId>
                <version>2.10.14</version>
            </dependency>
            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-collections4</artifactId>
                <version>4.4</version>
            </dependency>
            <dependency>
                <groupId>org.apache.directory.api</groupId>
                <artifactId>api-all</artifactId>
                <version>2.0.2</version>
                <exclusions>
                    <exclusion>
                        <artifactId>slf4j-api</artifactId>
                        <groupId>org.slf4j</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
            <!-- TODO this should go away with WSDLs -->
            <dependency>
                <groupId>javax.xml.ws</groupId>
                <artifactId>jaxws-api</artifactId>
                <version>${javax-jaxws.version}</version>
                <exclusions>
                    <!-- in favor of Jakarta version -->
                    <exclusion>
                        <groupId>javax.annotation</groupId>
                        <artifactId>javax.annotation-api</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>javax.xml.bind</groupId>
                        <artifactId>jaxb-api</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>javax.mail</groupId>
                <artifactId>mail-api</artifactId>
                <version>1.6.2</version>
            </dependency>
            <dependency>
                <groupId>com.github.openjson</groupId>
                <artifactId>openjson</artifactId>
                <version>1.0.12</version>
            </dependency>
            <dependency>
                <groupId>org.opensaml</groupId>
                <artifactId>opensaml-security-impl</artifactId>
                <version>${opensaml.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.bouncycastle</groupId>
                        <artifactId>bcprov-jdk15on</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcpkix-jdk15on</artifactId>
                <version>${bouncycastle.version}</version>
            </dependency>
            <dependency>
                <groupId>org.bouncycastle</groupId>
                <artifactId>bcprov-jdk15on</artifactId>
                <version>${bouncycastle.version}</version>
            </dependency>

            <!-- webjars -->
            <dependency>
                <groupId>org.webjars</groupId>
                <artifactId>jquery</artifactId>
                <version>3.6.0</version>
            </dependency>

            <dependency>
                <groupId>com.beust</groupId>
                <artifactId>jcommander</artifactId>
                <version>${jcommander.version}</version>
            </dependency>

            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-server</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-http</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-io</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.eclipse.jetty</groupId>
                <artifactId>jetty-util</artifactId>
                <version>${jetty.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.qpid</groupId>
                <artifactId>qpid-broker-core</artifactId>
                <version>${qpid-broker.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.qpid</groupId>
                <artifactId>qpid-broker-plugins-amqp-0-8-protocol</artifactId>
                <version>${qpid-broker.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.qpid</groupId>
                <artifactId>qpid-broker-plugins-memory-store</artifactId>
                <version>${qpid-broker.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.activemq</groupId>
                <artifactId>artemis-server</artifactId>
                <version>${artemis.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.jboss.logmanager</groupId>
                        <artifactId>jboss-logmanager</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>org.apache.activemq</groupId>
                <artifactId>artemis-jms-client</artifactId>
                <version>${artemis.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.activemq</groupId>
                <artifactId>artemis-core-client</artifactId>
                <version>${artemis.version}</version>
            </dependency>
            <dependency>
                <groupId>org.apache.activemq</groupId>
                <artifactId>artemis-commons</artifactId>
                <version>${artemis.version}</version>
            </dependency>

            <dependency>
                <groupId>io.netty</groupId>
                <artifactId>netty-all</artifactId>
                <version>4.1.65.Final</version>
                <exclusions>
                    <exclusion>
                        <groupId>ch.qos.logback</groupId>
                        <artifactId>*</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
            <dependency>
                <groupId>dnsjava</groupId>
                <artifactId>dnsjava</artifactId>
                <version>3.4.0</version>
            </dependency>

            <!-- Test support dependencies -->
            <dependency>
                <groupId>org.testng</groupId>
                <artifactId>testng</artifactId>
                <version>${testng.version}</version>
            </dependency>

            <dependency>
                <groupId>com.evolveum.commons</groupId>
                <artifactId>test-ng</artifactId>
                <version>${prism.version}</version>
            </dependency>

            <dependency>
                <groupId>com.evolveum.midpoint.infra</groupId>
                <artifactId>test-util</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>org.antlr</groupId>
                <artifactId>antlr4-runtime</artifactId>
                <version>4.9.2</version>
            </dependency>
            <dependency>
                <groupId>net.ttddyy</groupId>
                <artifactId>datasource-proxy</artifactId>
                <version>1.7</version>
            </dependency>
            <dependency>
                <groupId>org.javabits.jgrapht</groupId>
                <artifactId>jgrapht-core</artifactId>
                <version>0.9.3</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>colt</groupId>
                <artifactId>colt</artifactId>
                <version>1.2.0</version>
                <scope>test</scope>
            </dependency>

            <dependency>
                <groupId>jakarta.xml.ws</groupId>
                <artifactId>jakarta.xml.ws-api</artifactId>
                <version>3.0.1</version>
                <scope>runtime</scope>
            </dependency>
            <dependency>
                <groupId>jakarta.jws</groupId>
                <artifactId>jakarta.jws-api</artifactId>
                <version>3.0.0</version>
                <scope>runtime</scope>
            </dependency>

            <!-- Version from Spring Boot, but with checker-qual exclusion. -->
            <dependency>
                <groupId>org.postgresql</groupId>
                <artifactId>postgresql</artifactId>
                <version>${postgresql.version}</version>
                <exclusions>
                    <!-- in favor of com.google.guava:guava -->
                    <exclusion>
                        <groupId>org.checkerframework</groupId>
                        <artifactId>checker-qual</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

            <dependency>
                <groupId>org.keycloak</groupId>
                <artifactId>keycloak-authz-client</artifactId>
                <version>${keycloak.version}</version>
                <scope>test</scope>
            </dependency>
            <dependency>
                <groupId>org.keycloak</groupId>
                <artifactId>keycloak-core</artifactId>
                <version>${keycloak.version}</version>
                <scope>test</scope>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <!-- We don't want any dependencies in parent POM. -->

    <repositories>
        <repository>
            <id>evolveum</id>
            <name>Evolveum Public Releases</name>
            <url>https://nexus.evolveum.com/nexus/content/groups/public/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
        <repository>
            <id>evolveum-snapshots</id>
            <name>Evolveum Snapshots</name>
            <url>https://nexus.evolveum.com/nexus/content/repositories/snapshots/</url>
            <releases>
                <enabled>false</enabled>
            </releases>
        </repository>

        <!--
        We need this for Opensaml, version 4.1.0+ is not in Maven central repository.
        So we need Shibboleth's repo too.
        -->
        <repository>
            <id>shibboleth</id>
            <name>Shibboleth Repository</name>
            <url>https://build.shibboleth.net/nexus/content/repositories/releases/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>

        <!--
        We need this for Sleepycat JE, version 5.0.73 is released OK, but newer versions
        (like 5.0.103) is in Maven central plugin repository, which is obviously wrong.
        So we need Oracle's repo too.
        -->
        <repository>
            <id>oracle</id>
            <name>Oracle</name>
            <url>https://download.oracle.com/maven/</url>
            <snapshots>
                <enabled>false</enabled>
            </snapshots>
        </repository>
    </repositories>
    <pluginRepositories>
        <pluginRepository>
            <id>evolveum-nexus</id>
            <name>Plugin Snapshots</name>
            <url>https://nexus.evolveum.com/nexus/content/repositories/snapshots/</url>
        </pluginRepository>
        <pluginRepository>
            <id>evolveum</id>
            <name>Evolveum</name>
            <url>https://nexus.evolveum.com/nexus/content/groups/public/</url>
        </pluginRepository>
    </pluginRepositories>

    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-source-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>attach-sources</id>
                        <phase>package</phase>
                        <goals>
                            <goal>jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>com.lukegb.mojo</groupId>
                <artifactId>gitdescribe-maven-plugin</artifactId>
                <version>3.0</version>
                <executions>
                    <execution>
                        <goals>
                            <goal>gitdescribe</goal>
                        </goals>
                        <id>git-describe</id>
                        <phase>initialize</phase>
                        <configuration>
                            <outputPrefix></outputPrefix>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <skipIfEmpty>true</skipIfEmpty>
                    <archive>
                        <manifestEntries>
                            <Version-Number>${project.version}</Version-Number>
                            <SCM-Revision>${git.describe}</SCM-Revision>
                            <Organization>Evolveum</Organization>
                            <Organization-URL>https://www.evolveum.com</Organization-URL>
                            <Bugtracking-System>https://jira.evolveum.com</Bugtracking-System>
                            <License>dual-licensed under the Apache License 2.0 and European Union Public License</License>
                            <License-URL>https://www.apache.org/licenses/LICENSE-2.0.txt and https://joinup.ec.europa.eu/collection/eupl/eupl-text-11-12</License-URL>
                        </manifestEntries>
                    </archive>
                </configuration>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>2.3</version>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
                <executions>
                    <execution>
                        <id>enforce</id>
                        <configuration>
                            <rules>
                                <requireMavenVersion>
                                    <version>3.6</version>
                                </requireMavenVersion>
                                <dependencyConvergence/>
                                <bannedDependencies>
                                    <excludes>
                                        <!-- both replaced by org.slf4j:jcl-over-slf4j -->
                                        <exclude>commons-logging:commons-logging</exclude>
                                        <exclude>org.springframework:spring-jcl</exclude>
                                        <!--
                                        jaxb-core replaced by Glassfish jaxb-runtime + txw2
                                        jaxb-xjc replaced by Glassfish jaxb-xjc + xsom + codemodel
                                        -->
                                        <exclude>com.sun.xml.bind:*</exclude>
                                        <!-- in favor of jakarta.xml.bind:jakarta.xml.bind-api -->
                                        <exclude>javax.xml.bind:jaxb-api</exclude>
                                        <!-- in favor of jakarta.activation:jakarta.activation-api -->
                                        <exclude>javax.activation:javax.activation-api</exclude>
                                        <!-- in favor of com.sun.activation:jakarta.activation -->
                                        <exclude>com.sun.activation:javax.activation</exclude>
                                        <exclude>javax.activation:activation</exclude>
                                        <!-- in favor of jakarta.annotation:jakarta.annotation-api -->
                                        <exclude>javax.annotation:javax.annotation-api</exclude>
                                        <!-- package with multiple XML APIs, conflicts assured
                                        (WE CAN'T YET see todo at the xalan/xerces dep declarations above) -->
                                        <!--<exclude>xml-apis:xml-apis</exclude>-->
                                    </excludes>
                                </bannedDependencies>
                            </rules>
                        </configuration>
                        <goals>
                            <goal>enforce</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.2</version>
                <dependencies>
                    <dependency>
                        <groupId>org.ow2.asm</groupId>
                        <artifactId>asm</artifactId>
                        <version>9.1</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>analyze</id>
                        <goals>
                            <goal>analyze-only</goal>
                        </goals>
                        <configuration>
                            <failOnWarning>true</failOnWarning>
                            <ignoreNonCompile>true</ignoreNonCompile>
                            <ignoredUnusedDeclaredDependencies>
                                <!--
                                We don't want anything here, except for test support...
                                In case of false report, check that the dependency is not used only in unused imports.
                                -->
                                <ignoredUnusedDeclaredDependency>org.assertj:assertj-core</ignoredUnusedDeclaredDependency>

                                <!--dependency contains bug when dependency is used only in annotation, we use it in authentication-impl -->
                                <ignoredUnusedDeclaredDependency>org.springframework.boot:spring-boot-autoconfigure</ignoredUnusedDeclaredDependency>

                                <!--  Since generated code depends on prism-impl, it needs sometime to be runtime/compile
                                      but report can not detect this uses (and if you change scope, it can not compile target project -->
                                <ignoredUsedUndeclaredDependency>com.evolveum.prism:prism-impl</ignoredUsedUndeclaredDependency>
                            </ignoredUnusedDeclaredDependencies>
                            <ignoredUsedUndeclaredDependencies>
                                <!--
                                Anything from midPoint is in one version, no conflict should occur and there is no real
                                need to declare transitive dependencies (e.g. *-impl implying *-api, etc.).
                                -->
                                <ignoredUsedUndeclaredDependency>com.evolveum.midpoint.*:*</ignoredUsedUndeclaredDependency>

                                <!-- Testing dependencies are not troubling us from. -->
                                <ignoredUsedUndeclaredDependency>org.testng:testng</ignoredUsedUndeclaredDependency>
                                <ignoredUsedUndeclaredDependency>org.assertj:assertj-core</ignoredUsedUndeclaredDependency>
                                <ignoredUsedUndeclaredDependency>org.javasimon:javasimon-core</ignoredUsedUndeclaredDependency>

                                <!-- Unreliable detection -->
                                <ignoredUsedUndeclaredDependency>javax.xml.bind:jaxb-api</ignoredUsedUndeclaredDependency>

                                <!-- the latter is superset of API and this totally confuses dep analyzer-->
                                <ignoredUsedUndeclaredDependency>jakarta.activation:jakarta.activation-api</ignoredUsedUndeclaredDependency>
                                <ignoredUsedUndeclaredDependency>com.sun.activation:jakarta.activation</ignoredUsedUndeclaredDependency>

                                <!-- needs too many exclusions, used by apache-cxf (xjc plugin, prism-impl, schema, ..) -->
                                <ignoredUsedUndeclaredDependency>jakarta.xml.bind:jakarta.xml.bind-api</ignoredUsedUndeclaredDependency>
                                <ignoredUsedUndeclaredDependency>org.glassfish.jaxb:xsom</ignoredUsedUndeclaredDependency>
                                <ignoredUsedUndeclaredDependency>org.glassfish.jaxb:jaxb-runtime</ignoredUsedUndeclaredDependency>

                                <!-- Falsely reported, not used explicitly, only transient dependency. -->
                                <ignoredUsedUndeclaredDependency>org.slf4j:jcl-over-slf4j</ignoredUsedUndeclaredDependency>
                                <ignoredUsedUndeclaredDependency>org.slf4j:slf4j-api</ignoredUsedUndeclaredDependency>
                                <ignoredUsedUndeclaredDependency>org.danekja:jdk-serializable-functional</ignoredUsedUndeclaredDependency>
                                <ignoredUsedUndeclaredDependency>org.apache.tomcat.embed:tomcat-embed-core</ignoredUsedUndeclaredDependency>
                            </ignoredUsedUndeclaredDependencies>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${checkstyle.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>8.43</version>
                    </dependency>
                </dependencies>
                <configuration>
                    <!--suppress MavenModelInspection: provided by mvn(w)/IDE/Jenkins -->
                    <configLocation>${maven.multiModuleProjectDirectory}/config/checkstyle/checkstyle.xml</configLocation>
                    <!--suppress MavenModelInspection: provided by mvn(w)/IDE/Jenkins -->
                    <suppressionsLocation>${maven.multiModuleProjectDirectory}/config/checkstyle/checkstyle-suppressions.xml</suppressionsLocation>
                    <encoding>UTF-8</encoding>
                    <consoleOutput>true</consoleOutput>
                    <failsOnError>true</failsOnError>
                    <linkXRef>false</linkXRef>
                    <includes>**/*.java</includes>
                    <!-- Also need to add suffixes to checkstyle.xml -->
                    <resourceIncludes>**/*.properties,**/*.xml,**/*.xsd,**/*.wsdl,**/*.json,**/*.yaml,**/*.yml</resourceIncludes>
                </configuration>
                <executions>
                    <execution>
                        <id>validate</id>
                        <phase>validate</phase>
                        <goals>
                            <goal>check</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>

        <pluginManagement>
            <plugins>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>3.10.1</version>
                    <configuration>
                        <source>${project.source.version}</source>
                        <target>${project.source.version}</target>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>3.1.0</version>
                </plugin>
                <plugin>
                    <groupId>com.rimerosolutions.maven.plugins</groupId>
                    <artifactId>wrapper-maven-plugin</artifactId>
                    <version>0.0.4</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-plugin-plugin</artifactId>
                    <version>3.6.1</version>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-deploy-plugin</artifactId>
                    <version>2.8.2</version>
                    <!--
                    With 3.0.0-M1 javadoc module fails with:
                    The packaging plugin for this project did not assign a main file to the project but it has attachments. Change packaging to 'pom'.
                    -->
                    <!--<version>3.0.0-M1</version>-->
                    <configuration>
                        <deployAtEnd>true</deployAtEnd>
                    </configuration>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${surefire.version}</version>
                    <executions>
                        <execution>
                            <id>default-test</id> <!-- unit tests -->
                            <phase>test</phase>
                            <goals>
                                <goal>test</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <!--<parallel>false</parallel>-->
                        <forkCount>1</forkCount>
                        <reuseForks>true</reuseForks>
                        <redirectTestOutputToFile>${redirectTestOutputToFile}</redirectTestOutputToFile>
                        <trimStackTrace>false</trimStackTrace>
                        <!-- See https://issues.apache.org/jira/browse/SUREFIRE-1588 -->
                        <useSystemClassLoader>false</useSystemClassLoader>
                        <systemPropertyVariables>
                            <javax.net.ssl.trustStore>src/test/resources/truststore.jks</javax.net.ssl.trustStore>
                            <midpoint.home>target/midpoint-home</midpoint.home>
                            <java.util.logging.config.file>${project.build.directory}/test-classes/logging.properties</java.util.logging.config.file>
                        </systemPropertyVariables>
                        <argLine>${surefire.args}</argLine>
                        <suiteXmlFiles>
                            <suiteXmlFile>testng-unit.xml</suiteXmlFile>
                        </suiteXmlFiles>
                        <properties>
                            <property>
                                <name>suitename</name>
                                <value>Unit</value>
                            </property>
                            <property>
                                <name>listener</name>
                                <value>
                                    com.evolveum.midpoint.tools.testng.TestListener,com.evolveum.midpoint.tools.testng.RetryListener
                                </value>
                            </property>
                        </properties>
                    </configuration>
                    <dependencies>
                        <dependency>
                            <groupId>org.apache.maven.surefire</groupId>
                            <artifactId>surefire-testng</artifactId>
                            <version>${surefire.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${failsafe.version}</version>
                    <executions>
                        <execution>
                            <id>integration-test</id>
                            <phase>integration-test</phase>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <redirectTestOutputToFile>${redirectTestOutputToFile}</redirectTestOutputToFile>
                        <systemPropertyVariables>
                            <javax.net.ssl.trustStore>src/test/resources/truststore.jks</javax.net.ssl.trustStore>
                            <midpoint.home>target/midpoint-home</midpoint.home>
                            <java.util.logging.config.file>${project.build.directory}/test-classes/logging.properties</java.util.logging.config.file>
                        </systemPropertyVariables>
                        <argLine>${failsafe.args}</argLine>
                        <suiteXmlFiles>
                            <suiteXmlFile>testng-integration.xml</suiteXmlFile>
                        </suiteXmlFiles>
                        <properties>
                            <property>
                                <name>suitename</name>
                                <value>Integration</value>
                            </property>
                            <property>
                                <name>listener</name>
                                <value>com.evolveum.midpoint.tools.testng.TestListener,com.evolveum.midpoint.tools.testng.RetryListener</value>
                            </property>
                        </properties>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>findbugs-maven-plugin</artifactId>
                    <version>3.0.5</version>
                    <configuration>
                        <effort>Max</effort>
                        <threshold>Low</threshold>
                        <xmlOutput>true</xmlOutput>
                        <onlyAnalyze>com.evolveum.midpoint.*</onlyAnalyze>
                    </configuration>
                </plugin>
                <plugin>
                    <artifactId>maven-assembly-plugin</artifactId>
                    <version>3.3.0</version>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

    <reporting>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>findbugs-maven-plugin</artifactId>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <!-- TODO: unify with other checkstyle setup in pluginManagement? -->
                <version>${checkstyle.version}</version>
                <configuration>
                    <!--suppress MavenModelInspection: provided by mvn(w)/IDE/Jenkins -->
                    <configLocation>${maven.multiModuleProjectDirectory}/build-system/checkstyle-configs/checkstyle.xml</configLocation>
                    <!-- TODO: what about suppressions? without them and with failsOnError true it must fail, or not? -->
                    <encoding>UTF-8</encoding>
                    <consoleOutput>true</consoleOutput>
                    <failsOnError>true</failsOnError>
                    <linkXRef>false</linkXRef>
                </configuration>
                <reportSets>
                    <reportSet>
                        <reports>
                            <report>checkstyle</report>
                        </reports>
                    </reportSet>
                </reportSets>
            </plugin>
        </plugins>
    </reporting>

    <profiles>
        <profile>
            <id>dist</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <modules>
                <module>dist</module>
            </modules>
        </profile>

        <!--
        Activating extra tests (tests under testing module), skipping other tests.
        Often we want to combine with disabling dist: -P extratest,-dist
        See testing/pom.xml for more on "extra" tests, but we need to skip tests here to disable
        the default unit/integration tests covered by default "mvn clean install" build.
        -->
        <profile>
            <id>extratest</id>
            <properties>
                <skipTests>true</skipTests>
                <!-- Long/Story tests require more memory: -->
                <surefire.args>-Xmx8g --add-exports java.management/sun.management=ALL-UNNAMED</surefire.args>
                <failsafe.args>-Xmx8g --add-exports java.management/sun.management=ALL-UNNAMED -Duser.language=en</failsafe.args>
            </properties>
        </profile>

        <!--
        See Maven modules using this profile, e.g. schema or repo-impl-sql-test.
        The profile is NOT active by default and typically configures this:
        - Declares the right plugin (surefire or failsafe) depending on the one normally used in the module.
          Technically, even both can be used, but go with the one used in that POM.
        - Test testing plugin says skipTests=false (that is to run the tests).
        - It defines system property mp.perf.report.prefix=target/PERF (without it CSV goes to stdout).
        - It defines suiteXmlFile=testng-perf.xml - suite file is different from normally used ones.
          Typically, perf test classes are ONLY in perf suite as they would slow down default builds.
        -->
        <profile>
            <id>perftest</id>
            <properties>
                <skipTests>true</skipTests>
            </properties>
        </profile>

        <profile>
            <id>sqale</id>
            <properties>
                <!-- Switches test config.xml to the one declaring "sqale" repository. -->
                <surefire.args>-Xmx4g --add-exports java.management/sun.management=ALL-UNNAMED -Dtest.config.file=test-config-new-repo.xml</surefire.args>
                <failsafe.args>-Xmx4g --add-exports java.management/sun.management=ALL-UNNAMED -Duser.language=en -Dtest.config.file=test-config-new-repo.xml</failsafe.args>
            </properties>
        </profile>
    </profiles>
</project>
