<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2010-2017 Evolveum
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<resource oid="10000000-0000-0000-0000-000000000004"
		  xmlns="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
          xmlns:q="http://prism.evolveum.com/xml/ns/public/query-3"
          xmlns:icfs="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/resource-schema-3"
          xmlns:ri="http://midpoint.evolveum.com/xml/ns/public/resource/instance-3"
          xmlns:t="http://prism.evolveum.com/xml/ns/public/types-3"
          xmlns:piracy="http://midpoint.evolveum.com/xml/ns/samples/piracy"
          xmlns:xsd="http://www.w3.org/2001/XMLSchema"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

	<name>Dummy Resource</name>
	<connectorRef type="ConnectorType">
		<filter>
			<q:and>
				<q:equal>
					<q:path>connectorType</q:path>
					<q:value>com.evolveum.icf.dummy.connector.DummyConnector</q:value>
				</q:equal>
				<q:equal>
					<q:path>connectorVersion</q:path>
					<q:value>2.0</q:value>
				</q:equal>
			</q:and>
		</filter>
	</connectorRef>
	<connectorConfiguration xmlns:icfi="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/bundle/com.evolveum.icf.dummy/com.evolveum.icf.dummy.connector.DummyConnector"
	               xmlns:icfc="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/connector-schema-3">
					   
		<icfc:configurationProperties>
			<icfi:instanceId></icfi:instanceId> <!-- Default instance. -->
			<icfi:requireExplicitEnable>true</icfi:requireExplicitEnable>
			<icfi:uselessGuardedString>
				<clearValue>whatever</clearValue>
			</icfi:uselessGuardedString>
			<icfi:uselessString>USEless</icfi:uselessString>
			<icfi:varyLetterCase>true</icfi:varyLetterCase>
		</icfc:configurationProperties>
		
		<icfc:resultsHandlerConfiguration>
			<icfc:enableNormalizingResultsHandler>false</icfc:enableNormalizingResultsHandler>
			<icfc:enableFilteredResultsHandler>false</icfc:enableFilteredResultsHandler>
			<icfc:enableAttributesToGetSearchResultsHandler>false</icfc:enableAttributesToGetSearchResultsHandler>
		</icfc:resultsHandlerConfiguration>

	</connectorConfiguration>
	
	<schemaHandling>
		<objectType>
			<kind>account</kind>
			<intent>default</intent>
			<displayName>Default Account</displayName>
			<default>true</default>
			<objectClass>ri:AccountObjectClass</objectClass>
			<attribute>
				<ref>icfs:name</ref>
				<displayName>Username</displayName>
				<outbound>
				    <strength>strong</strength>
				    <source>
				    	<path>$user/name</path>
				    </source>
					<expression>
						<script>
							<code>
								name + iterationToken
							</code>
						</script>
					</expression>
				</outbound>
				<inbound>
					<!-- This avoids "kickback" of a name from account to a user. -->
					<strength>weak</strength>
					<target>
						<path>$user/name</path>
					</target>
				</inbound>
			</attribute>
			<attribute>
				<ref>icfs:uid</ref>
				<displayName>UID</displayName>
			</attribute>
			<attribute>
				<ref>ri:fullname</ref>
				<displayName>Full Name</displayName>
				<outbound>
					<source>
						<path>$user/fullName</path>
					</source>
				</outbound>
				<inbound>
					<strength>weak</strength>
					<expression>
						<script>
							<allowEmptyValues>true</allowEmptyValues>
							<code>
								if (input?.contains('#')) {
                            		return null
                        		} else {
                            		return input
                        		}
							</code>
						</script>
					</expression>
					<target>
						<path>$user/fullName</path>
					</target>
				</inbound>
			</attribute>
			<attribute>
				<ref>ri:title</ref>
				<tolerant>true</tolerant>
			</attribute>
			<attribute>
				<ref>ri:location</ref>
				<displayName>Location</displayName>
				<outbound>
					<strength>strong</strength>
					<source>
						<path>
							$user/locality
						</path>
					</source>
				</outbound>
				<inbound>
					<channel>http://midpoint.evolveum.com/xml/ns/public/provisioning/channels-3#import</channel>
					<expression>
						<allowEmptyValues>false</allowEmptyValues>
						<script>
							<code>'Came from ' + input</code>
						</script>
					</expression>
					<target>
						<path>description</path>
					</target>
				</inbound>
			</attribute>
			<attribute>
				<ref>ri:ship</ref>
				<displayName>Ship</displayName>
				<inbound>
					<expression>
						<script>
							<allowEmptyValues>false</allowEmptyValues>
							<code>'The crew of ' + input</code>
						</script>
					</expression>
					<target>
						<path>organizationalUnit</path>
					</target>
					<condition>
						<script>
							<code>input != null</code>
						</script>
					</condition>
				</inbound>
			</attribute>
			<attribute>
				<ref>ri:loot</ref>
				<displayName>Loot</displayName>
				<fetchStrategy>explicit</fetchStrategy>
				<outbound>
					<channel>http://pirates.net/avast</channel>
					<expression>
						<script>
							<code>9999 + 1</code>
						</script>
					</expression>
				</outbound>
			</attribute>
			<attribute>
				<ref>ri:weapon</ref>
				<displayName>Weapon</displayName>
				<outbound>
					<strength>weak</strength>
					<source>
						<path>
                            declare namespace piracy = "http://midpoint.evolveum.com/xml/ns/samples/piracy";
							$user/extension/piracy:weapon
						</path>
					</source>
				</outbound>
			</attribute>
			<attribute>
				<ref>ri:drink</ref>
				<displayName>Drink</displayName>
				<tolerant>false</tolerant>
				<outbound>
					<strength>strong</strength>
					<expression>
						<value>rum</value>
					</expression>
				</outbound>
			</attribute>
			<attribute>
				<ref>ri:quote</ref>
				<displayName>Quote</displayName>
				<tolerant>true</tolerant>
				<outbound>
					<strength>strong</strength>
					<expression>
						<value>Arr!</value>
					</expression>
				</outbound>
			</attribute>
            <attribute>
                <ref>ri:gossip</ref>
                <displayName>Gossip</displayName>
                <tolerant>true</tolerant>
            </attribute>
            <attribute>
                <ref>ri:water</ref>
                <limitations>
                	<ignore>true</ignore>
                </limitations>
                <outbound>
                	<!-- Make sure this mapping is really ignored -->
					<expression>
						<value>fishy</value>
					</expression>
				</outbound>
				<inbound>
                	<!-- Make sure this mapping is really ignored -->
					<expression>
						<value>very FISHY</value>
					</expression>
					<target>
						<path>$user/fullName</path>
					</target>
				</inbound>
            </attribute>
            
            <association>
            	<ref>ri:group</ref>
            	<tolerant>false</tolerant>
            	<kind>entitlement</kind>
            	<intent>group</intent>
            	<direction>objectToSubject</direction>
            	<associationAttribute>ri:members</associationAttribute>
            	<valueAttribute>icfs:name</valueAttribute>
            </association>

            <association>
            	<ref>ri:priv</ref>
            	<kind>entitlement</kind>
            	<intent>privilege</intent>
            	<direction>subjectToObject</direction>
            	<associationAttribute>ri:privileges</associationAttribute>
            	<valueAttribute>icfs:name</valueAttribute>
            </association>

			<iteration>
				<maxIterations>5</maxIterations>
			</iteration>
            
            <protected>
            	<icfs:name>daviejones</icfs:name>
            </protected>
            <protected>
            	<icfs:name>calypso</icfs:name>
            </protected>
            
            <activation>
            	<!-- Explicit existence mapping, but does the same as the default one -->
            	<existence>
            		<outbound>
            			<expression>
            				<asIs/>
            			</expression>
            		</outbound>
            	</existence>
            	<administrativeStatus>
            		<outbound/>
            		<inbound>
            			<strength>weak</strength>
            			<condition>
            				<script>
            					<code>focus?.getActivation()?.getValidFrom() == null &amp;&amp; focus?.getActivation()?.getValidTo() == null</code>
            				</script>
            			</condition>
            		</inbound>
            	</administrativeStatus>
            </activation>
            
            <credentials>
                <password>
                    <outbound>
                    	<strength>weak</strength>
                    	<expression>
                        	<asIs/>
                        </expression>
                    </outbound>
                    <inbound>
                    	<strength>weak</strength>
                        <expression>
                            <generate/>
                        </expression>
                    </inbound>
                </password>
            </credentials>
            
		</objectType>

		<objectType>
			<kind>account</kind>
			<intent>test</intent>
			<displayName>Testing Account</displayName>
			<default>false</default>
			<objectClass>ri:AccountObjectClass</objectClass>
			<attribute>
				<ref>icfs:name</ref>
				<outbound>
				    <strength>strong</strength>
				    <source>
				    	<path>$user/name</path>
				    </source>
					<expression>
						<script>
							<code>
								'T' + name + iterationToken
							</code>
						</script>
					</expression>
				</outbound>
				<inbound>
					<!-- This avoids "kickback" of a name from account to a user. -->
					<strength>weak</strength>
					<expression>
						<script>
							<code>
								input?.substring(1)
							</code>
						</script>
					</expression>
					<target>
						<path>$user/name</path>
					</target>
				</inbound>
			</attribute>
			<attribute>
				<ref>ri:fullname</ref>
				<outbound>
					<source>
						<path>$user/fullName</path>
					</source>
					<expression>
						<script>
							<code>fullName + ' (test)'</code>
						</script>
					</expression>
				</outbound>
				<inbound>
					<strength>weak</strength>
					<target>
						<path>$user/fullName</path>
					</target>
				</inbound>
			</attribute>
			<attribute>
				<ref>ri:location</ref>
				<outbound>
					<strength>strong</strength>
					<source>
						<path>
							$user/locality
						</path>
					</source>
				</outbound>
			</attribute>
			<attribute>
				<ref>ri:ship</ref>
				<displayName>Ship</displayName>
				<inbound>
					<expression>
						<script>
							<code>'The crew of Titanicum ' + input + 'icum'</code>
						</script>
					</expression>
					<target>
						<path>organizationalUnit</path>
					</target>
					<condition>
						<script>
							<code>input != null</code>
						</script>
					</condition>
				</inbound>
			</attribute>
            
            <association>
            	<ref>ri:group</ref>
            	<outbound>
            		<expression>
            			<value>
                            <!-- "testers" group -->
                            <name>ri:group</name>
                            <shadowRef oid="20000000-0000-0000-3333-000000000002" type="ShadowType"/>
            			</value>
            		</expression>
            	</outbound>
            	<kind>entitlement</kind>
            	<intent>group</intent>
            	<direction>objectToSubject</direction>
            	<associationAttribute>ri:members</associationAttribute>
            	<valueAttribute>icfs:name</valueAttribute>
            </association>

            <association>
            	<ref>ri:priv</ref>
            	<kind>entitlement</kind>
            	<intent>privilege</intent>
            	<direction>subjectToObject</direction>
            	<associationAttribute>ri:privileges</associationAttribute>
            	<valueAttribute>icfs:name</valueAttribute>
            </association>

			<iteration>
				<maxIterations>5</maxIterations>
			</iteration>
            
            <activation>
            	<administrativeStatus>
            		<outbound/>
            		<inbound>
            			<strength>weak</strength>
            		</inbound>
            	</administrativeStatus>
            </activation>
            
            <credentials>
                <password>
                    <outbound/>
                </password>
            </credentials>
            
		</objectType>


		
		<objectType>
			<kind>entitlement</kind>
        	<intent>group</intent>
        	<default>true</default>
        	<objectClass>ri:GroupObjectClass</objectClass>
        	<attribute>
				<ref>icfs:name</ref>
				<displayName>Groupname</displayName>
				<exclusiveStrong>true</exclusiveStrong>
				<outbound>
				    <source>
				    	<path>$focus/name</path>
				    </source>
                    <expression>
                        <path>declare namespace t="http://prism.evolveum.com/xml/ns/public/types-3";
                            t:norm</path>
                    </expression>
				</outbound>
			</attribute>
			<attribute>
				<ref>ri:description</ref>
				<outbound>
				    <source>
				    	<path>$focus/description</path>
				    </source>
				</outbound>
			</attribute>
            <attribute>
                <ref>ri:cc</ref>
                <outbound>
                    <strength>weak</strength>
                    <source>
                        <path>
                            declare namespace piracy = "http://midpoint.evolveum.com/xml/ns/samples/piracy";
                            $focus/extension/piracy:costCenter
                        </path>
                    </source>
                </outbound>
                <inbound>
                    <target>
                        <path>declare namespace piracy = "http://midpoint.evolveum.com/xml/ns/samples/piracy";
                            $focus/extension/piracy:costCenter</path>
                    </target>
                </inbound>
            </attribute>
            <attribute>
				<ref>ri:members</ref>
				<fetchStrategy>minimal</fetchStrategy>
			</attribute>
        </objectType>
        
        <objectType>
        	<kind>entitlement</kind>
        	<intent>privilege</intent>
        	<default>false</default>
        	<objectClass>ri:CustomprivilegeObjectClass</objectClass>
        </objectType>
		
	</schemaHandling>
	
	<scripts>
		<script>
			<host>resource</host>
			<language>Logo</language>
			<argument>
				<script>
					<code>
					'user: ' + user?.getName()
					</code>
				</script> 
				<name>usr</name>
			</argument>
			<argument>
				<script>
					<!-- Note: We cannot test for account name as name is only assigned in provisioning -->
					<code>
					'account: ' + account?.getActivation()?.getAdministrativeStatus()
					</code>
				</script> 
				<name>acc</name>
			</argument>
			<argument>
				<script>
					<code>
					'resource: ' + resource?.getName()
					</code>
				</script> 
				<name>res</name>
			</argument>
			<argument>
 				<value>3</value>
				<name>size</name>
			</argument>
			<code>
to spiral :size
   if  :size > 30 [stop]
   fd :size rt 15
   spiral :size *1.02
end
			</code>
			<operation>add</operation>
            <kind>account</kind>
			<order>after</order>
		</script>
		<script>
			<host>resource</host>
			<language>Gibberish</language>
			<argument>
				<path>$user/costCenter</path>
				<name>howMuch</name>
			</argument>
			<argument>
				<value>from here to there</value>
				<name>howLong</name>
			</argument>
			<argument>
				<path>$user/name</path>
				<name>who</name>
			</argument>
			<argument>
				<path>$user/fullName</path>
				<name>whatchacallit</name>
			</argument>
			<code>Beware the Jabberwock, my son!</code>
			<operation>modify</operation>
            <kind>account</kind>
			<order>before</order>
		</script>
		<script>
			<host>resource</host>
			<language>Gibberish</language>
			<code>The Jabberwock, with eyes of flame</code>
			<operation>delete</operation>
            <kind>account</kind>
			<order>after</order>
		</script>
		<script>
			<host>resource</host>
			<language>Gibberish</language>
			<argument>
				<path>$focus/name</path>
				<name>who</name>
			</argument>
			<code>The vorpal blade went snicker-snack!</code>
			<operation>reconcile</operation>
            <kind>account</kind>
			<order>before</order>
		</script>
		<script>
			<host>resource</host>
			<language>Gibberish</language>
			<argument>
				<path>$shadow/activation/administrativeStatus</path>
				<name>how</name>
			</argument>
			<code>He left it dead, and with its head</code>
			<operation>reconcile</operation>
            <kind>account</kind>
			<order>after</order>
		</script>
	</scripts>
	
	<consistency>
		<avoidDuplicateValues>true</avoidDuplicateValues>
		<caseIgnoreAttributeNames>true</caseIgnoreAttributeNames>
	</consistency>
	
	<synchronization>
		<objectSynchronization>
			<objectClass>ri:AccountObjectClass</objectClass>
			<kind>account</kind>
			<intent>default</intent>
			<enabled>true</enabled>
			<condition>
				<script>
					<code>!basic.getAttributeValue(shadow, 'http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/resource-schema-3', 'name').startsWith("T")</code>
				</script>
			</condition>
			<correlation>
				<q:equal>
					<q:path>name</q:path>
					<expression>
						<path>declare namespace icfs="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/resource-schema-3";
                            $account/attributes/icfs:name</path>
					</expression>
				</q:equal>
			</correlation>
			<reaction>
	            <situation>linked</situation>
	            <synchronize>true</synchronize>
	        </reaction>
	        <reaction>
	            <situation>deleted</situation>
	            <synchronize>true</synchronize>
	            <action>
	            	<handlerUri>http://midpoint.evolveum.com/xml/ns/public/model/action-3#unlink</handlerUri>
	            </action>
	        </reaction>
	        <reaction>
	            <situation>unlinked</situation>
	            <synchronize>true</synchronize>
	            <action>
	            	<handlerUri>http://midpoint.evolveum.com/xml/ns/public/model/action-3#link</handlerUri>
	            </action>
	        </reaction>
	        <reaction>
	            <situation>unmatched</situation>
	            <synchronize>true</synchronize>
	            <action>
	            	<handlerUri>http://midpoint.evolveum.com/xml/ns/public/model/action-3#addFocus</handlerUri>
	            </action>
	        </reaction>
        </objectSynchronization>

		<objectSynchronization>
			<objectClass>ri:AccountObjectClass</objectClass>
			<kind>account</kind>
			<intent>test</intent>
			<enabled>true</enabled>
			<condition>
				<script>
					<code>basic.getAttributeValue(shadow, 'http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/resource-schema-3', 'name').startsWith("T")</code>
				</script>
			</condition>
			<correlation>
				<q:equal>
					<q:path>name</q:path>
					<expression>
						<script>
							<code>basic.getAttributeValue(shadow, 'http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/resource-schema-3', 'name').substring(1)</code>
						</script>
					</expression>
				</q:equal>
			</correlation>
			<reaction>
	            <situation>linked</situation>
	            <synchronize>true</synchronize>
	        </reaction>
	        <reaction>
	            <situation>deleted</situation>
	            <synchronize>true</synchronize>
	            <action>
	            	<handlerUri>http://midpoint.evolveum.com/xml/ns/public/model/action-3#unlink</handlerUri>
	            </action>
	        </reaction>
	        <reaction>
	            <situation>unlinked</situation>
	            <synchronize>true</synchronize>
	            <action>
	            	<handlerUri>http://midpoint.evolveum.com/xml/ns/public/model/action-3#link</handlerUri>
	            </action>
	        </reaction>
	        <reaction>
	            <situation>unmatched</situation>
	            <synchronize>true</synchronize>
	            <action>
	            	<handlerUri>http://midpoint.evolveum.com/xml/ns/public/model/action-3#addFocus</handlerUri>
	            </action>
	        </reaction>
        </objectSynchronization>
	</synchronization>

</resource>
