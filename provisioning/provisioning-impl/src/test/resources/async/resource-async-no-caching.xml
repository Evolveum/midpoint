<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2010-2019 Evolveum and contributors
  ~
  ~ This work is dual-licensed under the Apache License 2.0
  ~ and European Union Public License. See LICENSE file for details.
  -->

<resource oid="fb04d113-ebf8-41b4-b13b-990a597d110b"
          xmlns="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
          xmlns:c="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
          xmlns:q="http://prism.evolveum.com/xml/ns/public/query-3"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xmlns:icfs="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/resource-schema-3"
          xmlns:conf="http://midpoint.evolveum.com/xml/ns/public/connector/builtin-1/bundle/com.evolveum.midpoint.provisioning.ucf.impl.builtin.async/AsyncUpdateConnector"
          xmlns:mr="http://prism.evolveum.com/xml/ns/public/matching-rule-3"
          xmlns:ri="http://midpoint.evolveum.com/xml/ns/public/resource/instance-3"
          xmlns:icfc="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/connector-schema-3"
          xmlns:cap="http://midpoint.evolveum.com/xml/ns/public/resource/capabilities-3">

    <name>Async Update Resource</name>
    <connectorRef oid="will-be-supplied-by-the-test-code"/>
    <connectorConfiguration>
        <conf:sources>
            <other>
                <className>com.evolveum.midpoint.provisioning.impl.async.MockAsyncUpdateSource</className>
            </other>
        </conf:sources>
    </connectorConfiguration>
    <schema>
        <definition>
            <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified"
                        xmlns:ra="http://midpoint.evolveum.com/xml/ns/public/resource/annotation-3"
                        targetNamespace="http://midpoint.evolveum.com/xml/ns/public/resource/instance-3">
                <xsd:import namespace="http://midpoint.evolveum.com/xml/ns/public/common/common-3"/>
                <xsd:import namespace="http://prism.evolveum.com/xml/ns/public/annotation-3"/>
                <xsd:import namespace="http://midpoint.evolveum.com/xml/ns/public/resource/annotation-3"/>
                <xsd:complexType name="AccountObjectClass">
                    <xsd:annotation>
                        <xsd:appinfo>
                            <ra:resourceObject/>
                            <ra:identifier>icfs:uid</ra:identifier>
                            <ra:secondaryIdentifier>icfs:name</ra:secondaryIdentifier>
                            <ra:displayNameAttribute>icfs:name</ra:displayNameAttribute>
                            <ra:namingAttribute>icfs:name</ra:namingAttribute>
                            <ra:kind>account</ra:kind>
                            <ra:default/>
                        </xsd:appinfo>
                    </xsd:annotation>
                    <xsd:sequence>
                        <xsd:element ref="icfs:name"/>
                        <xsd:element ref="icfs:uid"/>
                        <xsd:element name="test" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                        <xsd:element name="memberOf" type="xsd:string" minOccurs="0" maxOccurs="unbounded"/>
                    </xsd:sequence>
                </xsd:complexType>
            </xsd:schema>
        </definition>
    </schema>
    <!-- This additional connector is needed because ShadowManager tries to fetch change.objectCurrent
         from the resource, if there's no caching. And the AsyncUpdateConnector obviously does not support
         reads from the resource. -->
    <additionalConnector>
        <name>Dummy</name>
        <connectorRef oid="will-be-supplied-by-the-test-code"/>
        <connectorConfiguration xmlns:icfi="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/bundle/com.evolveum.icf.dummy/com.evolveum.icf.dummy.connector.DummyConnector"
                                xmlns:icfc="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/connector-schema-3">
            <icfc:configurationProperties>
                <icfi:instanceId>async</icfi:instanceId>
                <icfi:supportActivation>false</icfi:supportActivation>
            </icfc:configurationProperties>
        </connectorConfiguration>
        <capabilities>
            <configured>
                <cap:read/>
                <cap:schema>
                    <cap:enabled>false</cap:enabled>
                </cap:schema>
            </configured>
        </capabilities>
    </additionalConnector>
    <capabilities>
        <configured>
            <cap:read>
                <cap:enabled>false</cap:enabled>
            </cap:read>
        </configured>
    </capabilities>
</resource>
