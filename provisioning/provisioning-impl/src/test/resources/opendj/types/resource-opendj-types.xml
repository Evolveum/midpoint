<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2010-2022 Evolveum and contributors
  ~
  ~ Licensed under the EUPL-1.2 or later.
  -->

<resource oid="ef2bc95b-76e0-59e2-86d6-3d4f02d3ffff"
          xmlns="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
          xmlns:t="http://prism.evolveum.com/xml/ns/public/types-3"
          xmlns:q="http://prism.evolveum.com/xml/ns/public/query-3"
          xmlns:ri="http://midpoint.evolveum.com/xml/ns/public/resource/instance-3"
          xmlns:icfc="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/connector-schema-3">

    <name>Embedded Test OpenDJ - Discovery</name>
    <!-- NOTE: The connector OID will get dynamically replaced in the integration tests -->
    <connectorRef oid="ef2bc95b-76e0-59e2-86d6-3d4f02d3eedd" type="ConnectorType"/>
    <connectorConfiguration xmlns:icfcldap="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/bundle/com.evolveum.polygon.connector-ldap/com.evolveum.polygon.connector.ldap.LdapConnector">

        <icfc:configurationProperties>
            <icfcldap:port>10389</icfcldap:port>
            <icfcldap:host>localhost</icfcldap:host>
            <icfcldap:baseContext>dc=example,dc=com</icfcldap:baseContext>
            <icfcldap:bindDn>cn=directory manager</icfcldap:bindDn>
            <icfcldap:bindPassword><t:clearValue>secret</t:clearValue></icfcldap:bindPassword>
            <icfcldap:pagingStrategy>auto</icfcldap:pagingStrategy>
            <icfcldap:vlvSortAttribute>entryUUID</icfcldap:vlvSortAttribute>
            <icfcldap:operationalAttributes>ds-pwp-account-disabled</icfcldap:operationalAttributes>
            <icfcldap:operationalAttributes>isMemberOf</icfcldap:operationalAttributes>
            <icfcldap:operationalAttributes>createTimestamp</icfcldap:operationalAttributes>
            <icfcldap:languageTagAttributes>description</icfcldap:languageTagAttributes> <!-- MID-5210 -->
            <icfcldap:useTreeDelete>auto</icfcldap:useTreeDelete>
            <icfcldap:enableExtraTests>true</icfcldap:enableExtraTests> <!-- MID-3477 -->
        </icfc:configurationProperties>

        <icfc:connectorPoolConfiguration>
            <icfc:minEvictableIdleTimeMillis>120000</icfc:minEvictableIdleTimeMillis>
            <icfc:minIdle>1</icfc:minIdle>
            <icfc:maxIdle>10</icfc:maxIdle>
            <icfc:maxObjects>10</icfc:maxObjects>
            <icfc:maxWait>150000</icfc:maxWait>
        </icfc:connectorPoolConfiguration>

        <icfc:producerBufferSize>100</icfc:producerBufferSize>

        <icfc:timeouts>
            <icfc:create>-1</icfc:create>
            <icfc:get>-1</icfc:get>
            <icfc:update>-1</icfc:update>
            <icfc:delete>-1</icfc:delete>
            <icfc:test>-1</icfc:test>
            <icfc:scriptOnConnector>-1</icfc:scriptOnConnector>
            <icfc:scriptOnResource>-1</icfc:scriptOnResource>
            <icfc:authentication>-1</icfc:authentication>
            <icfc:search>-1</icfc:search>
            <icfc:validate>-1</icfc:validate>
            <icfc:sync>-1</icfc:sync>
            <icfc:schema>-1</icfc:schema>
        </icfc:timeouts>

        <icfc:resultsHandlerConfiguration>
            <icfc:enableNormalizingResultsHandler>false</icfc:enableNormalizingResultsHandler>
            <icfc:enableFilteredResultsHandler>false</icfc:enableFilteredResultsHandler>
            <icfc:enableAttributesToGetSearchResultsHandler>false</icfc:enableAttributesToGetSearchResultsHandler>
        </icfc:resultsHandlerConfiguration>

    </connectorConfiguration>

    <schema>
        <generationConstraints>
            <generateObjectClass>ri:inetOrgPerson</generateObjectClass>
            <generateObjectClass>ri:groupOfUniqueNames</generateObjectClass>
            <generateObjectClass>ri:groupOfNames</generateObjectClass>
            <generateObjectClass>ri:organizationalUnit</generateObjectClass>
        </generationConstraints>
    </schema>

    <schemaHandling>

        <objectType>
            <kind>account</kind>
            <intent>employee</intent>
            <documentation>
                Standard employee account. Resides in `employees` OU. Representative: `alice-employee.ldif`.
            </documentation>
            <delineation>
                <objectClass>ri:inetOrgPerson</objectClass>
                <baseContext>
                    <objectClass>ri:organizationalUnit</objectClass>
                    <filter>
                        <q:text>attributes/dn = "ou=employees,dc=example,dc=com"</q:text>
                    </filter>
                </baseContext>
            </delineation>
        </objectType>

        <objectType>
            <kind>account</kind>
            <intent>special</intent>
            <documentation>
                An account devoted to special duties. It resides in `special` OU.
                This type is abstract, and has two subtypes: `admin` and `tester`.
            </documentation>
            <abstract>true</abstract>
            <delineation>
                <objectClass>ri:inetOrgPerson</objectClass>
                <baseContext>
                    <objectClass>ri:organizationalUnit</objectClass>
                    <filter>
                        <q:text>attributes/dn = "ou=special,dc=example,dc=com"</q:text>
                    </filter>
                </baseContext>
            </delineation>
        </objectType>

        <objectType>
            <kind>account</kind>
            <intent>admin</intent>
            <documentation>
                Account used for administration. Resides in `special` OU (defined in the supertype).
                Additional filtering condition: `businessCategory` is `admin`. Representative: `jim-admin.ldif`.
            </documentation>
            <super>
                <kind>account</kind>
                <intent>special</intent>
            </super>
            <delineation>
                <!-- baseContext is inherited -->
                <filter>
                    <q:text>attributes/businessCategory = "admin"</q:text>
                </filter>
            </delineation>
        </objectType>

        <objectType>
            <kind>account</kind>
            <intent>tester</intent>
            <documentation>
                Account used for testing. Resides in `special` OU (defined in the supertype).
                Additional filtering condition: `businessCategory` is `tester`. Representative: `ann-tester.ldif`.
            </documentation>
            <super>
                <kind>account</kind>
                <intent>special</intent>
            </super>
            <delineation>
                <!-- baseContext is inherited -->
                <filter>
                    <q:equal>
                        <q:path>attributes/businessCategory</q:path>
                        <q:value>tester</q:value>
                    </q:equal>
                </filter>
            </delineation>
        </objectType>

    </schemaHandling>

</resource>
