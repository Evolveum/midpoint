<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2010-2018 Evolveum and contributors
  ~
  ~ This work is dual-licensed under the Apache License 2.0
  ~ and European Union Public License. See LICENSE file for details.
  -->

<resource oid="1169ac14-8377-11e8-b404-5b5a1a8af0db"
          xmlns="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
          xmlns:q="http://prism.evolveum.com/xml/ns/public/query-3"
          xmlns:icfs="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/resource-schema-3"
          xmlns:ri="http://midpoint.evolveum.com/xml/ns/public/resource/instance-3"
          xmlns:mr="http://prism.evolveum.com/xml/ns/public/matching-rule-3"
          xmlns:t="http://prism.evolveum.com/xml/ns/public/types-3"
          xmlns:piracy="http://midpoint.evolveum.com/xml/ns/samples/piracy"
          xmlns:ext="http://midpoint.evolveum.com/xml/ns/story/serviceAccountsClassifier/ext"
          xmlns:cap="http://midpoint.evolveum.com/xml/ns/public/resource/capabilities-3"
          xmlns:xsd="http://www.w3.org/2001/XMLSchema"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

    <name>Dummy Resource Classifier</name>
    <connectorRef type="ConnectorType">
        <filter>
            <q:and>
                <q:equal>
                    <q:path>connectorType</q:path>
                    <q:value>com.evolveum.icf.dummy.connector.DummyConnector</q:value>
                </q:equal>
                <q:equal>
                    <q:path>connectorVersion</q:path>
                    <q:value>2.0</q:value>
                </q:equal>
            </q:and>
        </filter>
    </connectorRef>
    <connectorConfiguration xmlns:icfi="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/bundle/com.evolveum.icf.dummy/com.evolveum.icf.dummy.connector.DummyConnector"
                   xmlns:icfc="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/connector-schema-3">

        <icfc:configurationProperties>
            <icfi:instanceId></icfi:instanceId> <!-- Default instance. -->
            <icfi:uselessGuardedString>
                <clearValue>whatever</clearValue>
            </icfi:uselessGuardedString>
            <icfi:uselessString>USEless</icfi:uselessString>
        </icfc:configurationProperties>

        <icfc:resultsHandlerConfiguration>
            <icfc:enableNormalizingResultsHandler>false</icfc:enableNormalizingResultsHandler>
            <icfc:enableFilteredResultsHandler>false</icfc:enableFilteredResultsHandler>
            <icfc:enableAttributesToGetSearchResultsHandler>false</icfc:enableAttributesToGetSearchResultsHandler>
        </icfc:resultsHandlerConfiguration>

    </connectorConfiguration>

    <schemaHandling>
        <objectType>
            <kind>account</kind>
            <intent>default</intent>
            <default>true</default>
            <objectClass>ri:AccountObjectClass</objectClass>
            <attribute>
                <ref>icfs:name</ref>
                <displayName>Username</displayName>
                <outbound>
                    <strength>strong</strength>
                    <source>
                        <path>$user/name</path>
                    </source>
                    <expression>
                        <script>
                            <code>
                                name + iterationToken
                            </code>
                        </script>
                    </expression>
                </outbound>
            </attribute>
            <attribute>
                <ref>icfs:uid</ref>
            </attribute>
            <attribute>
                <ref>ri:fullname</ref>
                <outbound>
                    <source>
                        <path>$user/fullName</path>
                    </source>
                </outbound>
            </attribute>
            <attribute>
                <ref>ri:title</ref>
                <tolerant>true</tolerant>
            </attribute>
            <attribute>
                <ref>ri:location</ref>
                <displayName>Location</displayName>
                <outbound>
                    <strength>strong</strength>
                    <source>
                        <path>
                            $user/locality
                        </path>
                    </source>
                </outbound>
            </attribute>
            <attribute>
                <ref>ri:ship</ref>
                <displayName>Ship</displayName>
            </attribute>
            <attribute>
                <ref>ri:weapon</ref>
                <displayName>Weapon</displayName>
            </attribute>
            <attribute>
                <ref>ri:drink</ref>
                <displayName>Drink</displayName>
                <tolerant>false</tolerant>
            </attribute>
            <attribute>
                <ref>ri:quote</ref>
                <displayName>Quote</displayName>
                <tolerant>false</tolerant>
            </attribute>
            <attribute>
                <ref>ri:gossip</ref>
                <displayName>Gossip</displayName>
                <tolerant>true</tolerant>
            </attribute>
            <attribute>
                <ref>ri:water</ref>
                <limitations>
                    <ignore>true</ignore>
                </limitations>
            </attribute>

            <iteration>
                <maxIterations>5</maxIterations>
            </iteration>

            <activation>
                <existence>
                    <outbound/>
                </existence>
                <administrativeStatus>
                    <outbound/>
                </administrativeStatus>
                <lockoutStatus>
                    <outbound/>
                </lockoutStatus>
            </activation>

            <credentials>
                <password>
                    <outbound/>
                </password>
            </credentials>

        </objectType>

        <!-- Service accounts. Same as user accounts, just no outbound mappings. -->
        <objectType>
            <kind>account</kind>
            <intent>service</intent>
            <default>false</default>
            <objectClass>ri:AccountObjectClass</objectClass>
            <attribute>
                <ref>icfs:name</ref>
                <displayName>Username</displayName>
                <inbound>
                    <target>
                        <path>extension/ext:accountName</path>
                    </target>
                </inbound>
            </attribute>
            <attribute>
                <ref>ri:fullname</ref>
                <inbound>
                    <target>
                        <path>description</path>
                    </target>
                </inbound>
            </attribute>
            <configuredCapabilities>
                <cap:create>
                    <cap:enabled>false</cap:enabled>
                </cap:create>
                <cap:update>
                    <cap:enabled>false</cap:enabled>
                </cap:update>
                <cap:delete>
                    <cap:enabled>false</cap:enabled>
                </cap:delete>
            </configuredCapabilities>
            <projection>
                <assignmentPolicyEnforcement>none</assignmentPolicyEnforcement>
            </projection>
        </objectType>

    </schemaHandling>

    <consistency>
        <connectorErrorCriticality>
            <!-- We need to set this to critical.
                 Otherwise disabled capabilities will cause only partial errors and inbound expressions may still be processed. -->
            <unsupported>fatal</unsupported>
        </connectorErrorCriticality>
    </consistency>

    <synchronization>

         <objectSynchronizationSorter>
            <expression>
                <trace>true</trace>
                <script>
                    <code>

                        import com.evolveum.midpoint.xml.ns._public.common.common_3.*
                        import javax.xml.namespace.QName
                        import com.evolveum.midpoint.prism.path.ItemPath
                        import com.evolveum.midpoint.schema.constants.SchemaConstants
                        import com.evolveum.midpoint.util.exception.ConfigurationException
                        import com.evolveum.midpoint.schema.util.ShadowUtil

                        discriminator = new ObjectSynchronizationDiscriminatorType();

                        owner = midpoint.searchShadowOwner(shadow.getOid());

                        if (owner == null) {

                        applicableServices = midpoint.getFocusesByCorrelationRule(ServiceType.class,
                        "1169ac14-8377-11e8-b404-5b5a1a8af0db", ShadowKindType.ACCOUNT, "service", shadow);

                        if (applicableServices == null || applicableServices.isEmpty()) {
                        log.info("No applicable services found, returning UNMATCHED situation for account/default")
                        discriminator.setSynchronizationSituation(SynchronizationSituationType.UNMATCHED)
                        discriminator.setKind(ShadowKindType.ACCOUNT)
                        discriminator.setIntent("default")
                        return discriminator
                        }

                        if (applicableServices.size() == 1) {
                        log.info("Corresponding service found, returning UNLINKED situation for account/service")
                        log.info("service {}", applicableServices.get(0))
                        discriminator.setOwner(applicableServices.get(0))
                        discriminator.setKind(ShadowKindType.ACCOUNT)
                        discriminator.setIntent("service")
                        discriminator.setSynchronizationSituation(SynchronizationSituationType.UNLINKED)
                        return discriminator
                        }

                        log.info("Unexpected situation, throw exception rather")
                        throw new ConfigurationException("Wrong configuration, cannot determine what to do.");
                        }

                        ownerType = owner.asObjectable();
                        if (ownerType instanceof UserType) {
                        discriminator.setIntent("default")

                        } else if (ownerType instanceof ServiceType) {
                        discriminator.setIntent("service")
                        }

                        discriminator.setOwner(ownerType)
                        discriminator.setKind(ShadowKindType.ACCOUNT)
                        discriminator.setSynchronizationSituation(SynchronizationSituationType.LINKED)
                        log.info("owner: ", ownerType)
                        return discriminator
                    </code>
                </script>
            </expression>
        </objectSynchronizationSorter>

        <objectSynchronization>
            <objectClass>ri:AccountObjectClass</objectClass>
            <kind>account</kind>
            <intent>service</intent>
            <focusType>ServiceType</focusType>
            <enabled>true</enabled>
            <correlation>
                <q:and>
                    <q:equal>
                        <q:path>extension/ext:accountName</q:path>
                        <expression>
                            <path>
                                $shadow/attributes/icfs:name
                            </path>
                        </expression>
                    </q:equal>
                    <q:ref>
                        <q:path>assignment/construction/resourceRef</q:path>
                        <q:value>
                            <q:oid>1169ac14-8377-11e8-b404-5b5a1a8af0db</q:oid>
                        </q:value>
                    </q:ref>
                </q:and>
            </correlation>
            <reaction>
                <situation>linked</situation>
                <synchronize>true</synchronize>
            </reaction>
            <reaction>
                <situation>unlinked</situation>
                <synchronize>true</synchronize>
                <action>
                    <handlerUri>http://midpoint.evolveum.com/xml/ns/public/model/action-3#link</handlerUri>
                </action>
            </reaction>
        </objectSynchronization>

        <objectSynchronization>
            <objectClass>ri:AccountObjectClass</objectClass>
            <kind>account</kind>
            <intent>default</intent>
            <focusType>UserType</focusType>
            <enabled>true</enabled>
            <reaction>
                <situation>linked</situation>
                <synchronize>true</synchronize>
            </reaction>
            <reaction>
                <situation>unmatched</situation>
                <synchronize>true</synchronize>
                <action>
                    <handlerUri>http://midpoint.evolveum.com/xml/ns/public/model/action-3#inactivateShadow</handlerUri>
                </action>
            </reaction>
            <reaction>
                <situation>deleted</situation>
                <synchronize>true</synchronize>
                <action>
                    <handlerUri>http://midpoint.evolveum.com/xml/ns/public/model/action-3#deleteFocus</handlerUri>
                </action>
            </reaction>
        </objectSynchronization>

    </synchronization>

</resource>
