<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2010-2019 Evolveum and contributors
  ~
  ~ This work is dual-licensed under the Apache License 2.0
  ~ and European Union Public License. See LICENSE file for details.
  -->

<!-- Resource with special polystring mapping all the way to the connector. -->

<resource oid="aeff994e-381a-4fb3-af3b-f0f5dcdc9653"
          xmlns="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
          xmlns:c="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
          xmlns:t="http://prism.evolveum.com/xml/ns/public/types-3"
          xmlns:q="http://prism.evolveum.com/xml/ns/public/query-3"
          xmlns:mr="http://prism.evolveum.com/xml/ns/public/matching-rule-3"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xmlns:ri="http://midpoint.evolveum.com/xml/ns/public/resource/instance-3"
          xmlns:icfs="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/resource-schema-3"
          xmlns:icfc="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/connector-schema-3"
          xmlns:func="http://midpoint.evolveum.com/xml/ns/public/function/basic-3"
          xmlns:ext="http://midpoint.evolveum.com/xml/ns/story/orgsync/ext">

    <name>Embedded Test OpenDJ</name>

    <connectorRef type="ConnectorType">
        <filter>
            <q:equal>
                <q:path>c:connectorType</q:path>
                <q:value>com.evolveum.polygon.connector.ldap.LdapConnector</q:value>
            </q:equal>
        </filter>
    </connectorRef>

    <connectorConfiguration xmlns:icfcldap="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/bundle/com.evolveum.polygon.connector-ldap/com.evolveum.polygon.connector.ldap.LdapConnector">

        <icfc:configurationProperties>
            <icfcldap:port>10389</icfcldap:port>
            <icfcldap:host>localhost</icfcldap:host>
            <icfcldap:baseContext>dc=example,dc=com</icfcldap:baseContext>
            <icfcldap:bindDn>cn=directory manager</icfcldap:bindDn>
            <icfcldap:bindPassword><t:clearValue>secret</t:clearValue></icfcldap:bindPassword>
            <icfcldap:pagingStrategy>auto</icfcldap:pagingStrategy>
            <icfcldap:vlvSortAttribute>entryUUID</icfcldap:vlvSortAttribute>
             <icfcldap:operationalAttributes>ds-pwp-account-disabled</icfcldap:operationalAttributes>
             <icfcldap:operationalAttributes>isMemberOf</icfcldap:operationalAttributes>
        </icfc:configurationProperties>

        <icfc:resultsHandlerConfiguration>
            <icfc:enableNormalizingResultsHandler>false</icfc:enableNormalizingResultsHandler>
            <icfc:enableFilteredResultsHandler>false</icfc:enableFilteredResultsHandler>
            <icfc:enableAttributesToGetSearchResultsHandler>false</icfc:enableAttributesToGetSearchResultsHandler>
        </icfc:resultsHandlerConfiguration>

    </connectorConfiguration>

    <schema>
        <generationConstraints>
            <generateObjectClass>ri:top</generateObjectClass>
            <generateObjectClass>ri:person</generateObjectClass>
            <generateObjectClass>ri:organizationalPerson</generateObjectClass>
            <generateObjectClass>ri:inetOrgPerson</generateObjectClass>
            <generateObjectClass>ri:groupOfUniqueNames</generateObjectClass>
        </generationConstraints>
    </schema>

    <schemaHandling>
        <objectType>
            <kind>account</kind>
            <intent>default</intent>
            <objectClass>ri:inetOrgPerson</objectClass>

            <attribute>
                <ref>ri:dn</ref>
                <matchingRule>mr:distinguishedName</matchingRule>
                <outbound>
                    <source>
                        <path>name</path>
                    </source>
                    <expression>
                        <script>
                            <code>
                                'uid=' + name + ',ou=people,dc=example,dc=com'
                                <!-- basic.composeDnWithSuffix('uid', name, 'ou=people,dc=example,dc=com') -->
                            </code>
                        </script>
                    </expression>
                </outbound>
            </attribute>

            <attribute>
                <ref>ri:cn</ref>
                <outbound>
                    <source>
                        <path>givenName</path>
                    </source>
                    <source>
                        <path>familyName</path>
                    </source>
                    <expression>
                        <script>
                            <code>
                                if (givenName &amp;&amp; !(givenName.isEmpty())) {
                                    familyName + ' ' + givenName
                                } else {
                                    familyName
                                }
                            </code>
                        </script>
                    </expression>
                </outbound>
            </attribute>

            <attribute>
                <ref>ri:givenName</ref>
                <outbound>
                    <source>
                        <path>givenName</path>
                    </source>
                </outbound>
            </attribute>

            <attribute>
                <ref>ri:sn</ref>
                <outbound>
                    <source>
                        <path>familyName</path>
                    </source>
                </outbound>
            </attribute>

            <attribute>
                <ref>ri:uid</ref>
                <outbound>
                    <!-- This MUST be weak in case of OpenDJ. If DN (name) is changed then the uid will be changed
                         as a side-effect as it is a naming attribute. -->
                    <strength>weak</strength>
                    <source>
                        <path>name</path>
                    </source>
                </outbound>
            </attribute>

            <association>
                <ref>ri:group</ref>
                <kind>entitlement</kind>
                <intent>group</intent>
                <direction>objectToSubject</direction>
                <associationAttribute>ri:uniqueMember</associationAttribute>
                <valueAttribute>ri:dn</valueAttribute>
                <shortcutAssociationAttribute>ri:isMemberOf</shortcutAssociationAttribute>
                <shortcutValueAttribute>ri:dn</shortcutValueAttribute>
                <explicitReferentialIntegrity>true</explicitReferentialIntegrity>
            </association>

        </objectType>

        <objectType>
            <kind>entitlement</kind>
            <intent>group</intent>
            <objectClass>ri:groupOfUniqueNames</objectClass>
            <attribute>
                <ref>ri:dn</ref>
                <matchingRule>mr:distinguishedName</matchingRule>
                <outbound>
                    <strength>strong</strength>
                    <source>
                        <path>name</path>
                    </source>
                    <expression>
                        <script>
                            <code>
                                import javax.naming.ldap.Rdn
                                import javax.naming.ldap.LdapName

                                dn = new LdapName('ou=groups,dc=example,dc=com')
                                dn.add(new Rdn('cn', basic.stringify(name)))
                                basic.stringify(dn)
                            </code>
                        </script>
                    </expression>
                </outbound>
            </attribute>

            <attribute>
                <ref>ri:cn</ref>
                <outbound>
                    <strength>strong</strength>
                    <source>
                        <path>name</path>
                    </source>
                </outbound>
            </attribute>

            <attribute>
                <ref>ri:ou</ref>
                <displayName>ou</displayName>
                <outbound>
                    <strength>strong</strength>
                    <expression>
                        <value>Groups</value>
                    </expression>
                </outbound>
            </attribute>


            <!-- Add attribute containing list of members, needed for the association configuration -->
            <attribute>
                <ref>ri:uniqueMember</ref>
                <matchingRule>mr:distinguishedName</matchingRule>
                <fetchStrategy>minimal</fetchStrategy>
            </attribute>

            <projection>
                <assignmentPolicyEnforcement>full</assignmentPolicyEnforcement>
            </projection>
        </objectType>
    </schemaHandling>

    <synchronization>
        <objectSynchronization>
            <kind>account</kind>
            <intent>default</intent>
            <focusType>UserType</focusType>
            <objectClass>ri:inetOrgPerson</objectClass>
            <enabled>true</enabled>
            <condition>
                <script>
                    <code>
                        dn = basic.getAttributeValue(shadow, "dn")
                        basic.containsIgnoreCase(dn, "ou=people")
                    </code>
                </script>
            </condition>
            <correlation>
                <q:equal>
                    <q:path>c:name</q:path>
                    <expression>
                        <path>$shadow/attributes/ri:uid</path>
                    </expression>
                </q:equal>
            </correlation>
            <reaction>
                <situation>deleted</situation>
                <action>
                    <handlerUri>http://midpoint.evolveum.com/xml/ns/public/model/action-3#unlink</handlerUri>
                </action>
            </reaction>
            <reaction>
                <situation>unlinked</situation>
                <action>
                    <handlerUri>http://midpoint.evolveum.com/xml/ns/public/model/action-3#link</handlerUri>
                </action>
            </reaction>
            <reaction>
                <situation>unmatched</situation>
                <action>
                    <handlerUri>http://midpoint.evolveum.com/xml/ns/public/model/action-3#deleteShadow</handlerUri>
                </action>
            </reaction>
            <reaction>
                <situation>linked</situation>
                <synchronize>true</synchronize>
            </reaction>
        </objectSynchronization>

        <objectSynchronization>
            <kind>entitlement</kind>
            <intent>group</intent>
            <focusType>RoleType</focusType>
            <objectClass>ri:groupOfUniqueNames</objectClass>
            <enabled>true</enabled>
            <condition>
                <script>
                    <code>
                        dn = basic.getAttributeValue(shadow, "dn")
                        return basic.containsIgnoreCase(dn, "ou=groups")
                    </code>
                </script>
            </condition>
            <correlation>
                <q:equal>
                    <q:path>c:name</q:path>
                    <expression>
                        <path>$shadow/attributes/ri:cn</path>
                    </expression>
                </q:equal>
            </correlation>
            <reaction>
                <situation>deleted</situation>
                <action>
                    <handlerUri>http://midpoint.evolveum.com/xml/ns/public/model/action-3#unlink</handlerUri>
                </action>
            </reaction>
            <reaction>
                <situation>unlinked</situation>
                <action>
                    <handlerUri>http://midpoint.evolveum.com/xml/ns/public/model/action-3#link</handlerUri>
                </action>
            </reaction>
            <reaction>
                <situation>unmatched</situation>
                <action>
                    <handlerUri>http://midpoint.evolveum.com/xml/ns/public/model/action-3#deleteShadow</handlerUri>
                </action>
            </reaction>
            <reaction>
                <situation>linked</situation>
                <synchronize>true</synchronize>
            </reaction>
        </objectSynchronization>
    </synchronization>

    <capabilities>
        <configured xmlns:cap="http://midpoint.evolveum.com/xml/ns/public/resource/capabilities-3">
            <cap:activation>
                <cap:status>
                    <cap:attribute>ri:ds-pwp-account-disabled</cap:attribute>
                    <cap:enableValue/>
                    <cap:disableValue>true</cap:disableValue>
                </cap:status>
            </cap:activation>
        </configured>
    </capabilities>


</resource>
