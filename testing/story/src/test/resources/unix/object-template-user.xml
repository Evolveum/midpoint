<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2015 Evolveum and contributors
  ~
  ~ Licensed under the EUPL-1.2 or later.
  -->

<objectTemplate oid="9cd03eda-66bd-11e5-866c-f3bc34108fdf"
        xmlns='http://midpoint.evolveum.com/xml/ns/public/common/common-3'>

    <name>User Template</name>

    <item> <!-- MID-4424 -->
        <ref>extension/uidNumberPlusOne</ref>
        <mapping>
            <strength>strong</strength>
            <source>
                <path>extension/uidNumber</path>
            </source>
            <expression>
                <script>
                    <code>
                        (uidNumber as BigInteger)?.add(BigInteger.ONE)
                    </code>
                </script>
            </expression>
            <!-- The phase here is "after assignments", because the uidNumber is generated during assignments processing. -->
            <evaluationPhase>afterAssignments</evaluationPhase>
        </mapping>
    </item>

    <item> <!-- MID-4424 -->
        <ref>extension/uidNumberInt</ref>
        <mapping>
            <strength>strong</strength>
            <source>
                <path>extension/uidNumber</path>
            </source>
            <expression>
                <script>
                    <code>
                        // We must disallow the automatic conversion for large values, because it would (correctly!)
                        // throw an exception in such cases.
                        (uidNumber as BigInteger) > BigInteger.valueOf(Integer.MAX_VALUE) ? null : uidNumber
                    </code>
                </script>
            </expression>
            <!-- The phase here is "after assignments", because the uidNumber is generated during assignments processing. -->
            <evaluationPhase>afterAssignments</evaluationPhase>
        </mapping>
    </item>

    <mapping>
        <name>troublemaker</name>
        <description>
            This mapping is especially designed to make the projector crash on cue.
        </description>
        <source>
            <path>$user/subtype</path>
        </source>
        <expression>
            <script>
                <code>
                    throw new IllegalArgumentException("MAKING SOME TROUBLE")
                </code>
             </script>
        </expression>
        <target>
            <path>$user/locality</path>
        </target>
        <condition>
             <script>
                <code>subtype == "troublemaker"</code>
            </script>
        </condition>
        <!-- We want it to die quite late -->
        <evaluationPhase>afterAssignments</evaluationPhase>
    </mapping>
</objectTemplate>
