<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2015 Evolveum
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<objects xmlns="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xmlns:c="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
         xmlns:xsd="http://www.w3.org/2001/XMLSchema"
         xmlns:ri="http://midpoint.evolveum.com/xml/ns/public/resource/instance-3"
         xmlns:icfs="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/resource-schema-3"
         xmlns:icfc="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/connector-schema-3"
         xmlns:my="http://whatever.com/my"
         xmlns:q="http://prism.evolveum.com/xml/ns/public/query-3"
         xmlns:mr="http://prism.evolveum.com/xml/ns/public/matching-rule-3">

	<resource oid="0893372c-3c42-11e5-9179-001e8c717e5b">

		<name>eDirectory deimos</name>

		<description>Novell/NetIQ eDirectory</description>

		<connectorRef type="ConnectorType">
			<filter>
				<q:equal>
					<q:path>c:connectorType</q:path>
					<q:value>com.evolveum.polygon.connector.ldap.edirectory.EDirectoryLdapConnector</q:value>
				</q:equal>
			</filter>
		</connectorRef>

		<connectorConfiguration>
			<icfc:configurationProperties
			xmlns:icfcldap="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/bundle/com.evolveum.polygon.connector-ldap/com.evolveum.polygon.connector.ldap.edirectory.EDirectoryLdapConnector">
				<icfcldap:port>3636</icfcldap:port>
				<icfcldap:host>deimos.lab.evolveum.com</icfcldap:host>
				<icfcldap:connectionSecurity>ssl</icfcldap:connectionSecurity>
				<icfcldap:baseContext>o=example</icfcldap:baseContext>
				<icfcldap:bindDn>cn=admin,o=example</icfcldap:bindDn>
				<icfcldap:bindPassword>
					<clearValue>secret</clearValue>
				</icfcldap:bindPassword>
				<icfcldap:operationalAttributes>createTimestamp</icfcldap:operationalAttributes>
			</icfc:configurationProperties>

			<icfc:resultsHandlerConfiguration>
			 <icfc:enableNormalizingResultsHandler>false</icfc:enableNormalizingResultsHandler>
			 <icfc:enableFilteredResultsHandler>false</icfc:enableFilteredResultsHandler>
			 <icfc:enableAttributesToGetSearchResultsHandler>false</icfc:enableAttributesToGetSearchResultsHandler>
		      </icfc:resultsHandlerConfiguration>
		</connectorConfiguration>


		<schemaHandling>
			<objectType>
				<kind>account</kind>
				<displayName>Default Account</displayName>
				<default>true</default>
				<objectClass>ri:inetOrgPerson</objectClass>
				<attribute>
					<ref>dn</ref>
					<displayName>Distinguished Name</displayName>
					<limitations>
						<minOccurs>0</minOccurs>
					</limitations>
					<matchingRule>mr:distinguishedName</matchingRule>
					<outbound>
						<source>
							<path>$user/name</path>
						</source>
						<expression>
							<script>
								<code>
									import javax.naming.ldap.Rdn
									import javax.naming.ldap.LdapName
	
									dn = new LdapName('ou=people,o=example')
									dn.add(new Rdn('uid',name.toString()))
									return dn.toString()
								</code>
							</script>
						</expression>
					</outbound>
				</attribute>
				<attribute>
					<ref>ri:cn</ref>
					<limitations>
						<maxOccurs>1</maxOccurs>
					</limitations>
					<outbound>
						<source>
							<path>fullName</path>
						</source>
					</outbound>
				</attribute>
				<attribute>
					<ref>ri:sn</ref>
					<limitations>
						<minOccurs>0</minOccurs>
					</limitations>
					<outbound>
						<source>
							<path>familyName</path>
						</source>
					</outbound>
				</attribute>
				<attribute>
					<ref>ri:givenName</ref>
					<outbound>
						<source>
							<path>givenName</path>
						</source>
					</outbound>
				</attribute>
				<attribute>
					<ref>ri:uid</ref>
					<matchingRule>mr:stringIgnoreCase</matchingRule>
					<outbound>
						<strength>weak</strength>
						<source>
							<path>name</path>
						</source>
					</outbound>
				</attribute>

				<attribute>
					<ref>ri:mail</ref>
					<outbound>
						<source>
							<path>emailAddress</path>
						</source>
					</outbound>
				</attribute>
				<attribute>
					<ref>ri:telephoneNumber</ref>
					<outbound>
						<source>
							<path>telephoneNumber</path>
						</source>
					</outbound>
				</attribute>

            <association>
            	<ref>ri:group</ref>
            	<displayName>Ordinary LDAP Group Membership</displayName>
            	<kind>entitlement</kind>
            	<intent>ldapGroup</intent>
            	<direction>objectToSubject</direction>
            	<associationAttribute>ri:member</associationAttribute>
            	<valueAttribute>ri:dn</valueAttribute>
            	<shortcutAssociationAttribute>ri:groupMembership</shortcutAssociationAttribute>
            	<shortcutValueAttribute>ri:dn</shortcutValueAttribute>
            	<explicitReferentialIntegrity>false</explicitReferentialIntegrity>
            </association>
            
            <association>
            	<ref>ri:orgGroup</ref>
            	<displayName>Organizational Group Membership</displayName>
            	<kind>entitlement</kind>
            	<intent>orgGroup</intent>
            	<direction>objectToSubject</direction>
            	<associationAttribute>ri:member</associationAttribute>
            	<valueAttribute>ri:dn</valueAttribute>
            	<shortcutAssociationAttribute>ri:groupMembership</shortcutAssociationAttribute>
            	<shortcutValueAttribute>ri:dn</shortcutValueAttribute>
            	<explicitReferentialIntegrity>false</explicitReferentialIntegrity>
            </association>
            
				<protected>
				<filter>
					<q:equal>
						<q:path>
							attributes/dn
						</q:path>
						<q:value>cn=admin,o=example</q:value>
					</q:equal>
				</filter>
			</protected>

				<activation>
					<administrativeStatus>
						<outbound/>
					</administrativeStatus>
				</activation>

				<credentials>
					<password>
						<outbound>
							<expression>
								<asIs/>
							</expression>
						</outbound>
					</password>
				</credentials>

			</objectType>

        <objectType>
        	<kind>entitlement</kind>
            <intent>ldapGroup</intent>
            <displayName>LDAP Group</displayName>
            <objectClass>ri:groupOfNames</objectClass>
			<baseContext>
            	<objectClass>ri:organizationalUnit</objectClass>
            	<filter>
            		<q:equal>
            			<q:path>attributes/dn</q:path>
            			<q:value>ou=groups,o=example</q:value>
            		</q:equal>
            	</filter>
            </baseContext>            
            <attribute>
                <ref>dn</ref>
                <matchingRule>mr:distinguishedName</matchingRule>
                <outbound>
					<source>
						<path>$focus/name</path>
					</source>
                    <expression>
                    	<script>
	                        <code>
	                        	basic.composeDnWithSuffix('cn', name, 'ou=groups,o=example')
	                        </code>
                        </script>
                    </expression>
                </outbound>
            </attribute>
            <attribute>
                <ref>ri:cn</ref>
                <matchingRule>mr:stringIgnoreCase</matchingRule>
                <outbound>
                	<strength>weak</strength>
                	<source>
                		<path>$focus/name</path>
                	</source>
                </outbound>
            </attribute>
            <attribute>
                <ref>ri:description</ref>
                <outbound>
                	<source>
                		<path>description</path>
                	</source>
                </outbound>
            </attribute>
        </objectType>
        
        <objectType>
		        <kind>entitlement</kind>
				<intent>orgGroup</intent>
				<displayName>Organizational Group</displayName>
				<objectClass>ri:groupOfNames</objectClass>
				<auxiliaryObjectClass>ri:nestedGroupAux</auxiliaryObjectClass>
				<baseContext>
	            	<objectClass>ri:organizationalUnit</objectClass>
	            	<filter>
	            		<q:equal>
	            			<q:path>attributes/dn</q:path>
	            			<q:value>ou=orggroups,o=example</q:value>
	            		</q:equal>
	            	</filter>
	            </baseContext>
				<attribute>
					<ref>ri:member</ref>
					<matchingRule>mr:distinguishedName</matchingRule>
					<fetchStrategy>minimal</fetchStrategy>
				</attribute>
				<attribute>
		        	<ref>ri:dn</ref>
					<matchingRule>mr:distinguishedName</matchingRule>
		        	<outbound>
					<source>
						<path>$focus/name</path>
					</source>
					<expression>
						<script>
							<code>
								basic.composeDnWithSuffix('cn', name, 'ou=orggroups,o=example')
							</code>
						</script>
					</expression>
				</outbound>
				</attribute>
				<attribute>
					<ref>ri:cn</ref>
					<displayName>Common Name</displayName>
					<matchingRule>mr:stringIgnoreCase</matchingRule>
					<outbound>
						<strength>weak</strength>
						<source>
							<path>$focus/name</path>
						</source>
					</outbound>
				</attribute>
				<attribute>
			        <ref>ri:fullName</ref>
					<description>Complete organization name</description>
					<limitations>
						<maxOccurs>1</maxOccurs>
					</limitations>
					<matchingRule>mr:stringIgnoreCase</matchingRule>
		        	<outbound>
					<source>
						<path>$focus/displayName</path>
					</source>
				</outbound>
			</attribute>
			<attribute>
				<ref>ri:member</ref>
				<matchingRule>mr:distinguishedName</matchingRule>
				<fetchStrategy>minimal</fetchStrategy>
			</attribute>
            <association>
            	<ref>ri:group</ref>
                <tolerant>true</tolerant>
                <matchingRule>mr:stringIgnoreCase</matchingRule>
            	<displayName>eDirectory Group in Group Membership</displayName>
            	<kind>entitlement</kind>
            	<intent>orgGroup</intent>
            	<direction>objectToSubject</direction>
            	<associationAttribute>ri:groupMember</associationAttribute>
                <shortcutAssociationAttribute>ri:groupMembership</shortcutAssociationAttribute>
                <shortcutValueAttribute>ri:dn</shortcutValueAttribute>
                <explicitReferentialIntegrity>false</explicitReferentialIntegrity>
            	<valueAttribute>ri:dn</valueAttribute>
            </association>
			</objectType>

		</schemaHandling>

	</resource>

</objects>
