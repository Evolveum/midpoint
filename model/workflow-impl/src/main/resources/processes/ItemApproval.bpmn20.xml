<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2010-2013 Evolveum
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<definitions xmlns="http://www.omg.org/spec/BPMN/20100524/MODEL" xmlns:activiti="http://activiti.org/bpmn"
             xmlns:bpmndi="http://www.omg.org/spec/BPMN/20100524/DI"
             xmlns:omgdc="http://www.omg.org/spec/DD/20100524/DC" xmlns:omgdi="http://www.omg.org/spec/DD/20100524/DI"
             typeLanguage="http://www.w3.org/2001/XMLSchema" expressionLanguage="http://www.w3.org/1999/XPath"
             targetNamespace="http://evolveum.com/midpoint" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

    <process id="ItemApproval" name="General multi-stage item approval process" isExecutable="true">
        <extensionElements>
            <activiti:executionListener event="end" class="com.evolveum.midpoint.wf.impl.processes.common.MidPointProcessListener" />
        </extensionElements>


        <!-- This process takes care of approving "something" - an item to approve.

           Input variables:
             - approvalStages (List<Integer>): list of stage numbers (1..N)
             - approvalTaskName (String): name of the approval task (e.g. "Approve adding role R to user U")

           Output variables:
             - outcome (URI)
        -->

        <startEvent id="start" name="Start" />
        <sequenceFlow sourceRef="start" targetRef="start.1" />

        <serviceTask id="start.1" activiti:class="com.evolveum.midpoint.wf.impl.processes.common.DumpVariables" />
        <sequenceFlow sourceRef="start.1" targetRef="initializeLoopThroughStages" />

        <serviceTask id="initializeLoopThroughStages" activiti:class="com.evolveum.midpoint.wf.impl.processes.itemApproval.InitializeLoopThroughStages" />
        <sequenceFlow sourceRef="initializeLoopThroughStages" targetRef="loopStages" />

        <!-- New variable:
              - loopStages_stop: whether to stop looping through stages (i.e. when the request is rejected at a particular stage)
        -->

        <subProcess id="loopStages">
            <multiInstanceLoopCharacteristics isSequential="true"
                    activiti:collection="${approvalStages}"
					activiti:elementVariable="stageNumberLocal">
                <completionCondition>${loopStages_stop}</completionCondition>
            </multiInstanceLoopCharacteristics>

            <!-- variables:
                  - stageNumber: number of the given stage (1..N)
            -->

            <startEvent id="loopStages.start" />
            <sequenceFlow sourceRef="loopStages.start" targetRef="loopStages.start.1" />

            <serviceTask id="loopStages.start.1" activiti:class="com.evolveum.midpoint.wf.impl.processes.common.DumpVariables" />
            <sequenceFlow sourceRef="loopStages.start.1" targetRef="loopStages.initializeLoopThroughApprovers" />

            <!-- here we (besides other things) evaluate expressions describing approvers at this stage and fill-in approversInStage - list of references -->
            <serviceTask id="loopStages.initializeLoopThroughApprovers" activiti:class="com.evolveum.midpoint.wf.impl.processes.itemApproval.InitializeLoopThroughApproversInStage" />
            <sequenceFlow sourceRef="loopStages.initializeLoopThroughApprovers" targetRef="loopStages.shouldBeStageExecutedQ" />

            <!-- variables:
                  - approversInStage: list of LightweightObjectRef's for individual approvers
                  - loopApproversInStage_stop: whether to stop looping through approvers at this stage
                  - decisionList: list of decisions done at this stage
            -->

            <exclusiveGateway id="loopStages.shouldBeStageExecutedQ"/>

            <sequenceFlow sourceRef='loopStages.shouldBeStageExecutedQ' targetRef='loopStages.loopApprovers' >
                <conditionExpression xsi:type="tFormalExpression">
                    ${!loopApproversInStage_stop}</conditionExpression>
            </sequenceFlow>
            <sequenceFlow sourceRef='loopStages.shouldBeStageExecutedQ' targetRef='loopStages.before.summarizeDecisions' >
                <conditionExpression xsi:type="tFormalExpression">
                    ${loopApproversInStage_stop}</conditionExpression>
            </sequenceFlow>

            <subProcess id="loopStages.loopApprovers">
                <multiInstanceLoopCharacteristics isSequential="false"
                                                  activiti:collection="${approversInStage}" activiti:elementVariable="approverRef">
                    <completionCondition>${loopApproversInStage_stop}</completionCondition>
                </multiInstanceLoopCharacteristics>

                <!-- variables:
                      - approverRef: reference to an approver
                -->

                <startEvent id="loopStages.loopApprovers.start" />
                <sequenceFlow sourceRef="loopStages.loopApprovers.start" targetRef="loopStages.loopApprovers.start.1" />

                <serviceTask id="loopStages.loopApprovers.start.1" activiti:class="com.evolveum.midpoint.wf.impl.processes.common.DumpVariables" />
                <sequenceFlow sourceRef="loopStages.loopApprovers.start.1" targetRef="loopStages.loopApprovers.prepareForTaskCreation" />

                <serviceTask id="loopStages.loopApprovers.prepareForTaskCreation" activiti:class="com.evolveum.midpoint.wf.impl.processes.itemApproval.PrepareForTaskCreation" />
                <sequenceFlow sourceRef="loopStages.loopApprovers.prepareForTaskCreation" targetRef="loopStages.loopApprovers.approve" />

                <exclusiveGateway id="loopStages.loopApprovers.approve" />

                <sequenceFlow sourceRef='loopStages.loopApprovers.approve' targetRef='loopStages.loopApprovers.approve.withGroups' >
                    <conditionExpression xsi:type="tFormalExpression">
                        ${candidateGroups != null}</conditionExpression>
                </sequenceFlow>

                <sequenceFlow sourceRef='loopStages.loopApprovers.approve' targetRef='loopStages.loopApprovers.approve.withoutGroups' >
                    <conditionExpression xsi:type="tFormalExpression">
                        ${candidateGroups == null}</conditionExpression>
                </sequenceFlow>

                <userTask id="loopStages.loopApprovers.approve.withGroups" name="${approvalTaskName}"
                          activiti:candidateGroups="${candidateGroups}">
                    <extensionElements>
                        <activiti:formProperty id="comment" name="01: Your comment" type="string" required="false" readable="true" writable="true"></activiti:formProperty>
                        <activiti:formProperty id="[H]decision" name="decision to be filled-in automatically" type="string" required="false" readable="true" writable="true"></activiti:formProperty>
                        <activiti:taskListener event="create" class="com.evolveum.midpoint.wf.impl.processes.itemApproval.TaskCreateListener" />
                        <activiti:taskListener event="complete" class="com.evolveum.midpoint.wf.impl.processes.itemApproval.TaskCompleteListener" />
                        <activiti:taskListener event="delete" class="com.evolveum.midpoint.wf.impl.processes.itemApproval.TaskDeleteListener" />
                    </extensionElements>
                </userTask>

                <userTask id="loopStages.loopApprovers.approve.withoutGroups" name="${approvalTaskName}"
                          activiti:assignee="${assignee}">
                    <extensionElements>
                        <activiti:formProperty id="comment" name="01: Your comment" type="string" required="false" readable="true" writable="true"></activiti:formProperty>
                        <activiti:formProperty id="[H]decision" name="decision to be filled-in automatically" type="string" required="false" readable="true" writable="true"></activiti:formProperty>
                        <activiti:taskListener event="create" class="com.evolveum.midpoint.wf.impl.processes.itemApproval.TaskCreateListener" />
                        <activiti:taskListener event="complete" class="com.evolveum.midpoint.wf.impl.processes.itemApproval.TaskCompleteListener" />
                        <activiti:taskListener event="delete" class="com.evolveum.midpoint.wf.impl.processes.itemApproval.TaskDeleteListener" />
                    </extensionElements>
                </userTask>

                <sequenceFlow sourceRef="loopStages.loopApprovers.approve.withGroups" targetRef="loopStages.loopApprovers.before.end" />
                <sequenceFlow sourceRef="loopStages.loopApprovers.approve.withoutGroups" targetRef="loopStages.loopApprovers.before.end" />

                <serviceTask id="loopStages.loopApprovers.before.end" activiti:class="com.evolveum.midpoint.wf.impl.processes.common.DumpVariables" />
                <sequenceFlow sourceRef="loopStages.loopApprovers.before.end" targetRef="loopStages.loopApprovers.end" />

                <endEvent id="loopStages.loopApprovers.end" />
            </subProcess>
            <sequenceFlow sourceRef="loopStages.loopApprovers" targetRef="loopStages.before.summarizeDecisions" />

            <serviceTask id="loopStages.before.summarizeDecisions" activiti:class="com.evolveum.midpoint.wf.impl.processes.common.DumpVariables" />
            <sequenceFlow sourceRef="loopStages.before.summarizeDecisions" targetRef="loopStages.summarizeDecisions" />

            <!-- modifies loopStages_stop, if necessary -->
            <serviceTask id="loopStages.summarizeDecisions" activiti:class="com.evolveum.midpoint.wf.impl.processes.itemApproval.SummarizeDecisionsInStage" />
            <sequenceFlow sourceRef="loopStages.summarizeDecisions" targetRef="loopStages.end" />

            <endEvent id="loopStages.end" />
        </subProcess>
        <sequenceFlow sourceRef="loopStages" targetRef="before.prepareResult"></sequenceFlow>

        <serviceTask id="before.prepareResult" activiti:class="com.evolveum.midpoint.wf.impl.processes.common.DumpVariables" />
        <sequenceFlow sourceRef="before.prepareResult" targetRef="prepareResult"></sequenceFlow>

        <!-- prepares wfAnswer -->
        <serviceTask id="prepareResult" activiti:class="com.evolveum.midpoint.wf.impl.processes.itemApproval.PrepareResult" />
        <sequenceFlow sourceRef="prepareResult" targetRef="after.prepareResult"></sequenceFlow>

        <serviceTask id="after.prepareResult" activiti:class="com.evolveum.midpoint.wf.impl.processes.common.DumpVariables" />
        <sequenceFlow sourceRef="after.prepareResult" targetRef="end"></sequenceFlow>

        <endEvent id="end" />
    </process>

</definitions>