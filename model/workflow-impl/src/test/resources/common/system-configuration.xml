<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--
  ~ Copyright (c) 2010-2017 Evolveum
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<systemConfiguration oid="00000000-0000-0000-0000-000000000001" version="0"
	xmlns="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
	xmlns:c="http://midpoint.evolveum.com/xml/ns/public/common/common-3">
    <name>SystemConfiguration</name>
    <logging>
    	<rootLoggerAppender>File Appender</rootLoggerAppender>
    	<rootLoggerLevel>INFO</rootLoggerLevel>
        <classLogger>
	        <level>TRACE</level>
	        <package>com.evolveum.midpoint.common.LoggingConfigurationManager</package>
      	</classLogger>
        <appender xsi:type="c:FileAppenderConfigurationType" name="File Appender" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <pattern>%date [%thread] %-5level \(%logger{46}\): %message%n</pattern>
            <fileName>target/test.log</fileName>
            <append>true</append>
        </appender>
    </logging>
    <notificationConfiguration>
        <handler>
            <simpleUserNotifier>
                <recipientExpression>
                    <value>recipient@evolveum.com</value>
                </recipientExpression>
                <transport>dummy:simpleUserNotifier</transport>
            </simpleUserNotifier>
        </handler>
        <handler>
            <simpleWorkflowNotifier>
                <category>workflowProcessEvent</category>
                <recipientExpression>
                    <value>recipient@evolveum.com</value>
                </recipientExpression>
                <showTechnicalInformation>true</showTechnicalInformation>
                <transport>dummy:simpleWorkflowNotifier-Processes</transport>
            </simpleWorkflowNotifier>
        </handler>
        <handler>
            <simpleWorkflowNotifier>
                <category>workItemEvent</category>
                <recipientExpression>
                    <value>recipient@evolveum.com</value>
                </recipientExpression>
                <transport>dummy:simpleWorkflowNotifier-WorkItems</transport>
            </simpleWorkflowNotifier>
        </handler>
        <mail>
            <redirectToFile>target/mail-notifications.log</redirectToFile>
        </mail>
    </notificationConfiguration>
    <workflowConfiguration>
        <allowCompleteOthersItems>true</allowCompleteOthersItems>
        <approverCommentsFormatting>
            <value>
                <script>
                    <code>performer.name + ' :: ' + output.comment</code>
                </script>
            </value>
            <condition>
                <script>
                    <code>output.comment != null &amp;&amp; !output.comment.isEmpty()</code>
                </script>
            </condition>
        </approverCommentsFormatting>
        <primaryChangeProcessor>
            <enabled>true</enabled>
            <policyRuleBasedAspect>
                <enabled>true</enabled>			<!-- changed depending on test configuration -->
            </policyRuleBasedAspect>
            <addUserAbstractRoleAssignmentAspect/>
            <modifyUserAbstractRoleAssignmentAspect/>
            <addUserResourceAssignmentAspect/>
            <modifyUserResourceAssignmentAspect/>
            <addAbstractRoleAspect>
                <approverRef oid="00000000-0000-0000-0000-000000000002" type="UserType"/>
            </addAbstractRoleAspect>
            <addAssociationAspect>
                <approverRef oid="00000000-0000-0000-0000-000000000002" type="UserType"/>
                <applicabilityCondition>
                    <script>
                        <code>
                            import com.evolveum.midpoint.xml.ns._public.common.common_3.*
                            import com.evolveum.midpoint.schema.*

                            log.info('@@@ applicability condition evaluated for:', itemToApprove)
                            log.info('@@@ itemToApprove = {}', itemToApprove)
                            log.info('@@@ association = {}', association)
                            log.info('@@@ shadowDiscriminator = {}', shadowDiscriminator)
                            log.info('@@@ modelContext = {}', modelContext)

                            noFetch = SelectorOptions.createCollection(GetOperationOptions.createNoFetch())
                            shadow = midpoint.getObject(ShadowType.class, association.shadowRef.oid)
                            shadowName = basic.stringify(shadow.name)
                            log.info('@@@ associated object name = {}', shadowName)

                            return !shadowName.contains("guests")
                        </code>
                    </script>
                </applicabilityCondition>
            </addAssociationAspect>
            <otherAspect>
                <name>changePasswordAspect</name>
            </otherAspect>
        </primaryChangeProcessor>
        <generalChangeProcessor>
            <enabled>false</enabled>
            <scenario>
                <name>primaryScenario</name>
                <activationCondition>
                    <script><code>context.getState() == com.evolveum.midpoint.model.api.context.ModelState.PRIMARY</code></script>
                </activationCondition>
                <processName>MyGreatPrimaryProcess</processName>
            </scenario>
            <scenario>
                <name>secondaryScenario</name>
                <activationCondition>
                    <script>
                        <code><![CDATA[
                                        context.getState() == com.evolveum.midpoint.model.api.context.ModelState.SECONDARY &&
                                        context.findProjectionContext(new com.evolveum.midpoint.common.refinery.ResourceShadowDiscriminator("10000000-0000-0000-0000-000000000004", com.evolveum.midpoint.xml.ns._public.common.common_3.ShadowKindType.ACCOUNT, null)) != null
                                        ]]></code>
                    </script>
                </activationCondition>
                <processName>ApprovingDummyResourceChangesProcess</processName>
                <beanName>approvingDummyResourceChangesScenarioBean</beanName>
            </scenario>
        </generalChangeProcessor>
    </workflowConfiguration>
</systemConfiguration>
