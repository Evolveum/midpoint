<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--
  ~ Copyright (c) 2010-2019 Evolveum and contributors
  ~
  ~ This work is dual-licensed under the Apache License 2.0
  ~ and European Union Public License. See LICENSE file for details.
  -->

<systemConfiguration oid="00000000-0000-0000-0000-000000000001" version="0"
    xmlns="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
    xmlns:c="http://midpoint.evolveum.com/xml/ns/public/common/common-3">
    <name>SystemConfiguration</name>
    <logging>
        <rootLoggerAppender>File Appender</rootLoggerAppender>
        <rootLoggerLevel>INFO</rootLoggerLevel>
        <classLogger>
            <level>TRACE</level>
            <package>com.evolveum.midpoint.common.LoggingConfigurationManager</package>
          </classLogger>
        <appender xsi:type="c:FileAppenderConfigurationType" name="File Appender" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <pattern>%date [%thread] %-5level \(%logger{46}\): %message%n</pattern>
            <fileName>target/test.log</fileName>
            <append>true</append>
        </appender>
    </logging>
    <workflowConfiguration>
        <approverCommentsFormatting>
            <value>
                <script>
                    <code>performer.name + ' :: ' + output.comment</code>
                </script>
            </value>
            <condition>
                <script>
                    <code>output.comment != null &amp;&amp; !output.comment.isEmpty()</code>
                </script>
            </condition>
        </approverCommentsFormatting>
        <primaryChangeProcessor>
            <enabled>true</enabled>
            <policyRuleBasedAspect>
                <enabled>true</enabled>            <!-- changed depending on test configuration -->
            </policyRuleBasedAspect>
            <addAssociationAspect>
                <approverRef oid="00000000-0000-0000-0000-000000000002" type="UserType"/>
                <applicabilityCondition>
                    <script>
                        <code>
                            import com.evolveum.midpoint.xml.ns._public.common.common_3.*
                            import com.evolveum.midpoint.schema.*

                            log.info('@@@ applicability condition evaluated for:', itemToApprove)
                            log.info('@@@ itemToApprove = {}', itemToApprove)
                            log.info('@@@ association = {}', association)
                            log.info('@@@ shadowDiscriminator = {}', shadowDiscriminator)
                            log.info('@@@ modelContext = {}', modelContext)

                            noFetch = SelectorOptions.createCollection(GetOperationOptions.createNoFetch())
                            shadow = midpoint.getObject(ShadowType.class, association.shadowRef.oid)
                            shadowName = basic.stringify(shadow.name)
                            log.info('@@@ associated object name = {}', shadowName)

                            return !shadowName.contains("guests")
                        </code>
                    </script>
                </applicabilityCondition>
            </addAssociationAspect>
        </primaryChangeProcessor>
    </workflowConfiguration>
</systemConfiguration>
