<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--
  ~ Copyright (c) 2010-2017 Evolveum and contributors
  ~
  ~ This work is dual-licensed under the Apache License 2.0
  ~ and European Union Public License. See LICENSE file for details.
  -->

<c:genericObject oid="c0c010c0-d34d-b33f-f00d-999111111122"
    xmlns="http://midpoint.evolveum.com/xml/ns/public/common/common-3" xmlns:c="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ri="http://midpoint.evolveum.com/xml/ns/public/resource/instances/ef2bc95b-76e0-59e2-86d6-3d4f02d3ffff"
    xmlns:ids="http://midpoint.evolveum.com/xml/ns/public/resource/idconnector/resource-schema-3.xsd"
    xmlns:my="http://myself.me/schemas/whatever"
    xsi:schemaLocation="http://midpoint.evolveum.com/xml/ns/public/common/common-3 ../../../../../../infra/schema/src/main/resources/xml/ns/public/common/common-3.xsd
                        http://www.w3.org/2001/XMLSchema ../../../../../../infra/schema/src/test/resources/standard/XMLSchema.xsd">

        <c:name>My Sample Config Object</c:name>
        <c:extension>
            <!-- This additional level of depth (the "locations" element) is needed now
                 because current repository does not support generic multi-valued
                 properties. This should be fixed in next releases. -->
            <my:locations>
                <!-- Lookup table. The "key" attribute is a key, the element content
                     is a value. However, the data structure may be structured differently,
                     it depends on a specific XPath that is used for lookup (see the
                     definition of outbound expression for "l" attribute in the resource
                     definition above). -->
                <my:location key="home">Here</my:location>
                <my:location key="work">There</my:location>
                <my:location key="somewhere">There there over the corner</my:location>
            </my:locations>
        </c:extension>
        <!-- This is generic object, it must have an "application level" type.
             However, this is not used in the current business logic. Can be anything. -->
        <c:objectType>http://myself.me/schemas/objects#SampleConfigType</c:objectType>
    </c:genericObject>
