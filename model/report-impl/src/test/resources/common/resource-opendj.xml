<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2010-2017 Evolveum
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!-- Resource definition for an embedded OpenDJ instance.
     It is used in internal midPoint tests, mostly in "integration"
     tests. -->

<resource oid="ef2bc95b-76e0-59e2-86d6-3d4f02d3ffff"
          xmlns="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
          xmlns:c="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
          xmlns:t="http://prism.evolveum.com/xml/ns/public/types-3"
          xmlns:q="http://prism.evolveum.com/xml/ns/public/query-3"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xmlns:ri="http://midpoint.evolveum.com/xml/ns/public/resource/instance-3"
          xmlns:icfs="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/resource-schema-3"
          xmlns:icfc="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/connector-schema-3"
          xmlns:my="http://whatever.com/my">

    <name>Embedded Test OpenDJ</name>

   <connectorRef type="ConnectorType">
		<filter>
            <q:equal>
            <q:path>c:connectorType</q:path>
                <q:value>com.evolveum.polygon.connector.ldap.LdapConnector</q:value>
            </q:equal>
        </filter>
    </connectorRef>

    <connectorConfiguration xmlns:icfcldap="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/bundle/com.evolveum.polygon.connector-ldap/com.evolveum.polygon.connector.ldap.LdapConnector">
					   
		<icfc:configurationProperties>
			<icfcldap:port>10389</icfcldap:port>
			<icfcldap:host>localhost</icfcldap:host>
			<icfcldap:baseContext>dc=example,dc=com</icfcldap:baseContext>
			<icfcldap:bindDn>cn=directory manager</icfcldap:bindDn>
			<icfcldap:bindPassword><t:clearValue>secret</t:clearValue></icfcldap:bindPassword>
			<icfcldap:pagingStrategy>auto</icfcldap:pagingStrategy>
			<icfcldap:vlvSortAttribute>entryUUID</icfcldap:vlvSortAttribute>
 			<icfcldap:operationalAttributes>ds-pwp-account-disabled</icfcldap:operationalAttributes>
 			<icfcldap:operationalAttributes>isMemberOf</icfcldap:operationalAttributes>
		</icfc:configurationProperties>
		
		<icfc:resultsHandlerConfiguration>
			<icfc:enableNormalizingResultsHandler>false</icfc:enableNormalizingResultsHandler>
			<icfc:enableFilteredResultsHandler>false</icfc:enableFilteredResultsHandler>
			<icfc:enableAttributesToGetSearchResultsHandler>false</icfc:enableAttributesToGetSearchResultsHandler>
		</icfc:resultsHandlerConfiguration>
		
    </connectorConfiguration>
    
    <!-- No schema. It will be generated from the resource. -->

    <schemaHandling>

        <!-- Definition of default account type.
This is now the only account type that midPoint can work with. -->

        <objectType>

			<kind>account</kind>
            <intent>default</intent>
            <!-- Readable name for the account type -->
            <displayName>Default Account</displayName>

            <default>true</default>
            <!-- Reference to the Resource Schema specifying
      object class for this account type -->

            <objectClass>ri:AccountObjectClass</objectClass>

            <!-- Definition of __NAME__ attribute handling.
     ICF will put entry DN into __NAME__ attribute.-->
            <attribute>
             
				<ref>icfs:name</ref>
				<!-- Readable name for the attribute. This will be used in GUI -->
				<displayName>Distinguished Name</displayName>
       <!-- Outbound expression for the __NAME__ attribute.
      If account is created or updated, the __NAME__ attribute
      will be set accrding to this expression.

      This specific expression will construct DN by concatenating
      name from user object and string constants.

      The expression is marked as "default", therefore it will
      be evaluated only if the entry already does not have an DN.

      It is an XPath expression, similar to BPEL assignment expressions. -->
				<outbound>
				    <strength>weak</strength>
				    <source>
						<path>declare default namespace "http://midpoint.evolveum.com/xml/ns/public/common/common-3";$user/name</path>
					</source>
                    <expression>
                    	<script>
                    		<language>http://www.w3.org/TR/xpath/</language>
	                        <code>
	                            declare namespace c="http://midpoint.evolveum.com/xml/ns/public/common/common-3";
	                            concat('uid=', $c:name, $c:iterationToken, ',ou=people,dc=example,dc=com')
	                        </code>
                        </script>
                    </expression>
				</outbound>
				   <!-- No inbound expression here. We cannot sync changes in DN yet -->
			</attribute>
          

            <!-- Definition of __UID__ attribute handling.
           ICF will put entry UUID into __UID__ attribute in case it
           is connecting to OpenDJ/OpenDS. It may be different for
           other directory servers and it also dependes on connector
           configuration. Please see connector documentation for
           more details.-->
            <attribute>
                <ref>icfs:uid</ref>

                <!-- Readable name for the attribute. This will be used in GUI -->
                <displayName>Entry UUID</displayName>

                <!-- There is no "outbound" expression, so midPoint will not
           do anything with this attribute. -->

                <!-- No inbound expression here. Does not make sense to sync UUID as it is supposed to be immutable -->

            </attribute>

            <!-- Definition of cn attribute handling. -->
            <attribute>

                <ref>ri:cn</ref>
                <displayName>Common Name</displayName>

                <!-- Outbound expression here is using "pure" XPath, without
                    using functions. This is the simplest case, just copying
                    the "fullName" property of user to the "cn" attribute of
                    an account.

                    Please note that this expression is not marked as "default".
                    Therefore this value will be copied on every change,
                    overwriting the original value of "cn" on the resource.
                -->

				<outbound>
					<source>
						<path>$user/fullName</path>
					</source>
				</outbound>
				<inbound>
					<target>
						<path>$user/fullName</path>
					</target>
				</inbound>

            </attribute>

            <!-- Definition of sn attribute handling. -->
            <attribute>
                <ref>ri:sn</ref>

                <displayName>Surname</displayName>
                <outbound>
					<source>
						<path>declare default namespace "http://midpoint.evolveum.com/xml/ns/public/common/common-3";$user/familyName</path>
					</source>
				</outbound>
				<inbound>
					<target>
						<path>declare default namespace "http://midpoint.evolveum.com/xml/ns/public/common/common-3";$user/familyName</path>
					</target>
				</inbound>
            </attribute>

            <!-- Definition of givenName attribute handling. -->
            <attribute>
                <ref>ri:givenName</ref>
                <displayName>Given Name</displayName>
                <outbound>
					<source>
						<path>c:givenName</path>
					</source>
					<expression>
						<script>
							<language>http://www.w3.org/TR/xpath/</language>
							<code>
                                declare namespace c="http://midpoint.evolveum.com/xml/ns/public/common/common-3";
								$c:givenName
							</code>
						</script>
					</expression>
				</outbound>
				<inbound>
					<target>
						<path>$c:user/c:givenName</path>
					</target>
				</inbound>
            </attribute>

            <!-- Definition of uid attribute handling.
       Do not confuse with __UID__! -->
            <attribute>
				<ref>ri:uid</ref>
				<displayName>Login Name</displayName>
				<secondaryIdentifier>true</secondaryIdentifier>
				<outbound>
				<description>
                		It is mapped from (and also to) "name" property of user. It is essentially a login name.
                		This outbound construction is using a Groovy expression.
                	</description>
<!-- 				    <strength>weak</strength> -->
				    <source>
						<path>$c:user/c:name</path>
					</source>
                    <expression>
                    	<script>
                    		<language>http://www.w3.org/TR/xpath/</language>
	                        <code>
	                            declare namespace c="http://midpoint.evolveum.com/xml/ns/public/common/common-3";
	                            concat($c:name, $c:iterationToken)
	                        </code>
                        </script>
                    </expression>
				</outbound>
<!-- 				<outbound> -->
<!--                 	<description> -->
<!--                 		It is mapped from (and also to) "name" property of user. It is essentially a login name. -->
<!--                 		This outbound construction is using a Groovy expression. -->
<!--                 	</description> -->
<!--                 	<strength>weak</strength> -->
<!--                 	<source> -->
<!--                 		<path>$user/name</path> -->
<!--                 	</source> -->
<!--                     <expression> -->
<!-- 	                    <script> -->
<!-- 	                    	<language>http://midpoint.evolveum.com/xml/ns/public/expression/language#Groovy</language> -->
<!-- 	                        <code> -->
<!-- 	                        	concat(name, $c:iterationToken); -->
<!-- 	                        </code> -->
<!-- 	                    </script> -->
<!--                     </expression> -->
<!--                 </outbound> -->
                <inbound>
                	<description>
                		It is mapped to (and also from) "name" property of user. It is essentially a login name	
                	</description>
                	<strength>weak</strength>
                	<expression>                		
                		<script>
                			<relativityMode>absolute</relativityMode>
                			<language>http://midpoint.evolveum.com/xml/ns/public/expression/language#Groovy</language>
                			<code>
                				basic.determineLdapSingleAttributeValue(
                					basic.getAttributeStringValues(account, 'http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/resource-schema-3', 'name'),
                					'uid', input)
<!--                 				func.determineLdapSingleAttributeValue( -->
<!--                 					func.getAttributeStringValues(account, 'http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/resource-schema-3', 'name'), -->
<!--                 					'uid', input) -->
                			</code>
                		</script>
               		</expression>
                    <target>
                    	<path>declare default namespace "http://midpoint.evolveum.com/xml/ns/public/common/common-3";$user/name</path>
                    </target>
                </inbound>

			</attribute>

            <!-- Definition of description attribute handling. -->
<!--             <attribute> -->
<!--                 <ref>ri:description</ref> -->

<!--                 This outbound expression is not really an expression.-->
<!--               It is using a fixed literal insead of dynamically -->
<!--               generated value. --> 
<!--                 <outbound> -->
<!--                     <strength>weak</strength> -->

<!--                     <value>Created by IDM</value> -->
<!--                 </outbound> -->

<!--                 <inbound> -->
<!--                     <valueFilter -->
<!--                             type="http://midpoint.evolveum.com/xml/ns/public/common/value-filter-1.xsd#patternFilter" -->
<!--                             xmlns:f="http://midpoint.evolveum.com/xml/ns/public/common/value-filter-1.xsd"> -->
<!--                         <f:replace> -->
<!--                             Replaces all unicode control characters with empty string -->
<!--                             <f:pattern>\p{C}</f:pattern> -->

<!--                             <f:replacement></f:replacement> -->
<!--                         </f:replace> -->
<!--                     </valueFilter> -->
<!--                     <target> -->
<!--                         declare namespace i="http://midpoint.evolveum.com/xml/ns/public/common/common-3"; -->
<!--                         declare namespace my="http://whatever.com/my"; -->
<!--                         $i:user/i:extension/my:description -->
<!--                     </target> -->
<!--                 </inbound> -->
                <!-- No inbound expression for description. We don't want to synchronize that -->
<!--             </attribute> -->


            <attribute>
                <ref>ri:carLicense</ref>

				<description>
					This attibute definition is used to test tolerance of empty values.
				</description>
				
                <outbound>
                    <description>
                    	The expression will produce empty value. OpenDJ will die if empty value
                    	is provided for an attribute. midPoint should filter out the empty value
                    	and do not sent it to OpenDJ.
                    </description>
					<strength>weak</strength>
                    <expression>
                    	<script>
                    		<language>http://www.w3.org/TR/xpath/</language>
	                    	<returnType>scalar</returnType>
	                    	<c:code>
	                    		concat('','')
	                    	</c:code>
                    	</script>
                    </expression>
                </outbound>

                <inbound>
                    <target>
                    	<path>
	                        declare namespace i="http://midpoint.evolveum.com/xml/ns/public/common/common-3";
	                        declare namespace my="http://whatever.com/my";
	                        $i:user/i:extension/my:description
                        </path>
                    </target>
                </inbound>
                <!-- No inbound expression for description. We don't want to synchronize that -->
            </attribute>


            <!-- Definition of description attribute handling. -->
            <!-- This attribute is using a lookup table to translate the values
 valid for user to a values valid for the resource account. -->
            <attribute>
                <ref>ri:l</ref>
                <c:tolerant>false</c:tolerant>

                <!-- Outbound expression definition. This expression is using
              a configuration object (set into an XPath variable) to
              translate values. -->
                <outbound>
                	<strength>strong</strength>
                	<source>
                		<path>declare namespace c="http://midpoint.evolveum.com/xml/ns/public/common/common-3";$c:user/c:locality</path>
                	</source>
                	<expression>
                		<script>
                			<c:language>http://www.w3.org/TR/xpath/</c:language>
                			<c:returnType>scalar</c:returnType>
                			<code>
                				declare namespace c="http://midpoint.evolveum.com/xml/ns/public/common/common-3";
                				if (empty($c:user/c:locality)) then
                					"middle of nowhere"
                				else
                					$c:user/c:locality
                			</code>
                		</script>
                	</expression>

                </outbound>
            </attribute>
                <attribute>
				<ref>ri:employeeType</ref>
				<displayName>Employee Type</displayName>
				
				<outbound>
				<strength>weak</strength>
					<source>
						<path>$c:user/c:employeeType</path>
					</source>
				</outbound>
			</attribute>

 			<association>
            	<ref>ri:group</ref>
            	<displayName>LDAP Group Membership</displayName>
            	<kind>entitlement</kind>
            	<intent>ldapGroup</intent>
            	<direction>objectToSubject</direction>
            	<associationAttribute>ri:uniqueMember</associationAttribute>
            	<valueAttribute>icfs:name</valueAttribute>
            </association>
            
            <iteration>
				<maxIterations>5</maxIterations>
			</iteration>
            
            <activation>
                <administrativeStatus>
                    <outbound/>
                    <inbound>
                    	<strength>weak</strength>
                        <expression>
                            <asIs/>
                        </expression>
                    </inbound>
                </administrativeStatus>
            </activation>

<!--             <activation> -->
<!--                 <enabled> -->
<!--                     <outbound> -->
<!--                         <expression> -->
<!--                         	<asIs/> -->
<!--                         </expression> -->
<!--                     </outbound> -->
<!--                     <inbound> -->
<!--                     	<expression> -->
<!--                     		<asIs/> -->
<!--                     	</expression> -->
<!--                     </inbound> -->
<!--                 </enabled> -->
<!--             </activation> -->
            
           <credentials>
                <password>
                    <outbound>
                    	<expression>
                        	<asIs/>
                        </expression>
                    </outbound>
                    <inbound>
                    	<strength>weak</strength>
                    	<expression>
                    		<generate/>
                    	</expression>
                    </inbound>
                </password>
            </credentials>
            
        </objectType>
        
        <objectType>
        	<kind>entitlement</kind>
            <intent>ldapGroup</intent>
            <displayName>LDAP Group</displayName>
            <objectClass>ri:GroupObjectClass</objectClass>
        </objectType>
    </schemaHandling>

    <capabilities xmlns:cap="http://midpoint.evolveum.com/xml/ns/public/resource/capabilities-3">
    	<configured>
	        <cap:activation>
	            <cap:status>
	                <cap:attribute>ri:ds-pwp-account-disabled</cap:attribute>
	                <cap:enableValue/>
	                <cap:disableValue>true</cap:disableValue>
	            </cap:status>
	        </cap:activation>
		</configured>
    </capabilities>
    
<!--     <consistency> -->
<!-- 		<avoidDuplicateValues>true</avoidDuplicateValues> -->
<!-- 	</consistency> -->

    <!--
        Synchronization section describes the synchronization policy, timing,
        reactions and similar synchronization settings.
    -->
    <c:synchronization>
    <objectSynchronization>
        <!--
    The synchronization for this resource is enabled.
    It means that the synchronization will poll for changes once
    per interval specified below. -->
        <c:enabled>true</c:enabled>

        <!-- Correlation expression.
           It will be used to find appropriate user entry for an account.
        -->
        <c:correlation> <!-- Correlation rule is a search query -->
	
	            <!-- The clause <c:type uri="http://midpoint.evolveum.com/xml/ns/public/common/common-3#UserType"/> is implicit in correlation rules -->
	            <!-- Following search query will look for users that have "name"
	equal to the "uid" attribute of the account. Simply speaking,
	it will look for match in usernames in the IDM and the resource. -->
	            <q:equal>
	                <q:path>declare namespace c="http://midpoint.evolveum.com/xml/ns/public/common/common-3";c:name</q:path>
	                <expression>
	                	<script>
	                		<language>http://www.w3.org/TR/xpath/</language>
		                    <code>
			                    declare namespace c="http://midpoint.evolveum.com/xml/ns/public/common/common-3";
			                    declare namespace dj="http://midpoint.evolveum.com/xml/ns/public/resource/instance/ef2bc95b-76e0-59e2-86d6-3d4f02d3ffff";
			                    $c:account/c:attributes/dj:uid
		                    </code>
						</script>
	                </expression>
	            </q:equal>
	        </c:correlation>
	
        <!-- Confirmation rule may be here, but as the search above will
always return at most one match, the confirmation rule is not needed. -->

		<objectTemplateRef oid="c0c010c0-d34d-b33f-f00d-777111111111"/>

        <!-- Following section describes reactions to a situations.
            The setting here assumes that this resource is authoritative,
            therefore all accounts created on the resource should be
            reflected as new users in IDM.
            See http://wiki.evolveum.com/display/midPoint/Synchronization+Situations
        -->
        <c:reaction>
            <c:situation>linked</c:situation>
            <synchronize>true</synchronize>
        </c:reaction>
        <c:reaction>
            <c:situation>deleted</c:situation>
            <synchronize>true</synchronize>
            <action>
            	<handlerUri>http://midpoint.evolveum.com/xml/ns/public/model/action-3#unlink</handlerUri>
            </action>
        </c:reaction>
        <c:reaction>
            <c:situation>unlinked</c:situation>
            <synchronize>true</synchronize>
            <action>
            	<handlerUri>http://midpoint.evolveum.com/xml/ns/public/model/action-3#link</handlerUri>
            </action>
        </c:reaction>
        <c:reaction>
            <c:situation>unmatched</c:situation>
            <synchronize>true</synchronize>
            <action>
            	<handlerUri>http://midpoint.evolveum.com/xml/ns/public/model/action-3#addFocus</handlerUri>
            </action>
        </c:reaction>
</objectSynchronization>
    </c:synchronization>

</resource>
