<!--
  ~ Copyright (c) 2010-2017 Evolveum
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<report xmlns="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
        xmlns:c="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
        xmlns:t="http://prism.evolveum.com/xml/ns/public/types-3"
        xmlns:xsd="http://www.w3.org/2001/XMLSchema"
        oid="AUDITLOG-3333-3333-TEST-10000000000"
        version="0">
    <name>
        <orig xmlns="http://prism.evolveum.com/xml/ns/public/types-3">Audit logs report</orig>
        <norm xmlns="http://prism.evolveum.com/xml/ns/public/types-3">Audit logs report</norm>
    </name>
    <description>Report made from audit records.</description>
    <template></template>
    <orientation>landscape</orientation>
    <export>pdf</export>

    <!-- set to true if report needs hibernate session (e.g. hql query is used) -->
    <useHibernateSession>true</useHibernateSession>
    <!-- datasource sample, provider instance is created with default constructor -->
    <dataSource>
        <providerClass>com.evolveum.midpoint.report.QueryApiDataProvider</providerClass>
    </dataSource>
    <!-- datasource sample, provider instance is obtained from spring context -->
    <dataSource>
        <providerClass>com.evolveum.midpoint.report.SomeCustomSuperProvider</providerClass>
        <springBean>true</springBean>
    </dataSource>
    <!-- flag if this report is "parent" report, used for gui -->
    <parent>true</parent>
    <!-- subreport reference sample, name will be used as parameter name -->
    <subReport>
        <name>userList</name>
        <reportRef oid="12345678-1234-1234-1234-123456789012" type="c:ReportType"/>
    </subReport>
    <!-- report parameters configuration schema sample with different options -->
    <configurationSchema>
        <xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
                    xmlns:q="http://prism.evolveum.com/xml/ns/public/query-3"
                    xmlns:r="http://midpoint.evolveum.com/xml/ns/public/report"
                    elementFormDefault="qualified"
                    targetNamespace="http://midpoint.evolveum.com/xml/ns/public/report">

            <xsd:import namespace="http://midpoint.evolveum.com/xml/ns/public/common/common-3"/>
            <xsd:import namespace="http://prism.evolveum.com/xml/ns/public/query-3"/>

            <!-- sample how HQL query for jasper design (queryString element) can be added to configuration schema -->
            <xsd:element name="hqlQuery" type="xsd:string"/>

            <!-- sample how query api datasource configuration should look like-->
            <xsd:element name="type" type="xsd:QName"/>
            <xsd:element name="filter" type="q:FilterType"/>

            <!-- sample how audit configuration probably should look like -->
            <xsd:element name="LOGO_PATH" type="xsd:string"/>
            <xsd:element name="BaseTemplateStyles" type="xsd:string"/>
            <xsd:element name="from" type="xsd:dateTime"/>
            <xsd:element name="to" type="xsd:dateTime"/>
            <xsd:element name="eventType" type="r:EventType"/>
            <xsd:simpleType name="EventType">
                <xsd:restriction base="xsd:string">
                    <xsd:enumeration value="createSession"/>
                    <xsd:enumeration value="getObject"/>
                    <!-- possibly others -->
                </xsd:restriction>
            </xsd:simpleType>

        </xsd:schema>
    </configurationSchema>
    <!-- configuration properties -->
    <configuration xmlns:r="http://midpoint.evolveum.com/xml/ns/public/report">
        <r:LOGO_PATH>src/test/resources/reports/logo.jpg</r:LOGO_PATH>
        <r:BaseTemplateStyles>src/test/resources/styles/midpoint_base_styles.jrtx</r:BaseTemplateStyles>
    </configuration>
</report>
