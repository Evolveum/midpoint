<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--
  ~ Copyright (c) 2010-2017 Evolveum and contributors
  ~
  ~ Licensed under the EUPL-1.2 or later.
  -->

<s:executeScript xmlns:s="http://midpoint.evolveum.com/xml/ns/public/model/scripting-3"
                 xmlns:c="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
          xmlns:q="http://prism.evolveum.com/xml/ns/public/query-3">

    <s:pipeline>
        <s:search>
            <s:type>UserType</s:type>
            <s:searchFilter>
                <q:equal>
                    <q:path>name</q:path>
                    <c:expression>
                        <c:path>$userName</c:path>
                    </c:expression>
                </q:equal>
            </s:searchFilter>
        </s:search>
        <s:modify>
            <s:parameter>
                <s:name>delta</s:name>
                <s:execute>
                    <s:script>
                        <c:code>
                            import static org.assertj.core.api.Assertions.assertThat
                            import com.evolveum.midpoint.xml.ns._public.common.common_3.*
                            import com.evolveum.midpoint.schema.constants.*
                            import com.evolveum.midpoint.schema.*
                            import com.evolveum.midpoint.schema.util.*

                            log.info('input = {}, roleName = {}, action = {}', input, roleName, action)

                            assertThat(roleName).isEqualTo('Superuser')
                            assertThat(action).isEqualTo('A')

                            role = midpoint.searchObjectByName(RoleType.class, roleName)

                            delta = midpoint.deltaFor(UserType.class)
                                .item(UserType.F_ASSIGNMENT)
                                .add(ObjectTypeUtil.createAssignmentTo(role, SchemaConstants.ORG_DEFAULT))
                                .asObjectDelta(input.oid)

                            log.info('delta = {}', delta.debugDump())

                            DeltaConvertor.toObjectDeltaType(delta)
                        </c:code>
                    </s:script>
                </s:execute>
            </s:parameter>
        </s:modify>
    </s:pipeline>
    <s:variables>
        <s:variable>
            <s:name>userName</s:name>
            <s:expression>
                <c:value>jack</c:value>
            </s:expression>
        </s:variable>
        <s:variable>
            <s:name>roleName</s:name>
            <s:expression>
                <c:value>Superuser</c:value>
            </s:expression>
        </s:variable>
        <s:variable>
            <s:name>action</s:name>
            <s:expression>
                <c:value>A</c:value>
            </s:expression>
        </s:variable>
    </s:variables>
</s:executeScript>
