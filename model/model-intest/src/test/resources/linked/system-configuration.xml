<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--
  ~ Copyright (c) 2020 Evolveum and contributors
  ~
  ~ This work is dual-licensed under the Apache License 2.0
  ~ and European Union Public License. See LICENSE file for details.
  -->

<!--
     Configuration to be used for tests derived from AbstractEmptyModelIntegrationTest.

     If we'll find something that must be in really _all_ the tests, we will put it here.
     But currently it seems we can go with really empty configuration. (No configuration would
     be OK as well but in any running midPoint there is a system configuration object, so let's
     keep the situation close to the reality.)
-->

<systemConfiguration oid="00000000-0000-0000-0000-000000000001"
                     xmlns="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
                     xmlns:s="http://midpoint.evolveum.com/xml/ns/public/model/scripting-3"
                     xmlns:q="http://prism.evolveum.com/xml/ns/public/query-3">
    <name>SystemConfiguration</name>

    <!-- HW tokens scenario -->

    <!-- This role is here because of assignments not being applied on object deletion. -->
    <globalPolicyRule>
        <focusSelector>
            <type>UserType</type>
        </focusSelector>
        <policyConstraints>
            <modification>
                <operation>delete</operation>
            </modification>
        </policyConstraints>
        <policyActions>
            <scriptExecution>
                <object>
                    <linkTarget>
                        <type>ServiceType</type>
                        <archetypeRef oid="21575364-d869-4b96-ac3f-b7b26e0e8540"/> <!-- hw-token -->
                    </linkTarget>
                </object>
                <executeScript>
                    <s:recompute/>
                </executeScript>
            </scriptExecution>
        </policyActions>
    </globalPolicyRule>

    <!-- Gummi scenario -->

    <!-- This role is here because of assignments not being applied on object deletion. -->
    <globalPolicyRule>
        <focusSelector>
            <type>UserType</type>
            <archetypeRef oid="c46b1bcc-af43-44ee-a107-71f36e952cc5" /> <!-- gummi-user -->
        </focusSelector>
        <policyConstraints>
            <modification>
                <operation>delete</operation>
            </modification>
        </policyConstraints>
        <policyActions>
            <scriptExecution>
                <object>
                    <namedLinkTarget>devices</namedLinkTarget>
                </object>
                <executeScript>
                    <s:recompute/>
                </executeScript>
            </scriptExecution>
        </policyActions>
    </globalPolicyRule>

    <!-- Projects scenario -->

    <!-- This role is here because of assignments not being applied on object deletion. -->
    <globalPolicyRule>
        <focusSelector>
            <type>OrgType</type>
            <archetypeRef oid="4d3280a1-6514-4984-ac2c-7e56c05af258" /> <!-- project -->
        </focusSelector>
        <name>delete-children-on-project-deletion</name>
        <documentation>
            Deletes children when project is deleted.
        </documentation>
        <policyConstraints>
            <modification>
                <operation>delete</operation>
            </modification>
        </policyConstraints>
        <policyActions>
            <scriptExecution>
                <object>
                    <namedLinkSource>usersOrg</namedLinkSource>
                    <namedLinkSource>groupsOrg</namedLinkSource>
                </object>
                <executeScript>
                    <s:delete/>
                </executeScript>
            </scriptExecution>
        </policyActions>
    </globalPolicyRule>

    <!-- Orgs scenario -->

    <!-- This and following rule are here because of assignments not being applied on object deletion. -->
    <globalPolicyRule>
        <name>unassign-children-on-org-deletion</name>
        <documentation>
            Unassigns members when an org is deleted.
        </documentation>
        <policyConstraints>
            <modification>
                <operation>delete</operation>
            </modification>
        </policyConstraints>
        <policyActions>
            <scriptExecution>
                <object>
                    <linkSource/>
                </object>
                <executeScript>
                    <s:unassign>
                        <s:filter>
                            <q:ref>
                                <q:path>targetRef</q:path>
                                <expression>
                                    <script>
                                        <code>import com.evolveum.midpoint.schema.util.ObjectTypeUtil

                                        ObjectTypeUtil.createObjectRef(focus.oid)
                                        </code>
                                    </script>
                                </expression>
                            </q:ref>
                        </s:filter>
                    </s:unassign>
                </executeScript>
            </scriptExecution>
        </policyActions>
        <focusSelector>
            <type>OrgType</type>
            <archetypeRef oid="b8a973e0-f645-490b-a2ac-b69bd4103bf8"/> <!-- deletion-safe-org -->
        </focusSelector>
    </globalPolicyRule>

    <globalPolicyRule>
        <name>unassign-children-async-on-org-deletion</name>
        <documentation>
            Unassigns members (asynchronously) when an org is deleted.
        </documentation>
        <policyConstraints>
            <modification>
                <operation>delete</operation>
            </modification>
        </policyConstraints>
        <policyActions>
            <scriptExecution>
                <object>
                    <linkSource/>
                </object>
                <executeScript>
                    <s:unassign>
                        <s:filter>
                            <q:ref>
                                <q:path>targetRef</q:path>
                                <expression>
                                    <script>
                                        <code>
                                            import com.evolveum.midpoint.xml.ns._public.common.common_3.ObjectReferenceType

                                            new ObjectReferenceType()
                                                    .oid(orgBeingDeleted as String)
                                        </code>
                                    </script>
                                </expression>
                            </q:ref>
                        </s:filter>
                    </s:unassign>
                </executeScript>
                <asynchronousExecution>
                    <taskCustomizer>
                        <script>
                            <code>

                                import com.evolveum.midpoint.schema.util.expression.ExpressionTypeUtil
                                import com.evolveum.midpoint.xml.ns._public.common.common_3.TaskType
                                import com.evolveum.midpoint.xml.ns._public.model.scripting_3.ScriptingVariableDefinitionType
                                import com.evolveum.midpoint.xml.ns._public.model.scripting_3.ScriptingVariablesDefinitionType

                                def req = (preparedTask as TaskType).activity.work.iterativeScripting.scriptExecutionRequest
                                req.setVariables(new ScriptingVariablesDefinitionType()
                                        .variable(new ScriptingVariableDefinitionType()
                                                .name('orgBeingDeleted')
                                                .expression(ExpressionTypeUtil.forValue(midpoint.focusContextRequired.oid))))
                                preparedTask
                            </code>
                        </script>
                    </taskCustomizer>
                </asynchronousExecution>
            </scriptExecution>
        </policyActions>
        <focusSelector>
            <type>OrgType</type>
            <archetypeRef oid="08893534-3ab3-4209-8702-d21e5492813f"/> <!-- deletion-safe-org-async -->
        </focusSelector>
    </globalPolicyRule>
</systemConfiguration>
