<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2010-2017 Evolveum
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!-- Authoritative source resource. Inbound mappings to assign automatic roles. -->

<resource oid="10000000-0000-0000-0000-00000000a404"
		  xmlns="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
          xmlns:c="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
          xmlns:q="http://prism.evolveum.com/xml/ns/public/query-3"
          xmlns:t="http://prism.evolveum.com/xml/ns/public/types-3"
          xmlns:icfs="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/resource-schema-3"
          xmlns:ri="http://midpoint.evolveum.com/xml/ns/public/resource/instance-3"
          xmlns:mr="http://prism.evolveum.com/xml/ns/public/matching-rule-3"
          xmlns:piracy="http://midpoint.evolveum.com/xml/ns/samples/piracy"
          xmlns:xsd="http://www.w3.org/2001/XMLSchema"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

	<name>Dummy Resource AutoGreen</name>
	<connectorRef type="c:ConnectorType">
		<filter>
			<q:and>
				<q:equal>
					<q:path>connectorType</q:path>
					<q:value>com.evolveum.icf.dummy.connector.DummyConnector</q:value>
				</q:equal>
				<q:equal>
					<q:path>connectorVersion</q:path>
					<q:value>2.0</q:value>
				</q:equal>
			</q:and>
		</filter>
	</connectorRef>
	<connectorConfiguration xmlns:icfi="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/bundle/com.evolveum.icf.dummy/com.evolveum.icf.dummy.connector.DummyConnector"
	               xmlns:icfc="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/connector-schema-3">
					   
		<icfc:configurationProperties>
			<icfi:instanceId>autogreen</icfi:instanceId>
			<icfi:supportValidity>true</icfi:supportValidity>
			<icfi:generateDefaultValues>false</icfi:generateDefaultValues>
		</icfc:configurationProperties>

	</connectorConfiguration>
	
	<schemaHandling>
		<objectType>
			<displayName>Default Account</displayName>
			<default>true</default>
			<objectClass>ri:AccountObjectClass</objectClass>
			<attribute>
				<ref>icfs:name</ref>
				<displayName>Username</displayName>
				<outbound>
					<source>
						<path>name</path>
					</source>
				</outbound>
				<inbound>
					<target>
						<path>$c:user/c:name</path>
					</target>
				</inbound>
			</attribute>
			<attribute>
				<ref>ri:fullname</ref>
				<inbound>
					<strength>strong</strength>
					<target>
						<path>$user/fullName</path>
					</target>
				</inbound>
			</attribute>
			<attribute>
				<ref>ri:location</ref>
			</attribute>
			<attribute>
				<ref>ri:title</ref>
				<inbound>
					<strength>strong</strength>
					<expression>
						<assignmentTargetSearch>
							<targetType>RoleType</targetType>
			                <filter>
			                    <q:equal>
			                        <q:path>name</q:path>
									<expression>
								    	<trace>true</trace>
										<script>
											<code>'Auto' + input</code>
										</script>
									</expression>
			                    </q:equal>
			                </filter>
			            </assignmentTargetSearch>
					</expression>
					<target>
						<path>assignment</path>
						<set>
				            <condition>
				                <script>
				                    <code>
				                         import com.evolveum.midpoint.schema.constants.*
				                         import com.evolveum.midpoint.xml.ns._public.common.common_3.RoleType;
				                         
				                         
				                         
				                        if (assignment.target != null) {
				                        	log.info("### (title) target roleType " + assignment.target.roleType)
				                        	inRange = 'auto'.equals(assignment.target.roleType)
				                        	log.info("########## (title) inRange: " + inRange)
				                        	return inRange
				                        }
				                        
				                        if (assignment.targetRef != null) {
				                        	role = midpoint.getObject(RoleType.class, assignment.targetRef.oid)
				                        	log.info("### (title) role name " + role.name.orig)
				                        	log.info("### (title) role.roleType " + role.roleType)
				                        	inRange = ('auto')?.equals(role.roleType)
				                        	log.info("########## (title) inRange: " + inRange)
				                        	return inRange
				                        }
				                    </code>
				                </script>
				            </condition>
				        </set>
					</target>
					<!-- TODO: range: only roles that roleType==auto -->
				</inbound>
			</attribute>

            <association>
            	<ref>ri:group</ref>
				<inbound>
					<authoritative>true</authoritative>
               		<tolerant>false</tolerant>
					<strength>strong</strength>
					<expression>
						<assignmentTargetSearch>
							<targetType>RoleType</targetType>
			                <filter>
			                    <q:equal>
			                        <q:path>name</q:path>
									<expression>
								    	<trace>true</trace>
										<script>
											<code>
												
												entitlement1 = midpoint.resolveEntitlement(input);
												log.info("### entitlement: " + entitlement)
												log.info("### entitlementName: " + entitlement?.getName())
												
												return 'Auto' + entitlement?.getName()?.getNorm();
											</code>
										</script>
									</expression>
			                    </q:equal>
			                </filter>
			            </assignmentTargetSearch>
					</expression>
					<target>
						<path>assignment</path>
						<set>
				            <condition>
				                <script>
				                    <code>
				                        import com.evolveum.midpoint.schema.constants.*
				                        import com.evolveum.midpoint.xml.ns._public.common.common_3.RoleType;
				                        
				                        if (assignment.target != null) {
				                        	log.info("### (association) target roleType " + assignment.target.roleType)
				                        	inRange = 'auto'.equals(assignment.target.roleType)
				                        	log.info("########## (association) inRange: " + inRange)
				                        	return inRange
				                        }
				                        
				                        if (assignment.targetRef != null) {
				                        	role = midpoint.getObject(RoleType.class, assignment.targetRef.oid)
				                        	log.info("### (association) role name " + role.name.orig)
				                        	log.info("### (association) role.roleType " + role.roleType)
				                        	inRange = ('auto').equals(role.roleType)
				                        	log.info("########## (association) inRange: " + inRange)
				                        	return inRange
				                        }
				                    </code>
				                </script>
				            </condition>
				        </set>
					</target>
				</inbound>
            	<kind>entitlement</kind>
            	<intent>group</intent>
            	<direction>objectToSubject</direction>
            	<associationAttribute>ri:members</associationAttribute>
            	<valueAttribute>icfs:name</valueAttribute>
            </association>

            <association>
            	<ref>ri:priv</ref>
            	<kind>entitlement</kind>
            	<intent>privilege</intent>
            	<direction>subjectToObject</direction>
            	<associationAttribute>ri:privileges</associationAttribute>
            	<valueAttribute>icfs:name</valueAttribute>
            </association>

			
			<activation>
            	<administrativeStatus>
            		<inbound/>
            	</administrativeStatus>
            </activation>
			
			<credentials>
                <password>
                    <inbound>
                    	<strength>weak</strength>
                        <expression>
                            <generate/>
                        </expression>
                    </inbound>
                </password>
            </credentials>
            
		</objectType>
		
		<objectType>
			<kind>entitlement</kind>
        	<intent>group</intent>
        	<default>true</default>
        	<objectClass>ri:GroupObjectClass</objectClass>
        	
        	<attribute>
				<ref>icfs:name</ref>
				<matchingRule>mr:stringIgnoreCase</matchingRule>
				<outbound>
					<!-- Name cannot be weak. Changes in name trigger object rename. -->
					<source>
						<path>name</path>
					</source>
				</outbound>
			</attribute>
			<attribute>
				<ref>ri:members</ref>
				<matchingRule>mr:distinguishedName</matchingRule>
			</attribute>			
        </objectType>
        
        <objectType>
        	<kind>entitlement</kind>
        	<intent>privilege</intent>
        	<default>false</default>
        	<objectClass>ri:CustomprivilegeObjectClass</objectClass>
        </objectType>
		
				
	</schemaHandling>
	
	<projection>
		<assignmentPolicyEnforcement>none</assignmentPolicyEnforcement>
	</projection>
	
	<synchronization>
		<objectSynchronization>
			<name>default account type</name>
			<kind>account</kind>
			<enabled>true</enabled>
			<correlation>
				<q:equal>
					<q:path>c:name</q:path>
					<expression>
						<path>$account/attributes/icfs:name</path>
					</expression>
				</q:equal>
			</correlation>
			<reaction>
	            <situation>linked</situation>
	            <synchronize>true</synchronize>
	        </reaction>
	        <reaction>
	            <situation>deleted</situation>
	            <synchronize>true</synchronize>
	            <action>
	            	<handlerUri>http://midpoint.evolveum.com/xml/ns/public/model/action-3#deleteFocus</handlerUri>
	            </action>
	        </reaction>
	        <reaction>
	            <situation>unlinked</situation>
	            <synchronize>true</synchronize>
	            <action>
	            	<handlerUri>http://midpoint.evolveum.com/xml/ns/public/model/action-3#link</handlerUri>
	            </action>
	        </reaction>
	        <reaction>
	            <situation>unmatched</situation>
	            <synchronize>true</synchronize>
	            <action>
	            	<handlerUri>http://midpoint.evolveum.com/xml/ns/public/model/action-3#addFocus</handlerUri>
	            </action>
	        </reaction>
        </objectSynchronization>        
        <objectSynchronization>
			<name>privilege group type</name>
			<kind>entitlement</kind>
			<intent>privilege</intent>
			<enabled>true</enabled>
			<condition>
				<script>
					<code>
						if (!shadow) return false;
						
						if (!shadow.getName()) return false;
						
						return shadow.getName().startsWith("priv");
					</code>
				</script>
			</condition>
			<correlation>
				<q:equal>
					<q:path>c:name</q:path>
					<expression>
						<path>$account/attributes/icfs:name</path>
					</expression>
				</q:equal>
			</correlation>
			<reaction>
	            <situation>linked</situation>
	            <synchronize>true</synchronize>
	        </reaction>
	        <reaction>
	            <situation>deleted</situation>
	            <synchronize>true</synchronize>
	            <action>
	            	<handlerUri>http://midpoint.evolveum.com/xml/ns/public/model/action-3#deleteFocus</handlerUri>
	            </action>
	        </reaction>
	        <reaction>
	            <situation>unlinked</situation>
	            <synchronize>true</synchronize>
	            <action>
	            	<handlerUri>http://midpoint.evolveum.com/xml/ns/public/model/action-3#link</handlerUri>
	            </action>
	        </reaction>
	        <reaction>
	            <situation>unmatched</situation>
	            <synchronize>true</synchronize>
	            <action>
	            	<handlerUri>http://midpoint.evolveum.com/xml/ns/public/model/action-3#addFocus</handlerUri>
	            </action>
	        </reaction>
        </objectSynchronization>       
        <objectSynchronization>
			<name>group group type</name>
			<kind>entitlement</kind>
			<intent>privilege</intent>
			<enabled>true</enabled>
			<condition>
				<script>
					<code>
						if (!shadow) return false;
						
						if (!shadow.getName()) return false;
						
						return !shadow.getName().startsWith("priv");
					</code>
				</script>
			</condition>
			<correlation>
				<q:equal>
					<q:path>c:name</q:path>
					<expression>
						<path>$account/attributes/icfs:name</path>
					</expression>
				</q:equal>
			</correlation>
			<reaction>
	            <situation>linked</situation>
	            <synchronize>true</synchronize>
	        </reaction>
	        <reaction>
	            <situation>deleted</situation>
	            <synchronize>true</synchronize>
	            <action>
	            	<handlerUri>http://midpoint.evolveum.com/xml/ns/public/model/action-3#deleteFocus</handlerUri>
	            </action>
	        </reaction>
	        <reaction>
	            <situation>unlinked</situation>
	            <synchronize>true</synchronize>
	            <action>
	            	<handlerUri>http://midpoint.evolveum.com/xml/ns/public/model/action-3#link</handlerUri>
	            </action>
	        </reaction>
	        <reaction>
	            <situation>unmatched</situation>
	            <synchronize>true</synchronize>
	            <action>
	            	<handlerUri>http://midpoint.evolveum.com/xml/ns/public/model/action-3#addFocus</handlerUri>
	            </action>
	        </reaction>
        </objectSynchronization>        
	</synchronization>

</resource>
