<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2010-2017 Evolveum and contributors
  ~
  ~ This work is dual-licensed under the Apache License 2.0
  ~ and European Union Public License. See LICENSE file for details.
  -->
<functionLibrary oid="c0c010c0-d34d-b33f-f00d-999999999999"
        xmlns='http://midpoint.evolveum.com/xml/ns/public/common/common-3'
        xmlns:c='http://midpoint.evolveum.com/xml/ns/public/common/common-3'
        xmlns:t='http://prism.evolveum.com/xml/ns/public/types-3'
        xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance'
        xmlns:xsd='http://www.w3.org/2001/XMLSchema'
        xmlns:piracy='http://midpoint.evolveum.com/xml/ns/samples/piracy'>
    <name>myLib</name>
    <description>Custom functions</description>
    <function>
        <name>helloWorld</name>
        <script>
                 <code>
                     log.info("I'm in Hello World! function");
                     return "hello world!"
                 </code>
        </script>
    </function>
    <function>
        <name>getDrink</name>
        <parameter>
            <name>country</name>
            <type>xsd:string</type>
        </parameter>
        <script>
            <code>
                log.error("locality: "+country)
                def fixedDrink = []
                if (account) {
                    log.error("account:\n"+basic.debugDump(account,1))
                    def drink = basic.getAttributeValues(account, 'drink')
                    log.error("drink(1): "+drink)
                    if (drink != null) {
                        drink.each {
                            if (!it?.startsWith('rum')) {
                                fixedDrink.add(it)
                            }
                        }
                        log.error("fixedDrink(2): "+fixedDrink)
                        if (country != null) {
                            fixedDrink.add('rum from ' + country);
                        }
                        log.error("fixedDrink(3): "+fixedDrink)
                    }
                }
                log.error("fixedDrink(4): "+fixedDrink)
                return fixedDrink
            </code>
        </script>
    </function>
</functionLibrary>
