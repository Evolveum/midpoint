<?xml version="1.0" encoding="UTF-8" standalone="yes"?>   
<!--
  ~ Copyright (c) 2010-2017 Evolveum
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->
<c:genericObject oid="c0c010c0-d34d-b33f-f00d-999111111111" xmlns:c="http://midpoint.evolveum.com/xml/ns/public/common/common-3" xmlns:my="http://myself.me/schemas/whatever">
<c:name>My Sample Config Object</c:name>
        <c:extension>
            <!-- This additional level of depth (the "locations" element) is needed now
                 because current repository does not support generic multi-valued
                 properties. This should be fixed in next releases. -->
            <my:locations>
                <!-- Lookup table. The "key" attribute is a key, the element content
                     is a value. However, the data structure may be structured differently,
                     it depends on a specific XPath that is used for lookup (see the
                     definition of outbound expression for "l" attribute in the resource
                     definition above). -->
                <my:location key="home">Here</my:location>
                <my:location key="work">There</my:location>
                <my:location key="somewhere">There there over the corner</my:location>
            </my:locations>
        </c:extension>
        <!-- This is generic object, it must have an "application level" type.
             However, this is not used in the current business logic. Can be anything. -->
        <c:objectType>http://myself.me/schemas/objects#SampleConfigType</c:objectType>
    </c:genericObject>
