<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2010-2017 Evolveum
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<!-- yellow resource - almost same as resource-dummy but with strong asIs administrativeStatus mapping 
                       also has a modified synchronization section: just correlation but no reactions.
                       also it has minimum password length constraint (resource-enforced, not midPoint password policy)
                       also it is using some constants in the configuration and expressions
                       also it has conditional provisioning scripts -->

<resource oid="10000000-0000-0000-0000-000000000704"
		  xmlns="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
          xmlns:c="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
          xmlns:q="http://prism.evolveum.com/xml/ns/public/query-3"
          xmlns:t="http://prism.evolveum.com/xml/ns/public/types-3"
          xmlns:icfs="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/resource-schema-3"
          xmlns:ri="http://midpoint.evolveum.com/xml/ns/public/resource/instance/10000000-0000-0000-0000-000000000704"
          xmlns:piracy="http://midpoint.evolveum.com/xml/ns/samples/piracy"
          xmlns:xsd="http://www.w3.org/2001/XMLSchema"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">

	<name>Dummy Yellow Resource</name>
	<connectorRef type="c:ConnectorType">
		<filter>
			<q:and>
				<q:equal>
					<q:path>connectorType</q:path>
					<q:value>com.evolveum.icf.dummy.connector.DummyConnector</q:value>
				</q:equal>
				<q:equal>
					<q:path>connectorVersion</q:path>
					<q:value>2.0</q:value>
				</q:equal>
			</q:and>
		</filter>
	</connectorRef>
	<connectorConfiguration xmlns:icfi="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/bundle/com.evolveum.icf.dummy/com.evolveum.icf.dummy.connector.DummyConnector"
	               xmlns:icfc="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/connector-schema-3">
					   
		<icfc:configurationProperties>
			<icfi:instanceId>yellow</icfi:instanceId>
			<icfi:requireExplicitEnable>true</icfi:requireExplicitEnable>
			<icfi:uselessString>
				<expression>
					<const>useless</const>
				</expression>
			</icfi:uselessString>
			<icfi:uselessGuardedString>
				<clearValue>whatever</clearValue>
			</icfi:uselessGuardedString>
			<icfi:requireUselessString>true</icfi:requireUselessString>
			<icfi:minPasswordLength>3</icfi:minPasswordLength>
			<icfi:addConnectorStateAttributes>true</icfi:addConnectorStateAttributes>
		</icfc:configurationProperties>

	</connectorConfiguration>
	
	<namespace>http://midpoint.evolveum.com/xml/ns/public/resource/instance/10000000-0000-0000-0000-000000000704</namespace>

	<schemaHandling>
		<objectType>
			<kind>account</kind>
			<intent>default</intent>
			<displayName>Default Account</displayName>
			<default>true</default>
			<objectClass>ri:AccountObjectClass</objectClass>
			<attribute>
				<ref>icfs:name</ref>
				<displayName>Username</displayName>
				<outbound>
				    <strength>strong</strength>
				    <source>
				    	<path>$user/name</path>
				    </source>
					<expression>
						<script>
							<code>
								name + iterationToken
							</code>
						</script>
					</expression>
				</outbound>
				<inbound>
					<!-- This avoids "kickback" of a name from account to a user. -->
					<strength>weak</strength>
					<target>
						<path>$c:user/c:name</path>
					</target>
				</inbound>
			</attribute>
			<attribute>
				<ref>icfs:uid</ref>
				<displayName>UID</displayName>
			</attribute>
			<attribute>
				<ref>ri:fullname</ref>
				<displayName>Full Name</displayName>
				<outbound>
					<source>
						<path>$user/fullName</path>
					</source>
				</outbound>
				<inbound>
					<strength>weak</strength>
					<target>
						<path>$user/fullName</path>
					</target>
				</inbound>
			</attribute>
			<attribute>
				<ref>ri:location</ref>
				<displayName>Location</displayName>
				<outbound>
					<strength>strong</strength>
					<source>
						<path>
							$c:user/c:locality
						</path>
					</source>
					<expression>
						<script>
							<code>
								def evaluateNew = midpoint.isEvaluateNew()
								log.debug("Location outbound evaluateNew: {} : {}", evaluateNew, locality)
								assert evaluateNew != null : "null evaluateNew"
								return locality
							</code>
						</script>
					</expression>
				</outbound>
				<inbound>
					<channel>http://midpoint.evolveum.com/xml/ns/public/provisioning/channels-3#import</channel>
					<expression>
						<script>
							<code>'Came from ' + input</code>
						</script>
					</expression>
					<target>
						<path>description</path>
					</target>
				</inbound>
			</attribute>
			<attribute>
				<ref>ri:ship</ref>
				<displayName>Ship</displayName>
				<inbound>
					<expression>
						<script>
							<code>'The crew of ' + input</code>
						</script>
					</expression>
					<target>
						<path>organizationalUnit</path>
					</target>
					<condition>
						<script>
							<code>input != null</code>
						</script>
					</condition>
				</inbound>
			</attribute>
			<attribute>
				<ref>ri:loot</ref>
				<displayName>Loot</displayName>
				<fetchStrategy>explicit</fetchStrategy>
				<outbound>
					<channel>http://pirates.net/avast</channel>
					<expression>
						<script>
							<code>9999 + 1</code>
						</script>
					</expression>
				</outbound>
			</attribute>
			<attribute>
				<ref>ri:weapon</ref>
				<displayName>Weapon</displayName>
				<outbound>
					<strength>weak</strength>
					<source>
						<path>
                            declare namespace piracy = "http://midpoint.evolveum.com/xml/ns/samples/piracy";
							$user/extension/piracy:weapon
						</path>
					</source>
				</outbound>
			</attribute>
			<attribute>
				<ref>ri:drink</ref>
				<displayName>Drink</displayName>
				<tolerant>false</tolerant>
				<outbound>
					<strength>strong</strength>
					<expression>
						<const>drink</const>
					</expression>
				</outbound>
			</attribute>
			<attribute>
				<ref>ri:quote</ref>
				<displayName>Quote</displayName>
				<tolerant>false</tolerant>
				<outbound>
					<name>yellow-outbound-quote</name>
					<trace>true</trace>
					<strength>strong</strength>
					<source>
						<name>shadowStatus</name>
						<path>$shadow/activation/administrativeStatus</path>
					</source>
					<expression>
						<script>
							<code>
								midpoint.getConst('blabla') + ' ' + midpoint.getPrincipal().getUsername() + ' -- ' + actor?.getName()
							</code>
						</script>
					</expression>
					<condition> <!--MID-3946 -->
						<trace>true</trace>
						<script>
							<code>
								shadowStatus == com.evolveum.midpoint.xml.ns._public.common.common_3.ActivationStatusType.ENABLED
							</code>
						</script>
					</condition>
				</outbound>
			</attribute>
            <attribute>
                <ref>ri:gossip</ref>
                <displayName>Gossip</displayName>
                <outbound>
                	<expression>
                		<!-- MID-3816 -->
                		<runAsRef oid="c0c010c0-d34d-b33f-f00d-11111111111e"/> <!-- Elaine -->
						<script>
							<code>
								'Some say ' + midpoint.getPrincipal().getUsername() + ' -- ' + actor?.getName()
							</code>
						</script>
					</expression>
				</outbound>
            </attribute>
            <attribute>
                <ref>ri:water</ref>
                <limitations>
                	<ignore>true</ignore>
                </limitations>
                <outbound>
                	<!-- Make sure this mapping is really ignored -->
					<expression>
						<value>fishy</value>
					</expression>
				</outbound>
				<inbound>
                	<!-- Make sure this mapping is really ignored -->
					<expression>
						<value>very FISHY</value>
					</expression>
					<target>
						<path>$user/fullName</path>
					</target>
				</inbound>
            </attribute>

			<iteration>
				<maxIterations>5</maxIterations>
			</iteration>
            
            <protected>
            	<icfs:name>daviejones</icfs:name>
            </protected>
            <protected>
            	<icfs:name>calypso</icfs:name>
            </protected>
            
            <activation>
            	<!-- Explicit existence mapping, but does the same as the default one -->
            	<existence>
            		<outbound>
            			<expression>
            				<asIs/>
            			</expression>
            		</outbound>
            	</existence>
            	<administrativeStatus>
            		<outbound>
                        <strength>strong</strength>
                    	<expression>
                        	<asIs/>
                        </expression>
            		</outbound>
            		<inbound>
            			<strength>weak</strength>
            			<condition>
            				<script>
            					<code>focus?.getActivation()?.getValidFrom() == null &amp;&amp; focus?.getActivation()?.getValidTo() == null</code>
            				</script>
            			</condition>
            		</inbound>
            	</administrativeStatus>
            </activation>
            
            <credentials>
                <password>
                    <outbound>
                    	<name>passwd-asis</name>
                    	<expression>
                        	<asIs/>
                        </expression>
                    </outbound>
                    <outbound>
                    	<name>passwd-generate</name>
                    	<strength>weak</strength>
                    	<expression>
                        	<generate/>
                        </expression>
                    </outbound>
                    <inbound>
                    	<strength>weak</strength>
                        <expression>
                            <generate/>
                        </expression>
                    </inbound>
                </password>
            </credentials>
            
		</objectType>
		
	</schemaHandling>
	
	<scripts>
		<script>
			<host>resource</host>
			<language>Logo</language>
			<argument>
				<script>
					<code>
					'user: ' + user?.getName()
					</code>
				</script> 
				<name>usr</name>
			</argument>
			<argument>
				<script>
					<!-- Note: We cannot test for account name as name is only assigned in provisioning -->
					<code>
					'account: ' + account?.getActivation()?.getAdministrativeStatus()
					</code>
				</script> 
				<name>acc</name>
			</argument>
			<argument>
				<script>
					<code>
					'resource: ' + resource?.getName()
					</code>
				</script> 
				<name>res</name>
			</argument>
			<argument>
 				<value>3</value>
				<name>size</name>
			</argument>
			<code>
to spiral :size
   if  :size > 30 [stop]
   fd :size rt 15
   spiral :size *1.02
end
			</code>
			<operation>add</operation>
			<order>after</order>
			<condition> 
				<script> <!-- MID-4008 -->
					<code>
						assert operation == 'add'
						return true;
					</code>
				</script>
			</condition>
		</script>
		<script>
			<host>resource</host>
			<language>Gibberish</language>
			<argument>
				<path>$user/costCenter</path>
				<name>howMuch</name>
			</argument>
			<argument>
				<value>from here to there</value>
				<name>howLong</name>
			</argument>
			<argument>
				<path>$user/name</path>
				<name>who</name>
			</argument>
			<argument>
				<path>$user/fullName</path>
				<name>whatchacallit</name>
			</argument>
			<code>Beware the Jabberwock, my son!</code>
			<operation>modify</operation>
			<order>before</order>
			<condition> 
				<script>  <!-- MID-4008 -->
					<code>
						assert operation == 'modify'
						return true;
					</code>
				</script>
			</condition>
		</script>
		<script>
			<host>resource</host>
			<language>Gibberish</language>
			<code>The Jabberwock, with eyes of flame</code>
			<operation>delete</operation>
			<order>after</order>
			<condition> 
				<script>  <!-- MID-4008 -->
					<code>
						assert operation == 'delete'
						return true;
					</code>
				</script>
			</condition>
		</script>
		<script>
			<host>resource</host>
			<language>Gibberish</language>
			<argument>
				<path>$focus/name</path>
				<name>who</name>
			</argument>
			<code>The vorpal blade went snicker-snack!</code>
			<operation>reconcile</operation>
			<order>before</order>
		</script>
		<script>
			<host>resource</host>
			<language>Gibberish</language>
			<argument>
				<path>$shadow/activation/administrativeStatus</path>
				<name>how</name>
			</argument>
			<code>He left it dead, and with its head</code>
			<operation>reconcile</operation>
			<order>after</order>
		</script>
	</scripts>
	
	<consistency>
		<avoidDuplicateValues>true</avoidDuplicateValues>
	</consistency>
	
	<synchronization>
		<objectSynchronization>
			<enabled>true</enabled>
			<correlation>
				<q:equal>
					<q:path>c:name</q:path>
					<expression>
						<path>declare namespace icfs="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/resource-schema-3";
                            $account/attributes/icfs:name</path>
					</expression>
				</q:equal>
			</correlation>
        </objectSynchronization>
	</synchronization>

</resource>
