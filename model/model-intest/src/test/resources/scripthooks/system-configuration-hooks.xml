<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<!--
  ~ Copyright (c) 2010-2017 Evolveum
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License");
  ~ you may not use this file except in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software
  ~ distributed under the License is distributed on an "AS IS" BASIS,
  ~ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~ See the License for the specific language governing permissions and
  ~ limitations under the License.
  -->

<systemConfiguration oid="00000000-0000-0000-0000-000000000001" version="0"
	xmlns="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
	xmlns:c="http://midpoint.evolveum.com/xml/ns/public/common/common-3">
    <name>SystemConfiguration</name>
    <modelHooks>
    	<change>
    		<hook>
    			<name>org</name>
                <state>primary</state>
                <focusType>c:UserType</focusType>
    			<script>
    				<code>
    					import com.evolveum.midpoint.prism.delta.*;
    					import com.evolveum.midpoint.xml.ns._public.common.common_3.*;
                        import com.evolveum.midpoint.model.intest.util.StaticHookRecorder;

                        log.info('ORG HOOK WAS HERE: ' + modelContext)
                        log.info('ORG focus='+focus+", "+focus.getClass())

                        StaticHookRecorder.record("org");

                        UserType user = (UserType)focus;
                        organizations = user.getOrganization();
                        log.info("orgs="+organizations);
                        for (orgName in organizations) {
                            log.info("orgName="+orgName)
                            org = midpoint.searchObjectByName(OrgType.class, orgName)
                            log.info("org="+org)
                            
                            if (org == null) {
                                // Org does not exist, lets create it
                                org = midpoint.createEmptyObjectWithName(OrgType.class, orgName);
                                topOrgRef = new ObjectReferenceType();
                                topOrgRef.setOid('80808080-8888-6666-0000-100000000001');
                                org.getParentOrgRef().add(topOrgRef);
                                
                                assignment = new AssignmentType();
                                topOrgTarget = new ObjectReferenceType();
                                topOrgTarget.setOid('80808080-8888-6666-0000-100000000001');
                                topOrgTarget.setType(OrgType.COMPLEX_TYPE);
                                assignment.setTargetRef(topOrgTarget);
                                org.getAssignment().add(assignment)
                                
                                midpoint.addObject(org);
                                
                                log.info("org "+org+" created")
                            }
                            
                            if (!midpoint.isDirectlyAssigned(org)) {
                                // The org is not assigned. Let's assign it.
                                log.info("BAR BAR BAR Not assigned")
                                // We need to construct a delta to do this
                                assignment = new AssignmentType();
                                orgTarget = new ObjectReferenceType();
                                orgTarget.setOid(org.getOid());
                                orgTarget.setType(OrgType.COMPLEX_TYPE);
                                assignment.setTargetRef(orgTarget);
                                assignmentDelta = ContainerDelta.createModificationAdd(UserType.F_ASSIGNMENT, UserType.class, prismContext, assignment);
                                modelContext.getFocusContext().swallowToSecondaryDelta(assignmentDelta);
                                // This forces complete recompute of context in next stage
                                //modelContext.rot();
                            }
                        }
    				</code>
    			</script>
    		</hook>
            <hook>
                <name>Bar</name>
                <script>
                    <code>
                        import com.evolveum.midpoint.xml.ns._public.common.common_3.*;
                        import com.evolveum.midpoint.model.api.context.ModelState;
                        import com.evolveum.midpoint.model.intest.util.StaticHookRecorder;

                        log.info('BAR HOOK WAS HERE: ' + modelContext)
                        log.info('BAR focus='+focus+", "+focus.getClass())

                        StaticHookRecorder.record("bar");

                        if (focus instanceof UserType &amp;&amp; modelContext.getState() == ModelState.PRIMARY) {
                            log.info("BAR hook has what it wanted");
                            StaticHookRecorder.record("bar-user");
                        }
                    </code>
                </script>
            </hook>

            <hook>
                <name>foo</name>
                <script>
                    <code>
                        import com.evolveum.midpoint.model.intest.util.StaticHookRecorder;

                        log.info('FOO HOOK WAS HERE: ' + modelContext)

                        StaticHookRecorder.record("foo");
                    </code>
                </script>
            </hook>
    	</change>
    </modelHooks>
    <logging>
    	<rootLoggerAppender>File Appender</rootLoggerAppender>
    	<rootLoggerLevel>INFO</rootLoggerLevel>
        <classLogger>
	        <level>TRACE</level>
	        <package>com.evolveum.midpoint.common.LoggingConfigurationManager</package>
      	</classLogger>
        <c:classLogger>
            <c:level>TRACE</c:level>
            <c:package>com.evolveum.midpoint.notifications</c:package>
        </c:classLogger>
        <appender xsi:type="c:FileAppenderConfigurationType" name="File Appender" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
            <pattern>%date [%thread] %-5level \(%logger{46}\): %message%n</pattern>
            <fileName>target/test.log</fileName>
            <append>true</append>
        </appender>
    </logging>
</systemConfiguration>
