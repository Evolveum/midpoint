/*
 * Copyright (c) 2010-2017 Evolveum and contributors
 *
 * Licensed under the EUPL-1.2 or later.
 */

package com.evolveum.midpoint.model.impl.sync;

import com.evolveum.midpoint.provisioning.api.EventDispatcher;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import jakarta.annotation.PostConstruct;
import jakarta.annotation.PreDestroy;

/**
 * Helper class that registers SynchronizationService as a provisioning change notification listener.
 * It can no longer be done in SynchronizationServiceImpl itself, because we don't want to register the implementation,
 * but its proxy generated by Spring AOP.
 */
@Component
public class SynchronizationServiceRegisterAgent {

    @Autowired private SynchronizationService synchronizationService;
    @Autowired private EventDispatcher provisioningEventDispatcher;

    @PostConstruct
    public void registerForResourceObjectChangeNotifications() {
        provisioningEventDispatcher.registerListener(synchronizationService);
    }

    @PreDestroy
    public void unregisterForResourceObjectChangeNotifications() {
        provisioningEventDispatcher.unregisterListener(synchronizationService);
    }
}
