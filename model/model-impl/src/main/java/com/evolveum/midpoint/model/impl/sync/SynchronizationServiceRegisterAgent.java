/*
 * Copyright (c) 2010-2017 Evolveum and contributors
 *
 * This work is dual-licensed under the Apache License 2.0
 * and European Union Public License. See LICENSE file for details.
 */

package com.evolveum.midpoint.model.impl.sync;

import com.evolveum.midpoint.provisioning.api.ChangeNotificationDispatcher;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Component;

import javax.annotation.PostConstruct;
import javax.annotation.PreDestroy;

/**
 * Helper class that registers SynchronizationService as a provisioning change notification listener.
 * It can no longer be done in SynchronizationServiceImpl itself, because we don't want to register the implementation, but its proxy
 * generated by Spring AOP.
 *
 * @author mederly
 */

@Component
public class SynchronizationServiceRegisterAgent {

    @Autowired
    private SynchronizationService synchronizationService;

    @Autowired
    private ChangeNotificationDispatcher notificationManager;

    @PostConstruct
    public void registerForResourceObjectChangeNotifications() {
        notificationManager.registerNotificationListener(synchronizationService);
    }

    @PreDestroy
    public void unregisterForResourceObjectChangeNotifications() {
        notificationManager.unregisterNotificationListener(synchronizationService);
    }
}
