<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (C) 2010-2022 Evolveum and contributors
  ~
  ~ This work is dual-licensed under the Apache License 2.0
  ~ and European Union Public License. See LICENSE file for details.
  -->

<resource oid="db8bb18c-f5fe-4c05-91c2-99e9658b82c7"
          xmlns="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
          xmlns:c="http://midpoint.evolveum.com/xml/ns/public/common/common-3"
          xmlns:q="http://prism.evolveum.com/xml/ns/public/query-3"
          xmlns:ri="http://midpoint.evolveum.com/xml/ns/public/resource/instance-3">

    <name>resource-dummy-source</name>
    <connectorRef type="c:ConnectorType">
        <filter>
            <q:and>
                <q:equal>
                    <q:path>connectorType</q:path>
                    <q:value>com.evolveum.icf.dummy.connector.DummyConnector</q:value>
                </q:equal>
                <q:equal>
                    <q:path>connectorVersion</q:path>
                    <q:value>2.0</q:value>
                </q:equal>
            </q:and>
        </filter>
    </connectorRef>
    <connectorConfiguration xmlns:icfi="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/bundle/com.evolveum.icf.dummy/com.evolveum.icf.dummy.connector.DummyConnector"
                   xmlns:icfc="http://midpoint.evolveum.com/xml/ns/public/connector/icf-1/connector-schema-3">
        <icfc:configurationProperties>
            <icfi:instanceId>source</icfi:instanceId>
        </icfc:configurationProperties>
    </connectorConfiguration>

    <schemaHandling>
        <objectType>
            <kind>account</kind>
            <intent>default</intent>
            <default>true</default>
            <objectClass>ri:AccountObjectClass</objectClass>
            <attribute>
                <ref>ri:correlationCode</ref>
                <storageStrategy>notIndexed</storageStrategy> <!-- necessary for generic repo (more than 255 chars) -->
            </attribute>
            <correlation>
                <correlators>
                    <expression>
                        <ownerRef>
                            <script>
                                <code>
                                    def code = basic.stringify(basic.getAttributeValue(projection, 'correlationCode'))
                                    log.info('Code:\n{}', code)
                                    def result = Eval.me('correlationContext', correlationContext, code)
                                    log.info('Result: {}', result)
                                    result
                                </code>
                            </script>
                        </ownerRef>
                    </expression>
                </correlators>
            </correlation>
        </objectType>
    </schemaHandling>
</resource>
